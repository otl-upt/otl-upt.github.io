/*! @azure/msal-common v14.15.0 2024-09-20 */const u={LIBRARY_NAME:"MSAL.JS",SKU:"msal.js.common",CACHE_PREFIX:"msal",DEFAULT_AUTHORITY:"https://login.microsoftonline.com/common/",DEFAULT_AUTHORITY_HOST:"login.microsoftonline.com",DEFAULT_COMMON_TENANT:"common",ADFS:"adfs",DSTS:"dstsv2",AAD_INSTANCE_DISCOVERY_ENDPT:"https://login.microsoftonline.com/common/discovery/instance?api-version=1.1&authorization_endpoint=",CIAM_AUTH_URL:".ciamlogin.com",AAD_TENANT_DOMAIN_SUFFIX:".onmicrosoft.com",RESOURCE_DELIM:"|",NO_ACCOUNT:"NO_ACCOUNT",CLAIMS:"claims",CONSUMER_UTID:"9188040d-6c67-4c5b-b112-36a304b66dad",OPENID_SCOPE:"openid",PROFILE_SCOPE:"profile",OFFLINE_ACCESS_SCOPE:"offline_access",EMAIL_SCOPE:"email",CODE_RESPONSE_TYPE:"code",CODE_GRANT_TYPE:"authorization_code",RT_GRANT_TYPE:"refresh_token",FRAGMENT_RESPONSE_MODE:"fragment",S256_CODE_CHALLENGE_METHOD:"S256",URL_FORM_CONTENT_TYPE:"application/x-www-form-urlencoded;charset=utf-8",AUTHORIZATION_PENDING:"authorization_pending",NOT_DEFINED:"not_defined",EMPTY_STRING:"",NOT_APPLICABLE:"N/A",NOT_AVAILABLE:"Not Available",FORWARD_SLASH:"/",IMDS_ENDPOINT:"http://169.254.169.254/metadata/instance/compute/location",IMDS_VERSION:"2020-06-01",IMDS_TIMEOUT:2e3,AZURE_REGION_AUTO_DISCOVER_FLAG:"TryAutoDetect",REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX:"login.microsoft.com",KNOWN_PUBLIC_CLOUDS:["login.microsoftonline.com","login.windows.net","login.microsoft.com","sts.windows.net"],TOKEN_RESPONSE_TYPE:"token",ID_TOKEN_RESPONSE_TYPE:"id_token",SHR_NONCE_VALIDITY:240,INVALID_INSTANCE:"invalid_instance"},Ye={SUCCESS:200,SUCCESS_RANGE_START:200,SUCCESS_RANGE_END:299,REDIRECT:302,CLIENT_ERROR:400,CLIENT_ERROR_RANGE_START:400,BAD_REQUEST:400,UNAUTHORIZED:401,NOT_FOUND:404,REQUEST_TIMEOUT:408,TOO_MANY_REQUESTS:429,CLIENT_ERROR_RANGE_END:499,SERVER_ERROR:500,SERVER_ERROR_RANGE_START:500,SERVICE_UNAVAILABLE:503,GATEWAY_TIMEOUT:504,SERVER_ERROR_RANGE_END:599,MULTI_SIDED_ERROR:600},He=[u.OPENID_SCOPE,u.PROFILE_SCOPE,u.OFFLINE_ACCESS_SCOPE],Nn=[...He,u.EMAIL_SCOPE],ee={CONTENT_TYPE:"Content-Type",RETRY_AFTER:"Retry-After",CCS_HEADER:"X-AnchorMailbox",WWWAuthenticate:"WWW-Authenticate",AuthenticationInfo:"Authentication-Info",X_MS_REQUEST_ID:"x-ms-request-id",X_MS_HTTP_VERSION:"x-ms-httpver"},H={ID_TOKEN:"idtoken",CLIENT_INFO:"client.info",ADAL_ID_TOKEN:"adal.idtoken",ERROR:"error",ERROR_DESC:"error.description",ACTIVE_ACCOUNT:"active-account",ACTIVE_ACCOUNT_FILTERS:"active-account-filters"},ge={COMMON:"common",ORGANIZATIONS:"organizations",CONSUMERS:"consumers"},We={ACCESS_TOKEN:"access_token",XMS_CC:"xms_cc"},D={LOGIN:"login",SELECT_ACCOUNT:"select_account",CONSENT:"consent",NONE:"none",CREATE:"create",NO_SESSION:"no_session"},Pn={PLAIN:"plain",S256:"S256"},qe={QUERY:"query",FRAGMENT:"fragment"},Xr={...qe,FORM_POST:"form_post"},so={IMPLICIT_GRANT:"implicit",AUTHORIZATION_CODE_GRANT:"authorization_code",CLIENT_CREDENTIALS_GRANT:"client_credentials",RESOURCE_OWNER_PASSWORD_GRANT:"password",REFRESH_TOKEN_GRANT:"refresh_token",DEVICE_CODE_GRANT:"device_code",JWT_BEARER:"urn:ietf:params:oauth:grant-type:jwt-bearer"},je={MSSTS_ACCOUNT_TYPE:"MSSTS",ADFS_ACCOUNT_TYPE:"ADFS",MSAV1_ACCOUNT_TYPE:"MSA",GENERIC_ACCOUNT_TYPE:"Generic"},F={CACHE_KEY_SEPARATOR:"-",CLIENT_INFO_SEPARATOR:"."},I={ID_TOKEN:"IdToken",ACCESS_TOKEN:"AccessToken",ACCESS_TOKEN_WITH_AUTH_SCHEME:"AccessToken_With_AuthScheme",REFRESH_TOKEN:"RefreshToken"},qt="appmetadata",Zr="client_info",xe="1",nt={CACHE_KEY:"authority-metadata",REFRESH_TIME_SECONDS:3600*24},G={CONFIG:"config",CACHE:"cache",NETWORK:"network",HARDCODED_VALUES:"hardcoded_values"},K={SCHEMA_VERSION:5,MAX_CUR_HEADER_BYTES:80,MAX_LAST_HEADER_BYTES:330,MAX_CACHED_ERRORS:50,CACHE_KEY:"server-telemetry",CATEGORY_SEPARATOR:"|",VALUE_SEPARATOR:",",OVERFLOW_TRUE:"1",OVERFLOW_FALSE:"0",UNKNOWN_ERROR:"unknown_error"},k={BEARER:"Bearer",POP:"pop",SSH:"ssh-cert"},Be={DEFAULT_THROTTLE_TIME_SECONDS:60,DEFAULT_MAX_THROTTLE_TIME_SECONDS:3600,THROTTLING_PREFIX:"throttling",X_MS_LIB_CAPABILITY_VALUE:"retry-after, h429"},Mn={INVALID_GRANT_ERROR:"invalid_grant",CLIENT_MISMATCH_ERROR:"client_mismatch"},Un={username:"username",password:"password"},Je={httpSuccess:200,httpBadRequest:400},Ee={FAILED_AUTO_DETECTION:"1",INTERNAL_CACHE:"2",ENVIRONMENT_VARIABLE:"3",IMDS:"4"},St={CONFIGURED_MATCHES_DETECTED:"1",CONFIGURED_NO_AUTO_DETECTION:"2",CONFIGURED_NOT_DETECTED:"3",AUTO_DETECTION_REQUESTED_SUCCESSFUL:"4",AUTO_DETECTION_REQUESTED_FAILED:"5"},ue={NOT_APPLICABLE:"0",FORCE_REFRESH_OR_CLAIMS:"1",NO_CACHED_ACCESS_TOKEN:"2",CACHED_ACCESS_TOKEN_EXPIRED:"3",PROACTIVELY_REFRESHED:"4"},ei={Jwt:"JWT",Jwk:"JWK",Pop:"pop"},ti=300;/*! @azure/msal-common v14.15.0 2024-09-20 */const zt="unexpected_error",ni="post_request_failed";/*! @azure/msal-common v14.15.0 2024-09-20 */const Ln={[zt]:"Unexpected error in authentication.",[ni]:"Post request failed from the network, could be a 4xx/5xx or a network unavailability. Please check the exact error code for details."};class N extends Error{constructor(e,t,n){const o=t?`${e}: ${t}`:e;super(o),Object.setPrototypeOf(this,N.prototype),this.errorCode=e||u.EMPTY_STRING,this.errorMessage=t||u.EMPTY_STRING,this.subError=n||u.EMPTY_STRING,this.name="AuthError"}setCorrelationId(e){this.correlationId=e}}function co(a,e){return new N(a,e?`${Ln[a]} ${e}`:Ln[a])}/*! @azure/msal-common v14.15.0 2024-09-20 */const $t="client_info_decoding_error",ho="client_info_empty_error",Vt="token_parsing_error",lo="null_or_empty_token",ie="endpoints_resolution_error",uo="network_error",go="openid_config_error",po="hash_not_deserialized",Ne="invalid_state",mo="state_mismatch",ot="state_not_found",fo="nonce_mismatch",Qt="auth_time_not_found",Co="max_age_transpired",oi="multiple_matching_tokens",ri="multiple_matching_accounts",To="multiple_matching_appMetadata",yo="request_cannot_be_made",Ao="cannot_remove_empty_scope",Io="cannot_append_scopeset",bt="empty_input_scopeset",ii="device_code_polling_cancelled",ai="device_code_expired",si="device_code_unknown_error",Yt="no_account_in_silent_request",Eo="invalid_cache_record",Wt="invalid_cache_environment",Ot="no_account_found",Nt="no_crypto_object",Pt="unexpected_credential_type",ci="invalid_assertion",hi="invalid_client_credential",ae="token_refresh_required",li="user_timeout_reached",So="token_claims_cnf_required_for_signedjwt",vo="authorization_code_missing_from_server_response",wo="binding_key_not_removed",_o="end_session_endpoint_not_supported",jt="key_id_missing",di="no_network_connectivity",ui="user_canceled",gi="missing_tenant_id_error",v="method_not_implemented",pi="nested_app_auth_bridge_disabled";/*! @azure/msal-common v14.15.0 2024-09-20 */const Hn={[$t]:"The client info could not be parsed/decoded correctly",[ho]:"The client info was empty",[Vt]:"Token cannot be parsed",[lo]:"The token is null or empty",[ie]:"Endpoints cannot be resolved",[uo]:"Network request failed",[go]:"Could not retrieve endpoints. Check your authority and verify the .well-known/openid-configuration endpoint returns the required endpoints.",[po]:"The hash parameters could not be deserialized",[Ne]:"State was not the expected format",[mo]:"State mismatch error",[ot]:"State not found",[fo]:"Nonce mismatch error",[Qt]:"Max Age was requested and the ID token is missing the auth_time variable. auth_time is an optional claim and is not enabled by default - it must be enabled. See https://aka.ms/msaljs/optional-claims for more information.",[Co]:"Max Age is set to 0, or too much time has elapsed since the last end-user authentication.",[oi]:"The cache contains multiple tokens satisfying the requirements. Call AcquireToken again providing more requirements such as authority or account.",[ri]:"The cache contains multiple accounts satisfying the given parameters. Please pass more info to obtain the correct account",[To]:"The cache contains multiple appMetadata satisfying the given parameters. Please pass more info to obtain the correct appMetadata",[yo]:"Token request cannot be made without authorization code or refresh token.",[Ao]:"Cannot remove null or empty scope from ScopeSet",[Io]:"Cannot append ScopeSet",[bt]:"Empty input ScopeSet cannot be processed",[ii]:"Caller has cancelled token endpoint polling during device code flow by setting DeviceCodeRequest.cancel = true.",[ai]:"Device code is expired.",[si]:"Device code stopped polling for unknown reasons.",[Yt]:"Please pass an account object, silent flow is not supported without account information",[Eo]:"Cache record object was null or undefined.",[Wt]:"Invalid environment when attempting to create cache entry",[Ot]:"No account found in cache for given key.",[Nt]:"No crypto object detected.",[Pt]:"Unexpected credential type.",[ci]:"Client assertion must meet requirements described in https://tools.ietf.org/html/rfc7515",[hi]:"Client credential (secret, certificate, or assertion) must not be empty when creating a confidential client. An application should at most have one credential",[ae]:"Cannot return token from cache because it must be refreshed. This may be due to one of the following reasons: forceRefresh parameter is set to true, claims have been requested, there is no cached access token or it is expired.",[li]:"User defined timeout for device code polling reached",[So]:"Cannot generate a POP jwt if the token_claims are not populated",[vo]:"Server response does not contain an authorization code to proceed",[wo]:"Could not remove the credential's binding key from storage.",[_o]:"The provided authority does not support logout",[jt]:"A keyId value is missing from the requested bound token's cache record and is required to match the token to it's stored binding key.",[di]:"No network connectivity. Check your internet connection.",[ui]:"User cancelled the flow.",[gi]:"A tenant id - not common, organizations, or consumers - must be specified when using the client_credentials flow.",[v]:"This method has not been implemented",[pi]:"The nested app auth bridge is disabled"};class ut extends N{constructor(e,t){super(e,t?`${Hn[e]}: ${t}`:Hn[e]),this.name="ClientAuthError",Object.setPrototypeOf(this,ut.prototype)}}function g(a,e){return new ut(a,e)}/*! @azure/msal-common v14.15.0 2024-09-20 */const rt={createNewGuid:()=>{throw g(v)},base64Decode:()=>{throw g(v)},base64Encode:()=>{throw g(v)},base64UrlEncode:()=>{throw g(v)},encodeKid:()=>{throw g(v)},async getPublicKeyThumbprint(){throw g(v)},async removeTokenBindingKey(){throw g(v)},async clearKeystore(){throw g(v)},async signJwt(){throw g(v)},async hashString(){throw g(v)}};/*! @azure/msal-common v14.15.0 2024-09-20 */var O;(function(a){a[a.Error=0]="Error",a[a.Warning=1]="Warning",a[a.Info=2]="Info",a[a.Verbose=3]="Verbose",a[a.Trace=4]="Trace"})(O||(O={}));class pe{constructor(e,t,n){this.level=O.Info;const o=()=>{},r=e||pe.createDefaultLoggerOptions();this.localCallback=r.loggerCallback||o,this.piiLoggingEnabled=r.piiLoggingEnabled||!1,this.level=typeof r.logLevel=="number"?r.logLevel:O.Info,this.correlationId=r.correlationId||u.EMPTY_STRING,this.packageName=t||u.EMPTY_STRING,this.packageVersion=n||u.EMPTY_STRING}static createDefaultLoggerOptions(){return{loggerCallback:()=>{},piiLoggingEnabled:!1,logLevel:O.Info}}clone(e,t,n){return new pe({loggerCallback:this.localCallback,piiLoggingEnabled:this.piiLoggingEnabled,logLevel:this.level,correlationId:n||this.correlationId},e,t)}logMessage(e,t){if(t.logLevel>this.level||!this.piiLoggingEnabled&&t.containsPii)return;const r=`${`[${new Date().toUTCString()}] : [${t.correlationId||this.correlationId||""}]`} : ${this.packageName}@${this.packageVersion} : ${O[t.logLevel]} - ${e}`;this.executeCallback(t.logLevel,r,t.containsPii||!1)}executeCallback(e,t,n){this.localCallback&&this.localCallback(e,t,n)}error(e,t){this.logMessage(e,{logLevel:O.Error,containsPii:!1,correlationId:t||u.EMPTY_STRING})}errorPii(e,t){this.logMessage(e,{logLevel:O.Error,containsPii:!0,correlationId:t||u.EMPTY_STRING})}warning(e,t){this.logMessage(e,{logLevel:O.Warning,containsPii:!1,correlationId:t||u.EMPTY_STRING})}warningPii(e,t){this.logMessage(e,{logLevel:O.Warning,containsPii:!0,correlationId:t||u.EMPTY_STRING})}info(e,t){this.logMessage(e,{logLevel:O.Info,containsPii:!1,correlationId:t||u.EMPTY_STRING})}infoPii(e,t){this.logMessage(e,{logLevel:O.Info,containsPii:!0,correlationId:t||u.EMPTY_STRING})}verbose(e,t){this.logMessage(e,{logLevel:O.Verbose,containsPii:!1,correlationId:t||u.EMPTY_STRING})}verbosePii(e,t){this.logMessage(e,{logLevel:O.Verbose,containsPii:!0,correlationId:t||u.EMPTY_STRING})}trace(e,t){this.logMessage(e,{logLevel:O.Trace,containsPii:!1,correlationId:t||u.EMPTY_STRING})}tracePii(e,t){this.logMessage(e,{logLevel:O.Trace,containsPii:!0,correlationId:t||u.EMPTY_STRING})}isPiiLoggingEnabled(){return this.piiLoggingEnabled||!1}}/*! @azure/msal-common v14.15.0 2024-09-20 */const ko="@azure/msal-common",Jt="14.15.0";/*! @azure/msal-common v14.15.0 2024-09-20 */const Xt={None:"none",AzurePublic:"https://login.microsoftonline.com",AzurePpe:"https://login.windows-ppe.net",AzureChina:"https://login.chinacloudapi.cn",AzureGermany:"https://login.microsoftonline.de",AzureUsGovernment:"https://login.microsoftonline.us"};/*! @azure/msal-common v14.15.0 2024-09-20 */function Ae(a,e){const t=mi(a);try{const n=e(t);return JSON.parse(n)}catch{throw g(Vt)}}function mi(a){if(!a)throw g(lo);const t=/^([^\.\s]*)\.([^\.\s]+)\.([^\.\s]*)$/.exec(a);if(!t||t.length<4)throw g(Vt);return t[2]}function Ro(a,e){if(e===0||Date.now()-3e5>a+e)throw g(Co)}/*! @azure/msal-common v14.15.0 2024-09-20 */function oe(){return Math.round(new Date().getTime()/1e3)}function Mt(a,e){const t=Number(a)||0;return oe()+e>t}function fi(a){return Number(a)>oe()}/*! @azure/msal-common v14.15.0 2024-09-20 */function _e(a){return[Ci(a),Ti(a),yi(a),Ai(a),Ii(a)].join(F.CACHE_KEY_SEPARATOR).toLowerCase()}function gt(a,e,t,n,o){return{credentialType:I.ID_TOKEN,homeAccountId:a,environment:e,clientId:n,secret:t,realm:o}}function pt(a,e,t,n,o,r,i,s,c,h,d,p,f,y,E){var M,x;const S={homeAccountId:a,credentialType:I.ACCESS_TOKEN,secret:t,cachedAt:oe().toString(),expiresOn:i.toString(),extendedExpiresOn:s.toString(),environment:e,clientId:n,realm:o,target:r,tokenType:d||k.BEARER};if(p&&(S.userAssertionHash=p),h&&(S.refreshOn=h.toString()),y&&(S.requestedClaims=y,S.requestedClaimsHash=E),((M=S.tokenType)==null?void 0:M.toLowerCase())!==k.BEARER.toLowerCase())switch(S.credentialType=I.ACCESS_TOKEN_WITH_AUTH_SCHEME,S.tokenType){case k.POP:const V=Ae(t,c);if(!((x=V==null?void 0:V.cnf)!=null&&x.kid))throw g(So);S.keyId=V.cnf.kid;break;case k.SSH:S.keyId=f}return S}function bo(a,e,t,n,o,r,i){const s={credentialType:I.REFRESH_TOKEN,homeAccountId:a,environment:e,clientId:n,secret:t};return r&&(s.userAssertionHash=r),o&&(s.familyId=o),i&&(s.expiresOn=i.toString()),s}function Zt(a){return a.hasOwnProperty("homeAccountId")&&a.hasOwnProperty("environment")&&a.hasOwnProperty("credentialType")&&a.hasOwnProperty("clientId")&&a.hasOwnProperty("secret")}function Dn(a){return a?Zt(a)&&a.hasOwnProperty("realm")&&a.hasOwnProperty("target")&&(a.credentialType===I.ACCESS_TOKEN||a.credentialType===I.ACCESS_TOKEN_WITH_AUTH_SCHEME):!1}function Kn(a){return a?Zt(a)&&a.hasOwnProperty("realm")&&a.credentialType===I.ID_TOKEN:!1}function xn(a){return a?Zt(a)&&a.credentialType===I.REFRESH_TOKEN:!1}function Ci(a){return[a.homeAccountId,a.environment].join(F.CACHE_KEY_SEPARATOR).toLowerCase()}function Ti(a){const e=a.credentialType===I.REFRESH_TOKEN&&a.familyId||a.clientId;return[a.credentialType,e,a.realm||""].join(F.CACHE_KEY_SEPARATOR).toLowerCase()}function yi(a){return(a.target||"").toLowerCase()}function Ai(a){return(a.requestedClaimsHash||"").toLowerCase()}function Ii(a){return a.tokenType&&a.tokenType.toLowerCase()!==k.BEARER.toLowerCase()?a.tokenType.toLowerCase():""}function Ei(a,e){const t=a.indexOf(K.CACHE_KEY)===0;let n=!0;return e&&(n=e.hasOwnProperty("failedRequests")&&e.hasOwnProperty("errors")&&e.hasOwnProperty("cacheHits")),t&&n}function Si(a,e){let t=!1;a&&(t=a.indexOf(Be.THROTTLING_PREFIX)===0);let n=!0;return e&&(n=e.hasOwnProperty("throttleTime")),t&&n}function vi({environment:a,clientId:e}){return[qt,a,e].join(F.CACHE_KEY_SEPARATOR).toLowerCase()}function wi(a,e){return e?a.indexOf(qt)===0&&e.hasOwnProperty("clientId")&&e.hasOwnProperty("environment"):!1}function _i(a,e){return e?a.indexOf(nt.CACHE_KEY)===0&&e.hasOwnProperty("aliases")&&e.hasOwnProperty("preferred_cache")&&e.hasOwnProperty("preferred_network")&&e.hasOwnProperty("canonical_authority")&&e.hasOwnProperty("authorization_endpoint")&&e.hasOwnProperty("token_endpoint")&&e.hasOwnProperty("issuer")&&e.hasOwnProperty("aliasesFromNetwork")&&e.hasOwnProperty("endpointsFromNetwork")&&e.hasOwnProperty("expiresAt")&&e.hasOwnProperty("jwks_uri"):!1}function Bn(){return oe()+nt.REFRESH_TIME_SECONDS}function Xe(a,e,t){a.authorization_endpoint=e.authorization_endpoint,a.token_endpoint=e.token_endpoint,a.end_session_endpoint=e.end_session_endpoint,a.issuer=e.issuer,a.endpointsFromNetwork=t,a.jwks_uri=e.jwks_uri}function vt(a,e,t){a.aliases=e.aliases,a.preferred_cache=e.preferred_cache,a.preferred_network=e.preferred_network,a.aliasesFromNetwork=t}function Fn(a){return a.expiresAt<=oe()}/*! @azure/msal-common v14.15.0 2024-09-20 */const Oo="redirect_uri_empty",ki="claims_request_parsing_error",No="authority_uri_insecure",Ke="url_parse_error",Po="empty_url_error",Mo="empty_input_scopes_error",Uo="invalid_prompt_value",en="invalid_claims",Lo="token_request_empty",Ho="logout_request_empty",Do="invalid_code_challenge_method",tn="pkce_params_missing",nn="invalid_cloud_discovery_metadata",Ko="invalid_authority_metadata",xo="untrusted_authority",mt="missing_ssh_jwk",Bo="missing_ssh_kid",Ri="missing_nonce_authentication_header",bi="invalid_authentication_header",Fo="cannot_set_OIDCOptions",Go="cannot_allow_native_broker",qo="authority_mismatch";/*! @azure/msal-common v14.15.0 2024-09-20 */const Oi={[Oo]:"A redirect URI is required for all calls, and none has been set.",[ki]:"Could not parse the given claims request object.",[No]:"Authority URIs must use https.  Please see here for valid authority configuration options: https://docs.microsoft.com/en-us/azure/active-directory/develop/msal-js-initializing-client-applications#configuration-options",[Ke]:"URL could not be parsed into appropriate segments.",[Po]:"URL was empty or null.",[Mo]:"Scopes cannot be passed as null, undefined or empty array because they are required to obtain an access token.",[Uo]:"Please see here for valid configuration options: https://azuread.github.io/microsoft-authentication-library-for-js/ref/modules/_azure_msal_common.html#commonauthorizationurlrequest",[en]:"Given claims parameter must be a stringified JSON object.",[Lo]:"Token request was empty and not found in cache.",[Ho]:"The logout request was null or undefined.",[Do]:'code_challenge_method passed is invalid. Valid values are "plain" and "S256".',[tn]:"Both params: code_challenge and code_challenge_method are to be passed if to be sent in the request",[nn]:"Invalid cloudDiscoveryMetadata provided. Must be a stringified JSON object containing tenant_discovery_endpoint and metadata fields",[Ko]:"Invalid authorityMetadata provided. Must by a stringified JSON object containing authorization_endpoint, token_endpoint, issuer fields.",[xo]:"The provided authority is not a trusted authority. Please include this authority in the knownAuthorities config parameter.",[mt]:"Missing sshJwk in SSH certificate request. A stringified JSON Web Key is required when using the SSH authentication scheme.",[Bo]:"Missing sshKid in SSH certificate request. A string that uniquely identifies the public SSH key is required when using the SSH authentication scheme.",[Ri]:"Unable to find an authentication header containing server nonce. Either the Authentication-Info or WWW-Authenticate headers must be present in order to obtain a server nonce.",[bi]:"Invalid authentication header provided",[Fo]:"Cannot set OIDCOptions parameter. Please change the protocol mode to OIDC or use a non-Microsoft authority.",[Go]:"Cannot set allowNativeBroker parameter to true when not in AAD protocol mode.",[qo]:"Authority mismatch error. Authority provided in login request or PublicClientApplication config does not match the environment of the provided account. Please use a matching account or make an interactive request to login to this authority."};class on extends N{constructor(e){super(e,Oi[e]),this.name="ClientConfigurationError",Object.setPrototypeOf(this,on.prototype)}}function R(a){return new on(a)}/*! @azure/msal-common v14.15.0 2024-09-20 */class Y{static isEmptyObj(e){if(e)try{const t=JSON.parse(e);return Object.keys(t).length===0}catch{}return!0}static startsWith(e,t){return e.indexOf(t)===0}static endsWith(e,t){return e.length>=t.length&&e.lastIndexOf(t)===e.length-t.length}static queryStringToObject(e){const t={},n=e.split("&"),o=r=>decodeURIComponent(r.replace(/\+/g," "));return n.forEach(r=>{if(r.trim()){const[i,s]=r.split(/=(.+)/g,2);i&&s&&(t[o(i)]=o(s))}}),t}static trimArrayEntries(e){return e.map(t=>t.trim())}static removeEmptyStringsFromArray(e){return e.filter(t=>!!t)}static jsonParseHelper(e){try{return JSON.parse(e)}catch{return null}}static matchPattern(e,t){return new RegExp(e.replace(/\\/g,"\\\\").replace(/\*/g,"[^ ]*").replace(/\?/g,"\\?")).test(t)}}/*! @azure/msal-common v14.15.0 2024-09-20 */class P{constructor(e){const t=e?Y.trimArrayEntries([...e]):[],n=t?Y.removeEmptyStringsFromArray(t):[];this.validateInputScopes(n),this.scopes=new Set,n.forEach(o=>this.scopes.add(o))}static fromString(e){const n=(e||u.EMPTY_STRING).split(" ");return new P(n)}static createSearchScopes(e){const t=new P(e);return t.containsOnlyOIDCScopes()?t.removeScope(u.OFFLINE_ACCESS_SCOPE):t.removeOIDCScopes(),t}validateInputScopes(e){if(!e||e.length<1)throw R(Mo)}containsScope(e){const t=this.printScopesLowerCase().split(" "),n=new P(t);return e?n.scopes.has(e.toLowerCase()):!1}containsScopeSet(e){return!e||e.scopes.size<=0?!1:this.scopes.size>=e.scopes.size&&e.asArray().every(t=>this.containsScope(t))}containsOnlyOIDCScopes(){let e=0;return Nn.forEach(t=>{this.containsScope(t)&&(e+=1)}),this.scopes.size===e}appendScope(e){e&&this.scopes.add(e.trim())}appendScopes(e){try{e.forEach(t=>this.appendScope(t))}catch{throw g(Io)}}removeScope(e){if(!e)throw g(Ao);this.scopes.delete(e.trim())}removeOIDCScopes(){Nn.forEach(e=>{this.scopes.delete(e)})}unionScopeSets(e){if(!e)throw g(bt);const t=new Set;return e.scopes.forEach(n=>t.add(n.toLowerCase())),this.scopes.forEach(n=>t.add(n.toLowerCase())),t}intersectingScopeSets(e){if(!e)throw g(bt);e.containsOnlyOIDCScopes()||e.removeOIDCScopes();const t=this.unionScopeSets(e),n=e.getScopeCount(),o=this.getScopeCount();return t.size<o+n}getScopeCount(){return this.scopes.size}asArray(){const e=[];return this.scopes.forEach(t=>e.push(t)),e}printScopes(){return this.scopes?this.asArray().join(" "):u.EMPTY_STRING}printScopesLowerCase(){return this.printScopes().toLowerCase()}}/*! @azure/msal-common v14.15.0 2024-09-20 */function it(a,e){if(!a)throw g(ho);try{const t=e(a);return JSON.parse(t)}catch{throw g($t)}}function ke(a){if(!a)throw g($t);const e=a.split(F.CLIENT_INFO_SEPARATOR,2);return{uid:e[0],utid:e.length<2?u.EMPTY_STRING:e[1]}}/*! @azure/msal-common v14.15.0 2024-09-20 */function at(a,e){return!!a&&!!e&&a===e.split(".")[1]}function rn(a,e,t,n){if(n){const{oid:o,sub:r,tid:i,name:s,tfp:c,acr:h}=n,d=i||c||h||"";return{tenantId:d,localAccountId:o||r||"",name:s,isHomeTenant:at(d,a)}}else return{tenantId:t,localAccountId:e,isHomeTenant:at(t,a)}}function an(a,e,t,n){let o=a;if(e){const{isHomeTenant:r,...i}=e;o={...a,...i}}if(t){const{isHomeTenant:r,...i}=rn(a.homeAccountId,a.localAccountId,a.tenantId,t);return o={...o,...i,idTokenClaims:t,idToken:n},o}return o}/*! @azure/msal-common v14.15.0 2024-09-20 */const Q={Default:0,Adfs:1,Dsts:2,Ciam:3};/*! @azure/msal-common v14.15.0 2024-09-20 */function zo(a){return a&&(a.tid||a.tfp||a.acr)||null}/*! @azure/msal-common v14.15.0 2024-09-20 */const ce={AAD:"AAD",OIDC:"OIDC"};/*! @azure/msal-common v14.15.0 2024-09-20 */class L{generateAccountId(){return[this.homeAccountId,this.environment].join(F.CACHE_KEY_SEPARATOR).toLowerCase()}generateAccountKey(){return L.generateAccountCacheKey({homeAccountId:this.homeAccountId,environment:this.environment,tenantId:this.realm,username:this.username,localAccountId:this.localAccountId})}getAccountInfo(){return{homeAccountId:this.homeAccountId,environment:this.environment,tenantId:this.realm,username:this.username,localAccountId:this.localAccountId,name:this.name,nativeAccountId:this.nativeAccountId,authorityType:this.authorityType,tenantProfiles:new Map((this.tenantProfiles||[]).map(e=>[e.tenantId,e]))}}isSingleTenant(){return!this.tenantProfiles}static generateAccountCacheKey(e){const t=e.homeAccountId.split(".")[1];return[e.homeAccountId,e.environment||"",t||e.tenantId||""].join(F.CACHE_KEY_SEPARATOR).toLowerCase()}static createAccount(e,t,n){var h,d,p,f,y,E;const o=new L;t.authorityType===Q.Adfs?o.authorityType=je.ADFS_ACCOUNT_TYPE:t.protocolMode===ce.AAD?o.authorityType=je.MSSTS_ACCOUNT_TYPE:o.authorityType=je.GENERIC_ACCOUNT_TYPE;let r;e.clientInfo&&n&&(r=it(e.clientInfo,n)),o.clientInfo=e.clientInfo,o.homeAccountId=e.homeAccountId,o.nativeAccountId=e.nativeAccountId;const i=e.environment||t&&t.getPreferredCache();if(!i)throw g(Wt);o.environment=i,o.realm=(r==null?void 0:r.utid)||zo(e.idTokenClaims)||"",o.localAccountId=(r==null?void 0:r.uid)||((h=e.idTokenClaims)==null?void 0:h.oid)||((d=e.idTokenClaims)==null?void 0:d.sub)||"";const s=((p=e.idTokenClaims)==null?void 0:p.preferred_username)||((f=e.idTokenClaims)==null?void 0:f.upn),c=(y=e.idTokenClaims)!=null&&y.emails?e.idTokenClaims.emails[0]:null;if(o.username=s||c||"",o.name=((E=e.idTokenClaims)==null?void 0:E.name)||"",o.cloudGraphHostName=e.cloudGraphHostName,o.msGraphHost=e.msGraphHost,e.tenantProfiles)o.tenantProfiles=e.tenantProfiles;else{const S=rn(e.homeAccountId,o.localAccountId,o.realm,e.idTokenClaims);o.tenantProfiles=[S]}return o}static createFromAccountInfo(e,t,n){var r;const o=new L;return o.authorityType=e.authorityType||je.GENERIC_ACCOUNT_TYPE,o.homeAccountId=e.homeAccountId,o.localAccountId=e.localAccountId,o.nativeAccountId=e.nativeAccountId,o.realm=e.tenantId,o.environment=e.environment,o.username=e.username,o.name=e.name,o.cloudGraphHostName=t,o.msGraphHost=n,o.tenantProfiles=Array.from(((r=e.tenantProfiles)==null?void 0:r.values())||[]),o}static generateHomeAccountId(e,t,n,o,r){if(!(t===Q.Adfs||t===Q.Dsts)){if(e)try{const i=it(e,o.base64Decode);if(i.uid&&i.utid)return`${i.uid}.${i.utid}`}catch{}n.warning("No client info in response")}return(r==null?void 0:r.sub)||""}static isAccountEntity(e){return e?e.hasOwnProperty("homeAccountId")&&e.hasOwnProperty("environment")&&e.hasOwnProperty("realm")&&e.hasOwnProperty("localAccountId")&&e.hasOwnProperty("username")&&e.hasOwnProperty("authorityType"):!1}static accountInfoIsEqual(e,t,n){if(!e||!t)return!1;let o=!0;if(n){const r=e.idTokenClaims||{},i=t.idTokenClaims||{};o=r.iat===i.iat&&r.nonce===i.nonce}return e.homeAccountId===t.homeAccountId&&e.localAccountId===t.localAccountId&&e.username===t.username&&e.tenantId===t.tenantId&&e.environment===t.environment&&e.nativeAccountId===t.nativeAccountId&&o}}/*! @azure/msal-common v14.15.0 2024-09-20 */function $o(a){return a.startsWith("#/")?a.substring(2):a.startsWith("#")||a.startsWith("?")?a.substring(1):a}function st(a){if(!a||a.indexOf("=")<0)return null;try{const e=$o(a),t=Object.fromEntries(new URLSearchParams(e));if(t.code||t.error||t.error_description||t.state)return t}catch{throw g(po)}return null}/*! @azure/msal-common v14.15.0 2024-09-20 */class w{get urlString(){return this._urlString}constructor(e){if(this._urlString=e,!this._urlString)throw R(Po);e.includes("#")||(this._urlString=w.canonicalizeUri(e))}static canonicalizeUri(e){if(e){let t=e.toLowerCase();return Y.endsWith(t,"?")?t=t.slice(0,-1):Y.endsWith(t,"?/")&&(t=t.slice(0,-2)),Y.endsWith(t,"/")||(t+="/"),t}return e}validateAsUri(){let e;try{e=this.getUrlComponents()}catch{throw R(Ke)}if(!e.HostNameAndPort||!e.PathSegments)throw R(Ke);if(!e.Protocol||e.Protocol.toLowerCase()!=="https:")throw R(No)}static appendQueryString(e,t){return t?e.indexOf("?")<0?`${e}?${t}`:`${e}&${t}`:e}static removeHashFromUrl(e){return w.canonicalizeUri(e.split("#")[0])}replaceTenantPath(e){const t=this.getUrlComponents(),n=t.PathSegments;return e&&n.length!==0&&(n[0]===ge.COMMON||n[0]===ge.ORGANIZATIONS)&&(n[0]=e),w.constructAuthorityUriFromObject(t)}getUrlComponents(){const e=RegExp("^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?"),t=this.urlString.match(e);if(!t)throw R(Ke);const n={Protocol:t[1],HostNameAndPort:t[4],AbsolutePath:t[5],QueryString:t[7]};let o=n.AbsolutePath.split("/");return o=o.filter(r=>r&&r.length>0),n.PathSegments=o,n.QueryString&&n.QueryString.endsWith("/")&&(n.QueryString=n.QueryString.substring(0,n.QueryString.length-1)),n}static getDomainFromUrl(e){const t=RegExp("^([^:/?#]+://)?([^/?#]*)"),n=e.match(t);if(!n)throw R(Ke);return n[2]}static getAbsoluteUrl(e,t){if(e[0]===u.FORWARD_SLASH){const o=new w(t).getUrlComponents();return o.Protocol+"//"+o.HostNameAndPort+e}return e}static constructAuthorityUriFromObject(e){return new w(e.Protocol+"//"+e.HostNameAndPort+"/"+e.PathSegments.join("/"))}static hashContainsKnownProperties(e){return!!st(e)}}/*! @azure/msal-common v14.15.0 2024-09-20 */const Vo={endpointMetadata:{"login.microsoftonline.com":{token_endpoint:"https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/token",jwks_uri:"https://login.microsoftonline.com/{tenantid}/discovery/v2.0/keys",issuer:"https://login.microsoftonline.com/{tenantid}/v2.0",authorization_endpoint:"https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/authorize",end_session_endpoint:"https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/logout"},"login.chinacloudapi.cn":{token_endpoint:"https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/token",jwks_uri:"https://login.chinacloudapi.cn/{tenantid}/discovery/v2.0/keys",issuer:"https://login.partner.microsoftonline.cn/{tenantid}/v2.0",authorization_endpoint:"https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/authorize",end_session_endpoint:"https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/logout"},"login.microsoftonline.us":{token_endpoint:"https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/token",jwks_uri:"https://login.microsoftonline.us/{tenantid}/discovery/v2.0/keys",issuer:"https://login.microsoftonline.us/{tenantid}/v2.0",authorization_endpoint:"https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/authorize",end_session_endpoint:"https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/logout"}},instanceDiscoveryMetadata:{tenant_discovery_endpoint:"https://{canonicalAuthority}/v2.0/.well-known/openid-configuration",metadata:[{preferred_network:"login.microsoftonline.com",preferred_cache:"login.windows.net",aliases:["login.microsoftonline.com","login.windows.net","login.microsoft.com","sts.windows.net"]},{preferred_network:"login.partner.microsoftonline.cn",preferred_cache:"login.partner.microsoftonline.cn",aliases:["login.partner.microsoftonline.cn","login.chinacloudapi.cn"]},{preferred_network:"login.microsoftonline.de",preferred_cache:"login.microsoftonline.de",aliases:["login.microsoftonline.de"]},{preferred_network:"login.microsoftonline.us",preferred_cache:"login.microsoftonline.us",aliases:["login.microsoftonline.us","login.usgovcloudapi.net"]},{preferred_network:"login-us.microsoftonline.com",preferred_cache:"login-us.microsoftonline.com",aliases:["login-us.microsoftonline.com"]}]}},Gn=Vo.endpointMetadata,sn=Vo.instanceDiscoveryMetadata,Qo=new Set;sn.metadata.forEach(a=>{a.aliases.forEach(e=>{Qo.add(e)})});function Ni(a,e){var o;let t;const n=a.canonicalAuthority;if(n){const r=new w(n).getUrlComponents().HostNameAndPort;t=qn(r,(o=a.cloudDiscoveryMetadata)==null?void 0:o.metadata,G.CONFIG,e)||qn(r,sn.metadata,G.HARDCODED_VALUES,e)||a.knownAuthorities}return t||[]}function qn(a,e,t,n){if(n==null||n.trace(`getAliasesFromMetadata called with source: ${t}`),a&&e){const o=ct(e,a);if(o)return n==null||n.trace(`getAliasesFromMetadata: found cloud discovery metadata in ${t}, returning aliases`),o.aliases;n==null||n.trace(`getAliasesFromMetadata: did not find cloud discovery metadata in ${t}`)}return null}function Pi(a){return ct(sn.metadata,a)}function ct(a,e){for(let t=0;t<a.length;t++){const n=a[t];if(n.aliases.includes(e))return n}return null}/*! @azure/msal-common v14.15.0 2024-09-20 */const Yo="cache_quota_exceeded",cn="cache_error_unknown";/*! @azure/msal-common v14.15.0 2024-09-20 */const wt={[Yo]:"Exceeded cache storage capacity.",[cn]:"Unexpected error occurred when using cache storage."};class be extends Error{constructor(e,t){const n=t||(wt[e]?wt[e]:wt[cn]);super(`${e}: ${n}`),Object.setPrototypeOf(this,be.prototype),this.name="CacheError",this.errorCode=e,this.errorMessage=n}}/*! @azure/msal-common v14.15.0 2024-09-20 */class Pe{constructor(e,t,n,o){this.clientId=e,this.cryptoImpl=t,this.commonLogger=n.clone(ko,Jt),this.staticAuthorityOptions=o}getAllAccounts(e){return this.buildTenantProfiles(this.getAccountsFilteredBy(e||{}),e)}getAccountInfoFilteredBy(e){const t=this.getAllAccounts(e);return t.length>1?t.sort(o=>o.idTokenClaims?-1:1)[0]:t.length===1?t[0]:null}getBaseAccountInfo(e){const t=this.getAccountsFilteredBy(e);return t.length>0?t[0].getAccountInfo():null}buildTenantProfiles(e,t){return e.flatMap(n=>this.getTenantProfilesFromAccountEntity(n,t==null?void 0:t.tenantId,t))}getTenantedAccountInfoByFilter(e,t,n,o){let r=null,i;if(o&&!this.tenantProfileMatchesFilter(n,o))return null;const s=this.getIdToken(e,t,n.tenantId);return s&&(i=Ae(s.secret,this.cryptoImpl.base64Decode),!this.idTokenClaimsMatchTenantProfileFilter(i,o))?null:(r=an(e,n,i,s==null?void 0:s.secret),r)}getTenantProfilesFromAccountEntity(e,t,n){const o=e.getAccountInfo();let r=o.tenantProfiles||new Map;const i=this.getTokenKeys();if(t){const c=r.get(t);if(c)r=new Map([[t,c]]);else return[]}const s=[];return r.forEach(c=>{const h=this.getTenantedAccountInfoByFilter(o,i,c,n);h&&s.push(h)}),s}tenantProfileMatchesFilter(e,t){return!(t.localAccountId&&!this.matchLocalAccountIdFromTenantProfile(e,t.localAccountId)||t.name&&e.name!==t.name||t.isHomeTenant!==void 0&&e.isHomeTenant!==t.isHomeTenant)}idTokenClaimsMatchTenantProfileFilter(e,t){return!(t&&(t.localAccountId&&!this.matchLocalAccountIdFromTokenClaims(e,t.localAccountId)||t.loginHint&&!this.matchLoginHintFromTokenClaims(e,t.loginHint)||t.username&&!this.matchUsername(e.preferred_username,t.username)||t.name&&!this.matchName(e,t.name)||t.sid&&!this.matchSid(e,t.sid)))}async saveCacheRecord(e,t,n){var o,r,i,s;if(!e)throw g(Eo);try{e.account&&this.setAccount(e.account),e.idToken&&(t==null?void 0:t.idToken)!==!1&&this.setIdTokenCredential(e.idToken),e.accessToken&&(t==null?void 0:t.accessToken)!==!1&&await this.saveAccessToken(e.accessToken),e.refreshToken&&(t==null?void 0:t.refreshToken)!==!1&&this.setRefreshTokenCredential(e.refreshToken),e.appMetadata&&this.setAppMetadata(e.appMetadata)}catch(c){throw(o=this.commonLogger)==null||o.error("CacheManager.saveCacheRecord: failed"),c instanceof Error?((r=this.commonLogger)==null||r.errorPii(`CacheManager.saveCacheRecord: ${c.message}`,n),c.name==="QuotaExceededError"||c.name==="NS_ERROR_DOM_QUOTA_REACHED"||c.message.includes("exceeded the quota")?((i=this.commonLogger)==null||i.error("CacheManager.saveCacheRecord: exceeded storage quota",n),new be(Yo)):new be(c.name,c.message)):((s=this.commonLogger)==null||s.errorPii(`CacheManager.saveCacheRecord: ${c}`,n),new be(cn))}}async saveAccessToken(e){const t={clientId:e.clientId,credentialType:e.credentialType,environment:e.environment,homeAccountId:e.homeAccountId,realm:e.realm,tokenType:e.tokenType,requestedClaimsHash:e.requestedClaimsHash},n=this.getTokenKeys(),o=P.fromString(e.target),r=[];n.accessToken.forEach(i=>{if(!this.accessTokenKeyMatchesFilter(i,t,!1))return;const s=this.getAccessTokenCredential(i);s&&this.credentialMatchesFilter(s,t)&&P.fromString(s.target).intersectingScopeSets(o)&&r.push(this.removeAccessToken(i))}),await Promise.all(r),this.setAccessTokenCredential(e)}getAccountsFilteredBy(e){const t=this.getAccountKeys(),n=[];return t.forEach(o=>{var c;if(!this.isAccountKey(o,e.homeAccountId))return;const r=this.getAccount(o,this.commonLogger);if(!r||e.homeAccountId&&!this.matchHomeAccountId(r,e.homeAccountId)||e.username&&!this.matchUsername(r.username,e.username)||e.environment&&!this.matchEnvironment(r,e.environment)||e.realm&&!this.matchRealm(r,e.realm)||e.nativeAccountId&&!this.matchNativeAccountId(r,e.nativeAccountId)||e.authorityType&&!this.matchAuthorityType(r,e.authorityType))return;const i={localAccountId:e==null?void 0:e.localAccountId,name:e==null?void 0:e.name},s=(c=r.tenantProfiles)==null?void 0:c.filter(h=>this.tenantProfileMatchesFilter(h,i));s&&s.length===0||n.push(r)}),n}isAccountKey(e,t,n){return!(e.split(F.CACHE_KEY_SEPARATOR).length<3||t&&!e.toLowerCase().includes(t.toLowerCase())||n&&!e.toLowerCase().includes(n.toLowerCase()))}isCredentialKey(e){if(e.split(F.CACHE_KEY_SEPARATOR).length<6)return!1;const t=e.toLowerCase();if(t.indexOf(I.ID_TOKEN.toLowerCase())===-1&&t.indexOf(I.ACCESS_TOKEN.toLowerCase())===-1&&t.indexOf(I.ACCESS_TOKEN_WITH_AUTH_SCHEME.toLowerCase())===-1&&t.indexOf(I.REFRESH_TOKEN.toLowerCase())===-1)return!1;if(t.indexOf(I.REFRESH_TOKEN.toLowerCase())>-1){const n=`${I.REFRESH_TOKEN}${F.CACHE_KEY_SEPARATOR}${this.clientId}${F.CACHE_KEY_SEPARATOR}`,o=`${I.REFRESH_TOKEN}${F.CACHE_KEY_SEPARATOR}${xe}${F.CACHE_KEY_SEPARATOR}`;if(t.indexOf(n.toLowerCase())===-1&&t.indexOf(o.toLowerCase())===-1)return!1}else if(t.indexOf(this.clientId.toLowerCase())===-1)return!1;return!0}credentialMatchesFilter(e,t){return!(t.clientId&&!this.matchClientId(e,t.clientId)||t.userAssertionHash&&!this.matchUserAssertionHash(e,t.userAssertionHash)||typeof t.homeAccountId=="string"&&!this.matchHomeAccountId(e,t.homeAccountId)||t.environment&&!this.matchEnvironment(e,t.environment)||t.realm&&!this.matchRealm(e,t.realm)||t.credentialType&&!this.matchCredentialType(e,t.credentialType)||t.familyId&&!this.matchFamilyId(e,t.familyId)||t.target&&!this.matchTarget(e,t.target)||(t.requestedClaimsHash||e.requestedClaimsHash)&&e.requestedClaimsHash!==t.requestedClaimsHash||e.credentialType===I.ACCESS_TOKEN_WITH_AUTH_SCHEME&&(t.tokenType&&!this.matchTokenType(e,t.tokenType)||t.tokenType===k.SSH&&t.keyId&&!this.matchKeyId(e,t.keyId)))}getAppMetadataFilteredBy(e){const t=this.getKeys(),n={};return t.forEach(o=>{if(!this.isAppMetadata(o))return;const r=this.getAppMetadata(o);r&&(e.environment&&!this.matchEnvironment(r,e.environment)||e.clientId&&!this.matchClientId(r,e.clientId)||(n[o]=r))}),n}getAuthorityMetadataByAlias(e){const t=this.getAuthorityMetadataKeys();let n=null;return t.forEach(o=>{if(!this.isAuthorityMetadata(o)||o.indexOf(this.clientId)===-1)return;const r=this.getAuthorityMetadata(o);r&&r.aliases.indexOf(e)!==-1&&(n=r)}),n}async removeAllAccounts(){const e=this.getAccountKeys(),t=[];e.forEach(n=>{t.push(this.removeAccount(n))}),await Promise.all(t)}async removeAccount(e){const t=this.getAccount(e,this.commonLogger);t&&(await this.removeAccountContext(t),this.removeItem(e))}async removeAccountContext(e){const t=this.getTokenKeys(),n=e.generateAccountId(),o=[];t.idToken.forEach(r=>{r.indexOf(n)===0&&this.removeIdToken(r)}),t.accessToken.forEach(r=>{r.indexOf(n)===0&&o.push(this.removeAccessToken(r))}),t.refreshToken.forEach(r=>{r.indexOf(n)===0&&this.removeRefreshToken(r)}),await Promise.all(o)}updateOutdatedCachedAccount(e,t,n){var o;if(t&&t.isSingleTenant()){(o=this.commonLogger)==null||o.verbose("updateOutdatedCachedAccount: Found a single-tenant (outdated) account entity in the cache, migrating to multi-tenant account entity");const r=this.getAccountKeys().filter(d=>d.startsWith(t.homeAccountId)),i=[];r.forEach(d=>{const p=this.getCachedAccountEntity(d);p&&i.push(p)});const s=i.find(d=>at(d.realm,d.homeAccountId))||i[0];s.tenantProfiles=i.map(d=>({tenantId:d.realm,localAccountId:d.localAccountId,name:d.name,isHomeTenant:at(d.realm,d.homeAccountId)}));const c=Pe.toObject(new L,{...s}),h=c.generateAccountKey();return r.forEach(d=>{d!==h&&this.removeOutdatedAccount(e)}),this.setAccount(c),n==null||n.verbose("Updated an outdated account entity in the cache"),c}return t}async removeAccessToken(e){const t=this.getAccessTokenCredential(e);if(t){if(t.credentialType.toLowerCase()===I.ACCESS_TOKEN_WITH_AUTH_SCHEME.toLowerCase()&&t.tokenType===k.POP){const o=t.keyId;if(o)try{await this.cryptoImpl.removeTokenBindingKey(o)}catch{throw g(wo)}}return this.removeItem(e)}}removeAppMetadata(){return this.getKeys().forEach(t=>{this.isAppMetadata(t)&&this.removeItem(t)}),!0}readAccountFromCache(e){const t=L.generateAccountCacheKey(e);return this.getAccount(t,this.commonLogger)}getIdToken(e,t,n,o,r){this.commonLogger.trace("CacheManager - getIdToken called");const i={homeAccountId:e.homeAccountId,environment:e.environment,credentialType:I.ID_TOKEN,clientId:this.clientId,realm:n},s=this.getIdTokensByFilter(i,t),c=s.size;if(c<1)return this.commonLogger.info("CacheManager:getIdToken - No token found"),null;if(c>1){let h=s;if(!n){const d=new Map;s.forEach((f,y)=>{f.realm===e.tenantId&&d.set(y,f)});const p=d.size;if(p<1)return this.commonLogger.info("CacheManager:getIdToken - Multiple ID tokens found for account but none match account entity tenant id, returning first result"),s.values().next().value;if(p===1)return this.commonLogger.info("CacheManager:getIdToken - Multiple ID tokens found for account, defaulting to home tenant profile"),d.values().next().value;h=d}return this.commonLogger.info("CacheManager:getIdToken - Multiple matching ID tokens found, clearing them"),h.forEach((d,p)=>{this.removeIdToken(p)}),o&&r&&o.addFields({multiMatchedID:s.size},r),null}return this.commonLogger.info("CacheManager:getIdToken - Returning ID token"),s.values().next().value}getIdTokensByFilter(e,t){const n=t&&t.idToken||this.getTokenKeys().idToken,o=new Map;return n.forEach(r=>{if(!this.idTokenKeyMatchesFilter(r,{clientId:this.clientId,...e}))return;const i=this.getIdTokenCredential(r);i&&this.credentialMatchesFilter(i,e)&&o.set(r,i)}),o}idTokenKeyMatchesFilter(e,t){const n=e.toLowerCase();return!(t.clientId&&n.indexOf(t.clientId.toLowerCase())===-1||t.homeAccountId&&n.indexOf(t.homeAccountId.toLowerCase())===-1)}removeIdToken(e){this.removeItem(e)}removeRefreshToken(e){this.removeItem(e)}getAccessToken(e,t,n,o,r,i){this.commonLogger.trace("CacheManager - getAccessToken called");const s=P.createSearchScopes(t.scopes),c=t.authenticationScheme||k.BEARER,h=c&&c.toLowerCase()!==k.BEARER.toLowerCase()?I.ACCESS_TOKEN_WITH_AUTH_SCHEME:I.ACCESS_TOKEN,d={homeAccountId:e.homeAccountId,environment:e.environment,credentialType:h,clientId:this.clientId,realm:o||e.tenantId,target:s,tokenType:c,keyId:t.sshKid,requestedClaimsHash:t.requestedClaimsHash},p=n&&n.accessToken||this.getTokenKeys().accessToken,f=[];p.forEach(E=>{if(this.accessTokenKeyMatchesFilter(E,d,!0)){const S=this.getAccessTokenCredential(E);S&&this.credentialMatchesFilter(S,d)&&f.push(S)}});const y=f.length;return y<1?(this.commonLogger.info("CacheManager:getAccessToken - No token found"),null):y>1?(this.commonLogger.info("CacheManager:getAccessToken - Multiple access tokens found, clearing them"),f.forEach(E=>{this.removeAccessToken(_e(E))}),r&&i&&r.addFields({multiMatchedAT:f.length},i),null):(this.commonLogger.info("CacheManager:getAccessToken - Returning access token"),f[0])}accessTokenKeyMatchesFilter(e,t,n){const o=e.toLowerCase();if(t.clientId&&o.indexOf(t.clientId.toLowerCase())===-1||t.homeAccountId&&o.indexOf(t.homeAccountId.toLowerCase())===-1||t.realm&&o.indexOf(t.realm.toLowerCase())===-1||t.requestedClaimsHash&&o.indexOf(t.requestedClaimsHash.toLowerCase())===-1)return!1;if(t.target){const r=t.target.asArray();for(let i=0;i<r.length;i++){if(n&&!o.includes(r[i].toLowerCase()))return!1;if(!n&&o.includes(r[i].toLowerCase()))return!0}}return!0}getAccessTokensByFilter(e){const t=this.getTokenKeys(),n=[];return t.accessToken.forEach(o=>{if(!this.accessTokenKeyMatchesFilter(o,e,!0))return;const r=this.getAccessTokenCredential(o);r&&this.credentialMatchesFilter(r,e)&&n.push(r)}),n}getRefreshToken(e,t,n,o,r){this.commonLogger.trace("CacheManager - getRefreshToken called");const i=t?xe:void 0,s={homeAccountId:e.homeAccountId,environment:e.environment,credentialType:I.REFRESH_TOKEN,clientId:this.clientId,familyId:i},c=n&&n.refreshToken||this.getTokenKeys().refreshToken,h=[];c.forEach(p=>{if(this.refreshTokenKeyMatchesFilter(p,s)){const f=this.getRefreshTokenCredential(p);f&&this.credentialMatchesFilter(f,s)&&h.push(f)}});const d=h.length;return d<1?(this.commonLogger.info("CacheManager:getRefreshToken - No refresh token found."),null):(d>1&&o&&r&&o.addFields({multiMatchedRT:d},r),this.commonLogger.info("CacheManager:getRefreshToken - returning refresh token"),h[0])}refreshTokenKeyMatchesFilter(e,t){const n=e.toLowerCase();return!(t.familyId&&n.indexOf(t.familyId.toLowerCase())===-1||!t.familyId&&t.clientId&&n.indexOf(t.clientId.toLowerCase())===-1||t.homeAccountId&&n.indexOf(t.homeAccountId.toLowerCase())===-1)}readAppMetadataFromCache(e){const t={environment:e,clientId:this.clientId},n=this.getAppMetadataFilteredBy(t),o=Object.keys(n).map(i=>n[i]),r=o.length;if(r<1)return null;if(r>1)throw g(To);return o[0]}isAppMetadataFOCI(e){const t=this.readAppMetadataFromCache(e);return!!(t&&t.familyId===xe)}matchHomeAccountId(e,t){return typeof e.homeAccountId=="string"&&t===e.homeAccountId}matchLocalAccountIdFromTokenClaims(e,t){const n=e.oid||e.sub;return t===n}matchLocalAccountIdFromTenantProfile(e,t){return e.localAccountId===t}matchName(e,t){var n;return t.toLowerCase()===((n=e.name)==null?void 0:n.toLowerCase())}matchUsername(e,t){return!!(e&&typeof e=="string"&&(t==null?void 0:t.toLowerCase())===e.toLowerCase())}matchUserAssertionHash(e,t){return!!(e.userAssertionHash&&t===e.userAssertionHash)}matchEnvironment(e,t){if(this.staticAuthorityOptions){const o=Ni(this.staticAuthorityOptions,this.commonLogger);if(o.includes(t)&&o.includes(e.environment))return!0}const n=this.getAuthorityMetadataByAlias(t);return!!(n&&n.aliases.indexOf(e.environment)>-1)}matchCredentialType(e,t){return e.credentialType&&t.toLowerCase()===e.credentialType.toLowerCase()}matchClientId(e,t){return!!(e.clientId&&t===e.clientId)}matchFamilyId(e,t){return!!(e.familyId&&t===e.familyId)}matchRealm(e,t){var n;return((n=e.realm)==null?void 0:n.toLowerCase())===t.toLowerCase()}matchNativeAccountId(e,t){return!!(e.nativeAccountId&&t===e.nativeAccountId)}matchLoginHintFromTokenClaims(e,t){return e.login_hint===t||e.preferred_username===t||e.upn===t}matchSid(e,t){return e.sid===t}matchAuthorityType(e,t){return!!(e.authorityType&&t.toLowerCase()===e.authorityType.toLowerCase())}matchTarget(e,t){return e.credentialType!==I.ACCESS_TOKEN&&e.credentialType!==I.ACCESS_TOKEN_WITH_AUTH_SCHEME||!e.target?!1:P.fromString(e.target).containsScopeSet(t)}matchTokenType(e,t){return!!(e.tokenType&&e.tokenType===t)}matchKeyId(e,t){return!!(e.keyId&&e.keyId===t)}isAppMetadata(e){return e.indexOf(qt)!==-1}isAuthorityMetadata(e){return e.indexOf(nt.CACHE_KEY)!==-1}generateAuthorityMetadataCacheKey(e){return`${nt.CACHE_KEY}-${this.clientId}-${e}`}static toObject(e,t){for(const n in t)e[n]=t[n];return e}}class Mi extends Pe{setAccount(){throw g(v)}getAccount(){throw g(v)}getCachedAccountEntity(){throw g(v)}setIdTokenCredential(){throw g(v)}getIdTokenCredential(){throw g(v)}setAccessTokenCredential(){throw g(v)}getAccessTokenCredential(){throw g(v)}setRefreshTokenCredential(){throw g(v)}getRefreshTokenCredential(){throw g(v)}setAppMetadata(){throw g(v)}getAppMetadata(){throw g(v)}setServerTelemetry(){throw g(v)}getServerTelemetry(){throw g(v)}setAuthorityMetadata(){throw g(v)}getAuthorityMetadata(){throw g(v)}getAuthorityMetadataKeys(){throw g(v)}setThrottlingCache(){throw g(v)}getThrottlingCache(){throw g(v)}removeItem(){throw g(v)}getKeys(){throw g(v)}getAccountKeys(){throw g(v)}getTokenKeys(){throw g(v)}async clear(){throw g(v)}updateCredentialCacheKey(){throw g(v)}removeOutdatedAccount(){throw g(v)}}/*! @azure/msal-common v14.15.0 2024-09-20 */const Wo={tokenRenewalOffsetSeconds:ti,preventCorsPreflight:!1},Ui={loggerCallback:()=>{},piiLoggingEnabled:!1,logLevel:O.Info,correlationId:u.EMPTY_STRING},Li={claimsBasedCachingEnabled:!1},Hi={async sendGetRequestAsync(){throw g(v)},async sendPostRequestAsync(){throw g(v)}},Di={sku:u.SKU,version:Jt,cpu:u.EMPTY_STRING,os:u.EMPTY_STRING},Ki={clientSecret:u.EMPTY_STRING,clientAssertion:void 0},xi={azureCloudInstance:Xt.None,tenant:`${u.DEFAULT_COMMON_TENANT}`},Bi={application:{appName:"",appVersion:""}};function Fi({authOptions:a,systemOptions:e,loggerOptions:t,cacheOptions:n,storageInterface:o,networkInterface:r,cryptoInterface:i,clientCredentials:s,libraryInfo:c,telemetry:h,serverTelemetryManager:d,persistencePlugin:p,serializableCache:f}){const y={...Ui,...t};return{authOptions:Gi(a),systemOptions:{...Wo,...e},loggerOptions:y,cacheOptions:{...Li,...n},storageInterface:o||new Mi(a.clientId,rt,new pe(y)),networkInterface:r||Hi,cryptoInterface:i||rt,clientCredentials:s||Ki,libraryInfo:{...Di,...c},telemetry:{...Bi,...h},serverTelemetryManager:d||null,persistencePlugin:p||null,serializableCache:f||null}}function Gi(a){return{clientCapabilities:[],azureCloudOptions:xi,skipAuthorityMetadataCache:!1,instanceAware:!1,...a}}function Ut(a){return a.authOptions.authority.options.protocolMode===ce.OIDC}/*! @azure/msal-common v14.15.0 2024-09-20 */class me extends N{constructor(e,t,n,o,r){super(e,t,n),this.name="ServerError",this.errorNo=o,this.status=r,Object.setPrototypeOf(this,me.prototype)}}/*! @azure/msal-common v14.15.0 2024-09-20 */class X{static generateThrottlingStorageKey(e){return`${Be.THROTTLING_PREFIX}.${JSON.stringify(e)}`}static preProcess(e,t){var r;const n=X.generateThrottlingStorageKey(t),o=e.getThrottlingCache(n);if(o){if(o.throttleTime<Date.now()){e.removeItem(n);return}throw new me(((r=o.errorCodes)==null?void 0:r.join(" "))||u.EMPTY_STRING,o.errorMessage,o.subError)}}static postProcess(e,t,n){if(X.checkResponseStatus(n)||X.checkResponseForRetryAfter(n)){const o={throttleTime:X.calculateThrottleTime(parseInt(n.headers[ee.RETRY_AFTER])),error:n.body.error,errorCodes:n.body.error_codes,errorMessage:n.body.error_description,subError:n.body.suberror};e.setThrottlingCache(X.generateThrottlingStorageKey(t),o)}}static checkResponseStatus(e){return e.status===429||e.status>=500&&e.status<600}static checkResponseForRetryAfter(e){return e.headers?e.headers.hasOwnProperty(ee.RETRY_AFTER)&&(e.status<200||e.status>=300):!1}static calculateThrottleTime(e){const t=e<=0?0:e,n=Date.now()/1e3;return Math.floor(Math.min(n+(t||Be.DEFAULT_THROTTLE_TIME_SECONDS),n+Be.DEFAULT_MAX_THROTTLE_TIME_SECONDS)*1e3)}static removeThrottle(e,t,n,o){const r={clientId:t,authority:n.authority,scopes:n.scopes,homeAccountIdentifier:o,claims:n.claims,authenticationScheme:n.authenticationScheme,resourceRequestMethod:n.resourceRequestMethod,resourceRequestUri:n.resourceRequestUri,shrClaims:n.shrClaims,sshKid:n.sshKid},i=this.generateThrottlingStorageKey(r);e.removeItem(i)}}/*! @azure/msal-common v14.15.0 2024-09-20 */class qi{constructor(e,t){this.networkClient=e,this.cacheManager=t}async sendPostRequest(e,t,n){X.preProcess(this.cacheManager,e);let o;try{o=await this.networkClient.sendPostRequestAsync(t,n)}catch(r){throw r instanceof N?r:g(uo)}return X.postProcess(this.cacheManager,e,o),o}}/*! @azure/msal-common v14.15.0 2024-09-20 */const $={HOME_ACCOUNT_ID:"home_account_id",UPN:"UPN"};/*! @azure/msal-common v14.15.0 2024-09-20 */const Me="client_id",zi="redirect_uri",zn="response_type",$i="response_mode",Vi="grant_type",Qi="claims",Yi="scope",Wi="refresh_token",ji="state",Ji="nonce",Xi="prompt",Zi="code",ea="code_challenge",ta="code_challenge_method",na="code_verifier",oa="client-request-id",ra="x-client-SKU",ia="x-client-VER",aa="x-client-OS",sa="x-client-CPU",ca="x-client-current-telemetry",ha="x-client-last-telemetry",la="x-ms-lib-capability",da="x-app-name",ua="x-app-ver",ga="post_logout_redirect_uri",pa="id_token_hint",ma="device_code",fa="client_secret",Ca="client_assertion",Ta="client_assertion_type",$n="token_type",Vn="req_cnf",ya="assertion",Aa="requested_token_use",Qn="return_spa_code",Ia="nativebroker",Ea="logout_hint",Sa="sid",va="login_hint",wa="domain_hint",_a="x-client-xtra-sku";/*! @azure/msal-common v14.15.0 2024-09-20 */class Se{static validateRedirectUri(e){if(!e)throw R(Oo)}static validatePrompt(e){const t=[];for(const n in D)t.push(D[n]);if(t.indexOf(e)<0)throw R(Uo)}static validateClaims(e){try{JSON.parse(e)}catch{throw R(en)}}static validateCodeChallengeParams(e,t){if(!e||!t)throw R(tn);this.validateCodeChallengeMethod(t)}static validateCodeChallengeMethod(e){if([Pn.PLAIN,Pn.S256].indexOf(e)<0)throw R(Do)}}/*! @azure/msal-common v14.15.0 2024-09-20 */class Fe{constructor(){this.parameters=new Map}addResponseTypeCode(){this.parameters.set(zn,encodeURIComponent(u.CODE_RESPONSE_TYPE))}addResponseTypeForTokenAndIdToken(){this.parameters.set(zn,encodeURIComponent(`${u.TOKEN_RESPONSE_TYPE} ${u.ID_TOKEN_RESPONSE_TYPE}`))}addResponseMode(e){this.parameters.set($i,encodeURIComponent(e||Xr.QUERY))}addNativeBroker(){this.parameters.set(Ia,encodeURIComponent("1"))}addScopes(e,t=!0,n=He){t&&!n.includes("openid")&&!e.includes("openid")&&n.push("openid");const o=t?[...e||[],...n]:e||[],r=new P(o);this.parameters.set(Yi,encodeURIComponent(r.printScopes()))}addClientId(e){this.parameters.set(Me,encodeURIComponent(e))}addRedirectUri(e){Se.validateRedirectUri(e),this.parameters.set(zi,encodeURIComponent(e))}addPostLogoutRedirectUri(e){Se.validateRedirectUri(e),this.parameters.set(ga,encodeURIComponent(e))}addIdTokenHint(e){this.parameters.set(pa,encodeURIComponent(e))}addDomainHint(e){this.parameters.set(wa,encodeURIComponent(e))}addLoginHint(e){this.parameters.set(va,encodeURIComponent(e))}addCcsUpn(e){this.parameters.set(ee.CCS_HEADER,encodeURIComponent(`UPN:${e}`))}addCcsOid(e){this.parameters.set(ee.CCS_HEADER,encodeURIComponent(`Oid:${e.uid}@${e.utid}`))}addSid(e){this.parameters.set(Sa,encodeURIComponent(e))}addClaims(e,t){const n=this.addClientCapabilitiesToClaims(e,t);Se.validateClaims(n),this.parameters.set(Qi,encodeURIComponent(n))}addCorrelationId(e){this.parameters.set(oa,encodeURIComponent(e))}addLibraryInfo(e){this.parameters.set(ra,e.sku),this.parameters.set(ia,e.version),e.os&&this.parameters.set(aa,e.os),e.cpu&&this.parameters.set(sa,e.cpu)}addApplicationTelemetry(e){e!=null&&e.appName&&this.parameters.set(da,e.appName),e!=null&&e.appVersion&&this.parameters.set(ua,e.appVersion)}addPrompt(e){Se.validatePrompt(e),this.parameters.set(`${Xi}`,encodeURIComponent(e))}addState(e){e&&this.parameters.set(ji,encodeURIComponent(e))}addNonce(e){this.parameters.set(Ji,encodeURIComponent(e))}addCodeChallengeParams(e,t){if(Se.validateCodeChallengeParams(e,t),e&&t)this.parameters.set(ea,encodeURIComponent(e)),this.parameters.set(ta,encodeURIComponent(t));else throw R(tn)}addAuthorizationCode(e){this.parameters.set(Zi,encodeURIComponent(e))}addDeviceCode(e){this.parameters.set(ma,encodeURIComponent(e))}addRefreshToken(e){this.parameters.set(Wi,encodeURIComponent(e))}addCodeVerifier(e){this.parameters.set(na,encodeURIComponent(e))}addClientSecret(e){this.parameters.set(fa,encodeURIComponent(e))}addClientAssertion(e){e&&this.parameters.set(Ca,encodeURIComponent(e))}addClientAssertionType(e){e&&this.parameters.set(Ta,encodeURIComponent(e))}addOboAssertion(e){this.parameters.set(ya,encodeURIComponent(e))}addRequestTokenUse(e){this.parameters.set(Aa,encodeURIComponent(e))}addGrantType(e){this.parameters.set(Vi,encodeURIComponent(e))}addClientInfo(){this.parameters.set(Zr,"1")}addExtraQueryParameters(e){Object.entries(e).forEach(([t,n])=>{!this.parameters.has(t)&&n&&this.parameters.set(t,n)})}addClientCapabilitiesToClaims(e,t){let n;if(!e)n={};else try{n=JSON.parse(e)}catch{throw R(en)}return t&&t.length>0&&(n.hasOwnProperty(We.ACCESS_TOKEN)||(n[We.ACCESS_TOKEN]={}),n[We.ACCESS_TOKEN][We.XMS_CC]={values:t}),JSON.stringify(n)}addUsername(e){this.parameters.set(Un.username,encodeURIComponent(e))}addPassword(e){this.parameters.set(Un.password,encodeURIComponent(e))}addPopToken(e){e&&(this.parameters.set($n,k.POP),this.parameters.set(Vn,encodeURIComponent(e)))}addSshJwk(e){e&&(this.parameters.set($n,k.SSH),this.parameters.set(Vn,encodeURIComponent(e)))}addServerTelemetry(e){this.parameters.set(ca,e.generateCurrentRequestHeaderValue()),this.parameters.set(ha,e.generateLastRequestHeaderValue())}addThrottling(){this.parameters.set(la,Be.X_MS_LIB_CAPABILITY_VALUE)}addLogoutHint(e){this.parameters.set(Ea,encodeURIComponent(e))}createQueryString(){const e=new Array;return this.parameters.forEach((t,n)=>{e.push(`${n}=${t}`)}),e.join("&")}}/*! @azure/msal-common v14.15.0 2024-09-20 */function ka(a){return a.hasOwnProperty("authorization_endpoint")&&a.hasOwnProperty("token_endpoint")&&a.hasOwnProperty("issuer")&&a.hasOwnProperty("jwks_uri")}/*! @azure/msal-common v14.15.0 2024-09-20 */function Ra(a){return a.hasOwnProperty("tenant_discovery_endpoint")&&a.hasOwnProperty("metadata")}/*! @azure/msal-common v14.15.0 2024-09-20 */function ba(a){return a.hasOwnProperty("error")&&a.hasOwnProperty("error_description")}/*! @azure/msal-common v14.15.0 2024-09-20 */const l={AcquireTokenByCode:"acquireTokenByCode",AcquireTokenByRefreshToken:"acquireTokenByRefreshToken",AcquireTokenSilent:"acquireTokenSilent",AcquireTokenSilentAsync:"acquireTokenSilentAsync",AcquireTokenPopup:"acquireTokenPopup",AcquireTokenPreRedirect:"acquireTokenPreRedirect",AcquireTokenRedirect:"acquireTokenRedirect",CryptoOptsGetPublicKeyThumbprint:"cryptoOptsGetPublicKeyThumbprint",CryptoOptsSignJwt:"cryptoOptsSignJwt",SilentCacheClientAcquireToken:"silentCacheClientAcquireToken",SilentIframeClientAcquireToken:"silentIframeClientAcquireToken",AwaitConcurrentIframe:"awaitConcurrentIframe",SilentRefreshClientAcquireToken:"silentRefreshClientAcquireToken",SsoSilent:"ssoSilent",StandardInteractionClientGetDiscoveredAuthority:"standardInteractionClientGetDiscoveredAuthority",FetchAccountIdWithNativeBroker:"fetchAccountIdWithNativeBroker",NativeInteractionClientAcquireToken:"nativeInteractionClientAcquireToken",BaseClientCreateTokenRequestHeaders:"baseClientCreateTokenRequestHeaders",RefreshTokenClientExecutePostToTokenEndpoint:"refreshTokenClientExecutePostToTokenEndpoint",AuthorizationCodeClientExecutePostToTokenEndpoint:"authorizationCodeClientExecutePostToTokenEndpoint",BrokerHandhshake:"brokerHandshake",AcquireTokenByRefreshTokenInBroker:"acquireTokenByRefreshTokenInBroker",AcquireTokenByBroker:"acquireTokenByBroker",RefreshTokenClientExecuteTokenRequest:"refreshTokenClientExecuteTokenRequest",RefreshTokenClientAcquireToken:"refreshTokenClientAcquireToken",RefreshTokenClientAcquireTokenWithCachedRefreshToken:"refreshTokenClientAcquireTokenWithCachedRefreshToken",RefreshTokenClientAcquireTokenByRefreshToken:"refreshTokenClientAcquireTokenByRefreshToken",RefreshTokenClientCreateTokenRequestBody:"refreshTokenClientCreateTokenRequestBody",AcquireTokenFromCache:"acquireTokenFromCache",SilentFlowClientAcquireCachedToken:"silentFlowClientAcquireCachedToken",SilentFlowClientGenerateResultFromCacheRecord:"silentFlowClientGenerateResultFromCacheRecord",AcquireTokenBySilentIframe:"acquireTokenBySilentIframe",InitializeBaseRequest:"initializeBaseRequest",InitializeSilentRequest:"initializeSilentRequest",InitializeClientApplication:"initializeClientApplication",SilentIframeClientTokenHelper:"silentIframeClientTokenHelper",SilentHandlerInitiateAuthRequest:"silentHandlerInitiateAuthRequest",SilentHandlerMonitorIframeForHash:"silentHandlerMonitorIframeForHash",SilentHandlerLoadFrame:"silentHandlerLoadFrame",SilentHandlerLoadFrameSync:"silentHandlerLoadFrameSync",StandardInteractionClientCreateAuthCodeClient:"standardInteractionClientCreateAuthCodeClient",StandardInteractionClientGetClientConfiguration:"standardInteractionClientGetClientConfiguration",StandardInteractionClientInitializeAuthorizationRequest:"standardInteractionClientInitializeAuthorizationRequest",StandardInteractionClientInitializeAuthorizationCodeRequest:"standardInteractionClientInitializeAuthorizationCodeRequest",GetAuthCodeUrl:"getAuthCodeUrl",HandleCodeResponseFromServer:"handleCodeResponseFromServer",HandleCodeResponse:"handleCodeResponse",UpdateTokenEndpointAuthority:"updateTokenEndpointAuthority",AuthClientAcquireToken:"authClientAcquireToken",AuthClientExecuteTokenRequest:"authClientExecuteTokenRequest",AuthClientCreateTokenRequestBody:"authClientCreateTokenRequestBody",AuthClientCreateQueryString:"authClientCreateQueryString",PopTokenGenerateCnf:"popTokenGenerateCnf",PopTokenGenerateKid:"popTokenGenerateKid",HandleServerTokenResponse:"handleServerTokenResponse",DeserializeResponse:"deserializeResponse",AuthorityFactoryCreateDiscoveredInstance:"authorityFactoryCreateDiscoveredInstance",AuthorityResolveEndpointsAsync:"authorityResolveEndpointsAsync",AuthorityResolveEndpointsFromLocalSources:"authorityResolveEndpointsFromLocalSources",AuthorityGetCloudDiscoveryMetadataFromNetwork:"authorityGetCloudDiscoveryMetadataFromNetwork",AuthorityUpdateCloudDiscoveryMetadata:"authorityUpdateCloudDiscoveryMetadata",AuthorityGetEndpointMetadataFromNetwork:"authorityGetEndpointMetadataFromNetwork",AuthorityUpdateEndpointMetadata:"authorityUpdateEndpointMetadata",AuthorityUpdateMetadataWithRegionalInformation:"authorityUpdateMetadataWithRegionalInformation",RegionDiscoveryDetectRegion:"regionDiscoveryDetectRegion",RegionDiscoveryGetRegionFromIMDS:"regionDiscoveryGetRegionFromIMDS",RegionDiscoveryGetCurrentVersion:"regionDiscoveryGetCurrentVersion",AcquireTokenByCodeAsync:"acquireTokenByCodeAsync",GetEndpointMetadataFromNetwork:"getEndpointMetadataFromNetwork",GetCloudDiscoveryMetadataFromNetworkMeasurement:"getCloudDiscoveryMetadataFromNetworkMeasurement",HandleRedirectPromiseMeasurement:"handleRedirectPromise",HandleNativeRedirectPromiseMeasurement:"handleNativeRedirectPromise",UpdateCloudDiscoveryMetadataMeasurement:"updateCloudDiscoveryMetadataMeasurement",UsernamePasswordClientAcquireToken:"usernamePasswordClientAcquireToken",NativeMessageHandlerHandshake:"nativeMessageHandlerHandshake",NativeGenerateAuthResult:"nativeGenerateAuthResult",RemoveHiddenIframe:"removeHiddenIframe",ClearTokensAndKeysWithClaims:"clearTokensAndKeysWithClaims",CacheManagerGetRefreshToken:"cacheManagerGetRefreshToken",GeneratePkceCodes:"generatePkceCodes",GenerateCodeVerifier:"generateCodeVerifier",GenerateCodeChallengeFromVerifier:"generateCodeChallengeFromVerifier",Sha256Digest:"sha256Digest",GetRandomValues:"getRandomValues"},Oa={NotStarted:0,InProgress:1,Completed:2};/*! @azure/msal-common v14.15.0 2024-09-20 */const Ie=(a,e,t,n,o)=>(...r)=>{t.trace(`Executing function ${e}`);const i=n==null?void 0:n.startMeasurement(e,o);if(o){const s=e+"CallCount";n==null||n.incrementFields({[s]:1},o)}try{const s=a(...r);return i==null||i.end({success:!0}),t.trace(`Returning result from ${e}`),s}catch(s){t.trace(`Error occurred in ${e}`);try{t.trace(JSON.stringify(s))}catch{t.trace("Unable to print error message.")}throw i==null||i.end({success:!1},s),s}},m=(a,e,t,n,o)=>(...r)=>{t.trace(`Executing function ${e}`);const i=n==null?void 0:n.startMeasurement(e,o);if(o){const s=e+"CallCount";n==null||n.incrementFields({[s]:1},o)}return n==null||n.setPreQueueTime(e,o),a(...r).then(s=>(t.trace(`Returning result from ${e}`),i==null||i.end({success:!0}),s)).catch(s=>{t.trace(`Error occurred in ${e}`);try{t.trace(JSON.stringify(s))}catch{t.trace("Unable to print error message.")}throw i==null||i.end({success:!1},s),s})};/*! @azure/msal-common v14.15.0 2024-09-20 */class ft{constructor(e,t,n,o){this.networkInterface=e,this.logger=t,this.performanceClient=n,this.correlationId=o}async detectRegion(e,t){var o;(o=this.performanceClient)==null||o.addQueueMeasurement(l.RegionDiscoveryDetectRegion,this.correlationId);let n=e;if(n)t.region_source=Ee.ENVIRONMENT_VARIABLE;else{const r=ft.IMDS_OPTIONS;try{const i=await m(this.getRegionFromIMDS.bind(this),l.RegionDiscoveryGetRegionFromIMDS,this.logger,this.performanceClient,this.correlationId)(u.IMDS_VERSION,r);if(i.status===Je.httpSuccess&&(n=i.body,t.region_source=Ee.IMDS),i.status===Je.httpBadRequest){const s=await m(this.getCurrentVersion.bind(this),l.RegionDiscoveryGetCurrentVersion,this.logger,this.performanceClient,this.correlationId)(r);if(!s)return t.region_source=Ee.FAILED_AUTO_DETECTION,null;const c=await m(this.getRegionFromIMDS.bind(this),l.RegionDiscoveryGetRegionFromIMDS,this.logger,this.performanceClient,this.correlationId)(s,r);c.status===Je.httpSuccess&&(n=c.body,t.region_source=Ee.IMDS)}}catch{return t.region_source=Ee.FAILED_AUTO_DETECTION,null}}return n||(t.region_source=Ee.FAILED_AUTO_DETECTION),n||null}async getRegionFromIMDS(e,t){var n;return(n=this.performanceClient)==null||n.addQueueMeasurement(l.RegionDiscoveryGetRegionFromIMDS,this.correlationId),this.networkInterface.sendGetRequestAsync(`${u.IMDS_ENDPOINT}?api-version=${e}&format=text`,t,u.IMDS_TIMEOUT)}async getCurrentVersion(e){var t;(t=this.performanceClient)==null||t.addQueueMeasurement(l.RegionDiscoveryGetCurrentVersion,this.correlationId);try{const n=await this.networkInterface.sendGetRequestAsync(`${u.IMDS_ENDPOINT}?format=json`,e);return n.status===Je.httpBadRequest&&n.body&&n.body["newest-versions"]&&n.body["newest-versions"].length>0?n.body["newest-versions"][0]:null}catch{return null}}}ft.IMDS_OPTIONS={headers:{Metadata:"true"}};/*! @azure/msal-common v14.15.0 2024-09-20 */class B{constructor(e,t,n,o,r,i,s,c){this.canonicalAuthority=e,this._canonicalAuthority.validateAsUri(),this.networkInterface=t,this.cacheManager=n,this.authorityOptions=o,this.regionDiscoveryMetadata={region_used:void 0,region_source:void 0,region_outcome:void 0},this.logger=r,this.performanceClient=s,this.correlationId=i,this.managedIdentity=c||!1,this.regionDiscovery=new ft(t,this.logger,this.performanceClient,this.correlationId)}getAuthorityType(e){if(e.HostNameAndPort.endsWith(u.CIAM_AUTH_URL))return Q.Ciam;const t=e.PathSegments;if(t.length)switch(t[0].toLowerCase()){case u.ADFS:return Q.Adfs;case u.DSTS:return Q.Dsts}return Q.Default}get authorityType(){return this.getAuthorityType(this.canonicalAuthorityUrlComponents)}get protocolMode(){return this.authorityOptions.protocolMode}get options(){return this.authorityOptions}get canonicalAuthority(){return this._canonicalAuthority.urlString}set canonicalAuthority(e){this._canonicalAuthority=new w(e),this._canonicalAuthority.validateAsUri(),this._canonicalAuthorityUrlComponents=null}get canonicalAuthorityUrlComponents(){return this._canonicalAuthorityUrlComponents||(this._canonicalAuthorityUrlComponents=this._canonicalAuthority.getUrlComponents()),this._canonicalAuthorityUrlComponents}get hostnameAndPort(){return this.canonicalAuthorityUrlComponents.HostNameAndPort.toLowerCase()}get tenant(){return this.canonicalAuthorityUrlComponents.PathSegments[0]}get authorizationEndpoint(){if(this.discoveryComplete())return this.replacePath(this.metadata.authorization_endpoint);throw g(ie)}get tokenEndpoint(){if(this.discoveryComplete())return this.replacePath(this.metadata.token_endpoint);throw g(ie)}get deviceCodeEndpoint(){if(this.discoveryComplete())return this.replacePath(this.metadata.token_endpoint.replace("/token","/devicecode"));throw g(ie)}get endSessionEndpoint(){if(this.discoveryComplete()){if(!this.metadata.end_session_endpoint)throw g(_o);return this.replacePath(this.metadata.end_session_endpoint)}else throw g(ie)}get selfSignedJwtAudience(){if(this.discoveryComplete())return this.replacePath(this.metadata.issuer);throw g(ie)}get jwksUri(){if(this.discoveryComplete())return this.replacePath(this.metadata.jwks_uri);throw g(ie)}canReplaceTenant(e){return e.PathSegments.length===1&&!B.reservedTenantDomains.has(e.PathSegments[0])&&this.getAuthorityType(e)===Q.Default&&this.protocolMode===ce.AAD}replaceTenant(e){return e.replace(/{tenant}|{tenantid}/g,this.tenant)}replacePath(e){let t=e;const o=new w(this.metadata.canonical_authority).getUrlComponents(),r=o.PathSegments;return this.canonicalAuthorityUrlComponents.PathSegments.forEach((s,c)=>{let h=r[c];if(c===0&&this.canReplaceTenant(o)){const d=new w(this.metadata.authorization_endpoint).getUrlComponents().PathSegments[0];h!==d&&(this.logger.verbose(`Replacing tenant domain name ${h} with id ${d}`),h=d)}s!==h&&(t=t.replace(`/${h}/`,`/${s}/`))}),this.replaceTenant(t)}get defaultOpenIdConfigurationEndpoint(){const e=this.hostnameAndPort;return this.canonicalAuthority.endsWith("v2.0/")||this.authorityType===Q.Adfs||this.protocolMode!==ce.AAD&&!this.isAliasOfKnownMicrosoftAuthority(e)?`${this.canonicalAuthority}.well-known/openid-configuration`:`${this.canonicalAuthority}v2.0/.well-known/openid-configuration`}discoveryComplete(){return!!this.metadata}async resolveEndpointsAsync(){var o,r;(o=this.performanceClient)==null||o.addQueueMeasurement(l.AuthorityResolveEndpointsAsync,this.correlationId);const e=this.getCurrentMetadataEntity(),t=await m(this.updateCloudDiscoveryMetadata.bind(this),l.AuthorityUpdateCloudDiscoveryMetadata,this.logger,this.performanceClient,this.correlationId)(e);this.canonicalAuthority=this.canonicalAuthority.replace(this.hostnameAndPort,e.preferred_network);const n=await m(this.updateEndpointMetadata.bind(this),l.AuthorityUpdateEndpointMetadata,this.logger,this.performanceClient,this.correlationId)(e);this.updateCachedMetadata(e,t,{source:n}),(r=this.performanceClient)==null||r.addFields({cloudDiscoverySource:t,authorityEndpointSource:n},this.correlationId)}getCurrentMetadataEntity(){let e=this.cacheManager.getAuthorityMetadataByAlias(this.hostnameAndPort);return e||(e={aliases:[],preferred_cache:this.hostnameAndPort,preferred_network:this.hostnameAndPort,canonical_authority:this.canonicalAuthority,authorization_endpoint:"",token_endpoint:"",end_session_endpoint:"",issuer:"",aliasesFromNetwork:!1,endpointsFromNetwork:!1,expiresAt:Bn(),jwks_uri:""}),e}updateCachedMetadata(e,t,n){t!==G.CACHE&&(n==null?void 0:n.source)!==G.CACHE&&(e.expiresAt=Bn(),e.canonical_authority=this.canonicalAuthority);const o=this.cacheManager.generateAuthorityMetadataCacheKey(e.preferred_cache);this.cacheManager.setAuthorityMetadata(o,e),this.metadata=e}async updateEndpointMetadata(e){var o,r,i;(o=this.performanceClient)==null||o.addQueueMeasurement(l.AuthorityUpdateEndpointMetadata,this.correlationId);const t=this.updateEndpointMetadataFromLocalSources(e);if(t){if(t.source===G.HARDCODED_VALUES&&(r=this.authorityOptions.azureRegionConfiguration)!=null&&r.azureRegion&&t.metadata){const s=await m(this.updateMetadataWithRegionalInformation.bind(this),l.AuthorityUpdateMetadataWithRegionalInformation,this.logger,this.performanceClient,this.correlationId)(t.metadata);Xe(e,s,!1),e.canonical_authority=this.canonicalAuthority}return t.source}let n=await m(this.getEndpointMetadataFromNetwork.bind(this),l.AuthorityGetEndpointMetadataFromNetwork,this.logger,this.performanceClient,this.correlationId)();if(n)return(i=this.authorityOptions.azureRegionConfiguration)!=null&&i.azureRegion&&(n=await m(this.updateMetadataWithRegionalInformation.bind(this),l.AuthorityUpdateMetadataWithRegionalInformation,this.logger,this.performanceClient,this.correlationId)(n)),Xe(e,n,!0),G.NETWORK;throw g(go,this.defaultOpenIdConfigurationEndpoint)}updateEndpointMetadataFromLocalSources(e){this.logger.verbose("Attempting to get endpoint metadata from authority configuration");const t=this.getEndpointMetadataFromConfig();if(t)return this.logger.verbose("Found endpoint metadata in authority configuration"),Xe(e,t,!1),{source:G.CONFIG};if(this.logger.verbose("Did not find endpoint metadata in the config... Attempting to get endpoint metadata from the hardcoded values."),this.authorityOptions.skipAuthorityMetadataCache)this.logger.verbose("Skipping hardcoded metadata cache since skipAuthorityMetadataCache is set to true. Attempting to get endpoint metadata from the network metadata cache.");else{const o=this.getEndpointMetadataFromHardcodedValues();if(o)return Xe(e,o,!1),{source:G.HARDCODED_VALUES,metadata:o};this.logger.verbose("Did not find endpoint metadata in hardcoded values... Attempting to get endpoint metadata from the network metadata cache.")}const n=Fn(e);return this.isAuthoritySameType(e)&&e.endpointsFromNetwork&&!n?(this.logger.verbose("Found endpoint metadata in the cache."),{source:G.CACHE}):(n&&this.logger.verbose("The metadata entity is expired."),null)}isAuthoritySameType(e){return new w(e.canonical_authority).getUrlComponents().PathSegments.length===this.canonicalAuthorityUrlComponents.PathSegments.length}getEndpointMetadataFromConfig(){if(this.authorityOptions.authorityMetadata)try{return JSON.parse(this.authorityOptions.authorityMetadata)}catch{throw R(Ko)}return null}async getEndpointMetadataFromNetwork(){var n;(n=this.performanceClient)==null||n.addQueueMeasurement(l.AuthorityGetEndpointMetadataFromNetwork,this.correlationId);const e={},t=this.defaultOpenIdConfigurationEndpoint;this.logger.verbose(`Authority.getEndpointMetadataFromNetwork: attempting to retrieve OAuth endpoints from ${t}`);try{const o=await this.networkInterface.sendGetRequestAsync(t,e);return ka(o.body)?o.body:(this.logger.verbose("Authority.getEndpointMetadataFromNetwork: could not parse response as OpenID configuration"),null)}catch(o){return this.logger.verbose(`Authority.getEndpointMetadataFromNetwork: ${o}`),null}}getEndpointMetadataFromHardcodedValues(){return this.hostnameAndPort in Gn?Gn[this.hostnameAndPort]:null}async updateMetadataWithRegionalInformation(e){var n,o,r;(n=this.performanceClient)==null||n.addQueueMeasurement(l.AuthorityUpdateMetadataWithRegionalInformation,this.correlationId);const t=(o=this.authorityOptions.azureRegionConfiguration)==null?void 0:o.azureRegion;if(t){if(t!==u.AZURE_REGION_AUTO_DISCOVER_FLAG)return this.regionDiscoveryMetadata.region_outcome=St.CONFIGURED_NO_AUTO_DETECTION,this.regionDiscoveryMetadata.region_used=t,B.replaceWithRegionalInformation(e,t);const i=await m(this.regionDiscovery.detectRegion.bind(this.regionDiscovery),l.RegionDiscoveryDetectRegion,this.logger,this.performanceClient,this.correlationId)((r=this.authorityOptions.azureRegionConfiguration)==null?void 0:r.environmentRegion,this.regionDiscoveryMetadata);if(i)return this.regionDiscoveryMetadata.region_outcome=St.AUTO_DETECTION_REQUESTED_SUCCESSFUL,this.regionDiscoveryMetadata.region_used=i,B.replaceWithRegionalInformation(e,i);this.regionDiscoveryMetadata.region_outcome=St.AUTO_DETECTION_REQUESTED_FAILED}return e}async updateCloudDiscoveryMetadata(e){var o;(o=this.performanceClient)==null||o.addQueueMeasurement(l.AuthorityUpdateCloudDiscoveryMetadata,this.correlationId);const t=this.updateCloudDiscoveryMetadataFromLocalSources(e);if(t)return t;const n=await m(this.getCloudDiscoveryMetadataFromNetwork.bind(this),l.AuthorityGetCloudDiscoveryMetadataFromNetwork,this.logger,this.performanceClient,this.correlationId)();if(n)return vt(e,n,!0),G.NETWORK;throw R(xo)}updateCloudDiscoveryMetadataFromLocalSources(e){this.logger.verbose("Attempting to get cloud discovery metadata  from authority configuration"),this.logger.verbosePii(`Known Authorities: ${this.authorityOptions.knownAuthorities||u.NOT_APPLICABLE}`),this.logger.verbosePii(`Authority Metadata: ${this.authorityOptions.authorityMetadata||u.NOT_APPLICABLE}`),this.logger.verbosePii(`Canonical Authority: ${e.canonical_authority||u.NOT_APPLICABLE}`);const t=this.getCloudDiscoveryMetadataFromConfig();if(t)return this.logger.verbose("Found cloud discovery metadata in authority configuration"),vt(e,t,!1),G.CONFIG;if(this.logger.verbose("Did not find cloud discovery metadata in the config... Attempting to get cloud discovery metadata from the hardcoded values."),this.options.skipAuthorityMetadataCache)this.logger.verbose("Skipping hardcoded cloud discovery metadata cache since skipAuthorityMetadataCache is set to true. Attempting to get cloud discovery metadata from the network metadata cache.");else{const o=Pi(this.hostnameAndPort);if(o)return this.logger.verbose("Found cloud discovery metadata from hardcoded values."),vt(e,o,!1),G.HARDCODED_VALUES;this.logger.verbose("Did not find cloud discovery metadata in hardcoded values... Attempting to get cloud discovery metadata from the network metadata cache.")}const n=Fn(e);return this.isAuthoritySameType(e)&&e.aliasesFromNetwork&&!n?(this.logger.verbose("Found cloud discovery metadata in the cache."),G.CACHE):(n&&this.logger.verbose("The metadata entity is expired."),null)}getCloudDiscoveryMetadataFromConfig(){if(this.authorityType===Q.Ciam)return this.logger.verbose("CIAM authorities do not support cloud discovery metadata, generate the aliases from authority host."),B.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort);if(this.authorityOptions.cloudDiscoveryMetadata){this.logger.verbose("The cloud discovery metadata has been provided as a network response, in the config.");try{this.logger.verbose("Attempting to parse the cloud discovery metadata.");const e=JSON.parse(this.authorityOptions.cloudDiscoveryMetadata),t=ct(e.metadata,this.hostnameAndPort);if(this.logger.verbose("Parsed the cloud discovery metadata."),t)return this.logger.verbose("There is returnable metadata attached to the parsed cloud discovery metadata."),t;this.logger.verbose("There is no metadata attached to the parsed cloud discovery metadata.")}catch{throw this.logger.verbose("Unable to parse the cloud discovery metadata. Throwing Invalid Cloud Discovery Metadata Error."),R(nn)}}return this.isInKnownAuthorities()?(this.logger.verbose("The host is included in knownAuthorities. Creating new cloud discovery metadata from the host."),B.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort)):null}async getCloudDiscoveryMetadataFromNetwork(){var o;(o=this.performanceClient)==null||o.addQueueMeasurement(l.AuthorityGetCloudDiscoveryMetadataFromNetwork,this.correlationId);const e=`${u.AAD_INSTANCE_DISCOVERY_ENDPT}${this.canonicalAuthority}oauth2/v2.0/authorize`,t={};let n=null;try{const r=await this.networkInterface.sendGetRequestAsync(e,t);let i,s;if(Ra(r.body))i=r.body,s=i.metadata,this.logger.verbosePii(`tenant_discovery_endpoint is: ${i.tenant_discovery_endpoint}`);else if(ba(r.body)){if(this.logger.warning(`A CloudInstanceDiscoveryErrorResponse was returned. The cloud instance discovery network request's status code is: ${r.status}`),i=r.body,i.error===u.INVALID_INSTANCE)return this.logger.error("The CloudInstanceDiscoveryErrorResponse error is invalid_instance."),null;this.logger.warning(`The CloudInstanceDiscoveryErrorResponse error is ${i.error}`),this.logger.warning(`The CloudInstanceDiscoveryErrorResponse error description is ${i.error_description}`),this.logger.warning("Setting the value of the CloudInstanceDiscoveryMetadata (returned from the network) to []"),s=[]}else return this.logger.error("AAD did not return a CloudInstanceDiscoveryResponse or CloudInstanceDiscoveryErrorResponse"),null;this.logger.verbose("Attempting to find a match between the developer's authority and the CloudInstanceDiscoveryMetadata returned from the network request."),n=ct(s,this.hostnameAndPort)}catch(r){if(r instanceof N)this.logger.error(`There was a network error while attempting to get the cloud discovery instance metadata.
Error: ${r.errorCode}
Error Description: ${r.errorMessage}`);else{const i=r;this.logger.error(`A non-MSALJS error was thrown while attempting to get the cloud instance discovery metadata.
Error: ${i.name}
Error Description: ${i.message}`)}return null}return n||(this.logger.warning("The developer's authority was not found within the CloudInstanceDiscoveryMetadata returned from the network request."),this.logger.verbose("Creating custom Authority for custom domain scenario."),n=B.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort)),n}isInKnownAuthorities(){return this.authorityOptions.knownAuthorities.filter(t=>t&&w.getDomainFromUrl(t).toLowerCase()===this.hostnameAndPort).length>0}static generateAuthority(e,t){let n;if(t&&t.azureCloudInstance!==Xt.None){const o=t.tenant?t.tenant:u.DEFAULT_COMMON_TENANT;n=`${t.azureCloudInstance}/${o}/`}return n||e}static createCloudDiscoveryMetadataFromHost(e){return{preferred_network:e,preferred_cache:e,aliases:[e]}}getPreferredCache(){if(this.managedIdentity)return u.DEFAULT_AUTHORITY_HOST;if(this.discoveryComplete())return this.metadata.preferred_cache;throw g(ie)}isAlias(e){return this.metadata.aliases.indexOf(e)>-1}isAliasOfKnownMicrosoftAuthority(e){return Qo.has(e)}static isPublicCloudAuthority(e){return u.KNOWN_PUBLIC_CLOUDS.indexOf(e)>=0}static buildRegionalAuthorityString(e,t,n){const o=new w(e);o.validateAsUri();const r=o.getUrlComponents();let i=`${t}.${r.HostNameAndPort}`;this.isPublicCloudAuthority(r.HostNameAndPort)&&(i=`${t}.${u.REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX}`);const s=w.constructAuthorityUriFromObject({...o.getUrlComponents(),HostNameAndPort:i}).urlString;return n?`${s}?${n}`:s}static replaceWithRegionalInformation(e,t){const n={...e};return n.authorization_endpoint=B.buildRegionalAuthorityString(n.authorization_endpoint,t),n.token_endpoint=B.buildRegionalAuthorityString(n.token_endpoint,t),n.end_session_endpoint&&(n.end_session_endpoint=B.buildRegionalAuthorityString(n.end_session_endpoint,t)),n}static transformCIAMAuthority(e){let t=e;const o=new w(e).getUrlComponents();if(o.PathSegments.length===0&&o.HostNameAndPort.endsWith(u.CIAM_AUTH_URL)){const r=o.HostNameAndPort.split(".")[0];t=`${t}${r}${u.AAD_TENANT_DOMAIN_SUFFIX}`}return t}}B.reservedTenantDomains=new Set(["{tenant}","{tenantid}",ge.COMMON,ge.CONSUMERS,ge.ORGANIZATIONS]);function Na(a){var o;const n=(o=new w(a).getUrlComponents().PathSegments.slice(-1)[0])==null?void 0:o.toLowerCase();switch(n){case ge.COMMON:case ge.ORGANIZATIONS:case ge.CONSUMERS:return;default:return n}}function jo(a){return a.endsWith(u.FORWARD_SLASH)?a:`${a}${u.FORWARD_SLASH}`}function Pa(a){const e=a.cloudDiscoveryMetadata;let t;if(e)try{t=JSON.parse(e)}catch{throw R(nn)}return{canonicalAuthority:a.authority?jo(a.authority):void 0,knownAuthorities:a.knownAuthorities,cloudDiscoveryMetadata:t}}/*! @azure/msal-common v14.15.0 2024-09-20 */async function Jo(a,e,t,n,o,r,i){i==null||i.addQueueMeasurement(l.AuthorityFactoryCreateDiscoveredInstance,r);const s=B.transformCIAMAuthority(jo(a)),c=new B(s,e,t,n,o,r,i);try{return await m(c.resolveEndpointsAsync.bind(c),l.AuthorityResolveEndpointsAsync,o,i,r)(),c}catch{throw g(ie)}}/*! @azure/msal-common v14.15.0 2024-09-20 */class hn{constructor(e,t){this.config=Fi(e),this.logger=new pe(this.config.loggerOptions,ko,Jt),this.cryptoUtils=this.config.cryptoInterface,this.cacheManager=this.config.storageInterface,this.networkClient=this.config.networkInterface,this.networkManager=new qi(this.networkClient,this.cacheManager),this.serverTelemetryManager=this.config.serverTelemetryManager,this.authority=this.config.authOptions.authority,this.performanceClient=t}createTokenRequestHeaders(e){const t={};if(t[ee.CONTENT_TYPE]=u.URL_FORM_CONTENT_TYPE,!this.config.systemOptions.preventCorsPreflight&&e)switch(e.type){case $.HOME_ACCOUNT_ID:try{const n=ke(e.credential);t[ee.CCS_HEADER]=`Oid:${n.uid}@${n.utid}`}catch(n){this.logger.verbose("Could not parse home account ID for CCS Header: "+n)}break;case $.UPN:t[ee.CCS_HEADER]=`UPN: ${e.credential}`;break}return t}async executePostToTokenEndpoint(e,t,n,o,r,i){var c,h,d,p;i&&((c=this.performanceClient)==null||c.addQueueMeasurement(i,r));const s=await this.networkManager.sendPostRequest(o,e,{body:t,headers:n});return(p=this.performanceClient)==null||p.addFields({refreshTokenSize:((h=s.body.refresh_token)==null?void 0:h.length)||0,httpVerToken:((d=s.headers)==null?void 0:d[ee.X_MS_HTTP_VERSION])||""},r),this.config.serverTelemetryManager&&s.status<500&&s.status!==429&&this.config.serverTelemetryManager.clearTelemetryCache(),s}async updateAuthority(e,t){var r;(r=this.performanceClient)==null||r.addQueueMeasurement(l.UpdateTokenEndpointAuthority,t);const n=`https://${e}/${this.authority.tenant}/`,o=await Jo(n,this.networkClient,this.cacheManager,this.authority.options,this.logger,t,this.performanceClient);this.authority=o}createTokenQueryParameters(e){const t=new Fe;return e.tokenQueryParameters&&t.addExtraQueryParameters(e.tokenQueryParameters),t.createQueryString()}}/*! @azure/msal-common v14.15.0 2024-09-20 */const ht="no_tokens_found",Xo="native_account_unavailable",ln="refresh_token_expired",Ma="interaction_required",Ua="consent_required",La="login_required",Ct="bad_token";/*! @azure/msal-common v14.15.0 2024-09-20 */const Yn=[Ma,Ua,La,Ct],Ha=["message_only","additional_action","basic_action","user_password_expired","consent_required","bad_token"],Da={[ht]:"No refresh token found in the cache. Please sign-in.",[Xo]:"The requested account is not available in the native broker. It may have been deleted or logged out. Please sign-in again using an interactive API.",[ln]:"Refresh token has expired.",[Ct]:"Identity provider returned bad_token due to an expired or invalid refresh token. Please invoke an interactive API to resolve."};class j extends N{constructor(e,t,n,o,r,i,s,c){super(e,t,n),Object.setPrototypeOf(this,j.prototype),this.timestamp=o||u.EMPTY_STRING,this.traceId=r||u.EMPTY_STRING,this.correlationId=i||u.EMPTY_STRING,this.claims=s||u.EMPTY_STRING,this.name="InteractionRequiredAuthError",this.errorNo=c}}function Wn(a,e,t){const n=!!a&&Yn.indexOf(a)>-1,o=!!t&&Ha.indexOf(t)>-1,r=!!e&&Yn.some(i=>e.indexOf(i)>-1);return n||r||o}function Lt(a){return new j(a,Da[a])}/*! @azure/msal-common v14.15.0 2024-09-20 */class W{static setRequestState(e,t,n){const o=W.generateLibraryState(e,n);return t?`${o}${u.RESOURCE_DELIM}${t}`:o}static generateLibraryState(e,t){if(!e)throw g(Nt);const n={id:e.createNewGuid()};t&&(n.meta=t);const o=JSON.stringify(n);return e.base64Encode(o)}static parseRequestState(e,t){if(!e)throw g(Nt);if(!t)throw g(Ne);try{const n=t.split(u.RESOURCE_DELIM),o=n[0],r=n.length>1?n.slice(1).join(u.RESOURCE_DELIM):u.EMPTY_STRING,i=e.base64Decode(o),s=JSON.parse(i);return{userRequestState:r||u.EMPTY_STRING,libraryState:s}}catch{throw g(Ne)}}}/*! @azure/msal-common v14.15.0 2024-09-20 */const Ka={SW:"sw",UHW:"uhw"};class Ue{constructor(e,t){this.cryptoUtils=e,this.performanceClient=t}async generateCnf(e,t){var r;(r=this.performanceClient)==null||r.addQueueMeasurement(l.PopTokenGenerateCnf,e.correlationId);const n=await m(this.generateKid.bind(this),l.PopTokenGenerateCnf,t,this.performanceClient,e.correlationId)(e),o=this.cryptoUtils.base64UrlEncode(JSON.stringify(n));return{kid:n.kid,reqCnfString:o}}async generateKid(e){var n;return(n=this.performanceClient)==null||n.addQueueMeasurement(l.PopTokenGenerateKid,e.correlationId),{kid:await this.cryptoUtils.getPublicKeyThumbprint(e),xms_ksl:Ka.SW}}async signPopToken(e,t,n){return this.signPayload(e,t,n)}async signPayload(e,t,n,o){const{resourceRequestMethod:r,resourceRequestUri:i,shrClaims:s,shrNonce:c,shrOptions:h}=n,d=i?new w(i):void 0,p=d==null?void 0:d.getUrlComponents();return this.cryptoUtils.signJwt({at:e,ts:oe(),m:r==null?void 0:r.toUpperCase(),u:p==null?void 0:p.HostNameAndPort,nonce:c||this.cryptoUtils.createNewGuid(),p:p==null?void 0:p.AbsolutePath,q:p!=null&&p.QueryString?[[],p.QueryString]:void 0,client_claims:s||void 0,...o},t,h,n.correlationId)}}/*! @azure/msal-common v14.15.0 2024-09-20 */class xa{constructor(e,t){this.cache=e,this.hasChanged=t}get cacheHasChanged(){return this.hasChanged}get tokenCache(){return this.cache}}/*! @azure/msal-common v14.15.0 2024-09-20 */function Ba(a){var n,o;const e="code=",t=(n=a.error_uri)==null?void 0:n.lastIndexOf(e);return t&&t>=0?(o=a.error_uri)==null?void 0:o.substring(t+e.length):void 0}class Ce{constructor(e,t,n,o,r,i,s){this.clientId=e,this.cacheStorage=t,this.cryptoObj=n,this.logger=o,this.serializableCache=r,this.persistencePlugin=i,this.performanceClient=s}validateServerAuthorizationCodeResponse(e,t){if(!e.state||!t)throw e.state?g(ot,"Cached State"):g(ot,"Server State");let n,o;try{n=decodeURIComponent(e.state)}catch{throw g(Ne,e.state)}try{o=decodeURIComponent(t)}catch{throw g(Ne,e.state)}if(n!==o)throw g(mo);if(e.error||e.error_description||e.suberror){const r=Ba(e);throw Wn(e.error,e.error_description,e.suberror)?new j(e.error||"",e.error_description,e.suberror,e.timestamp||"",e.trace_id||"",e.correlation_id||"",e.claims||"",r):new me(e.error||"",e.error_description,e.suberror,r)}}validateTokenResponse(e,t){var n;if(e.error||e.error_description||e.suberror){const o=`Error(s): ${e.error_codes||u.NOT_AVAILABLE} - Timestamp: ${e.timestamp||u.NOT_AVAILABLE} - Description: ${e.error_description||u.NOT_AVAILABLE} - Correlation ID: ${e.correlation_id||u.NOT_AVAILABLE} - Trace ID: ${e.trace_id||u.NOT_AVAILABLE}`,r=(n=e.error_codes)!=null&&n.length?e.error_codes[0]:void 0,i=new me(e.error,o,e.suberror,r,e.status);if(t&&e.status&&e.status>=Ye.SERVER_ERROR_RANGE_START&&e.status<=Ye.SERVER_ERROR_RANGE_END){this.logger.warning(`executeTokenRequest:validateTokenResponse - AAD is currently unavailable and the access token is unable to be refreshed.
${i}`);return}else if(t&&e.status&&e.status>=Ye.CLIENT_ERROR_RANGE_START&&e.status<=Ye.CLIENT_ERROR_RANGE_END){this.logger.warning(`executeTokenRequest:validateTokenResponse - AAD is currently available but is unable to refresh the access token.
${i}`);return}throw Wn(e.error,e.error_description,e.suberror)?new j(e.error,e.error_description,e.suberror,e.timestamp||u.EMPTY_STRING,e.trace_id||u.EMPTY_STRING,e.correlation_id||u.EMPTY_STRING,e.claims||u.EMPTY_STRING,r):i}}async handleServerTokenResponse(e,t,n,o,r,i,s,c,h){var E;(E=this.performanceClient)==null||E.addQueueMeasurement(l.HandleServerTokenResponse,e.correlation_id);let d;if(e.id_token){if(d=Ae(e.id_token||u.EMPTY_STRING,this.cryptoObj.base64Decode),r&&r.nonce&&d.nonce!==r.nonce)throw g(fo);if(o.maxAge||o.maxAge===0){const S=d.auth_time;if(!S)throw g(Qt);Ro(S,o.maxAge)}}this.homeAccountIdentifier=L.generateHomeAccountId(e.client_info||u.EMPTY_STRING,t.authorityType,this.logger,this.cryptoObj,d);let p;r&&r.state&&(p=W.parseRequestState(this.cryptoObj,r.state)),e.key_id=e.key_id||o.sshKid||void 0;const f=this.generateCacheRecord(e,t,n,o,d,i,r);let y;try{if(this.persistencePlugin&&this.serializableCache&&(this.logger.verbose("Persistence enabled, calling beforeCacheAccess"),y=new xa(this.serializableCache,!0),await this.persistencePlugin.beforeCacheAccess(y)),s&&!c&&f.account){const S=f.account.generateAccountKey();if(!this.cacheStorage.getAccount(S,this.logger))return this.logger.warning("Account used to refresh tokens not in persistence, refreshed tokens will not be stored in the cache"),await Ce.generateAuthenticationResult(this.cryptoObj,t,f,!1,o,d,p,void 0,h)}await this.cacheStorage.saveCacheRecord(f,o.storeInCache,o.correlationId)}finally{this.persistencePlugin&&this.serializableCache&&y&&(this.logger.verbose("Persistence enabled, calling afterCacheAccess"),await this.persistencePlugin.afterCacheAccess(y))}return Ce.generateAuthenticationResult(this.cryptoObj,t,f,!1,o,d,p,e,h)}generateCacheRecord(e,t,n,o,r,i,s){const c=t.getPreferredCache();if(!c)throw g(Wt);const h=zo(r);let d,p;e.id_token&&r&&(d=gt(this.homeAccountIdentifier,c,e.id_token,this.clientId,h||""),p=dn(this.cacheStorage,t,this.homeAccountIdentifier,this.cryptoObj.base64Decode,r,e.client_info,c,h,s,void 0,this.logger));let f=null;if(e.access_token){const S=e.scope?P.fromString(e.scope):new P(o.scopes||[]),M=(typeof e.expires_in=="string"?parseInt(e.expires_in,10):e.expires_in)||0,x=(typeof e.ext_expires_in=="string"?parseInt(e.ext_expires_in,10):e.ext_expires_in)||0,V=(typeof e.refresh_in=="string"?parseInt(e.refresh_in,10):e.refresh_in)||void 0,le=n+M,Ve=le+x,Qe=V&&V>0?n+V:void 0;f=pt(this.homeAccountIdentifier,c,e.access_token,this.clientId,h||t.tenant||"",S.printScopes(),le,Ve,this.cryptoObj.base64Decode,Qe,e.token_type,i,e.key_id,o.claims,o.requestedClaimsHash)}let y=null;if(e.refresh_token){let S;if(e.refresh_token_expires_in){const M=typeof e.refresh_token_expires_in=="string"?parseInt(e.refresh_token_expires_in,10):e.refresh_token_expires_in;S=n+M}y=bo(this.homeAccountIdentifier,c,e.refresh_token,this.clientId,e.foci,i,S)}let E=null;return e.foci&&(E={clientId:this.clientId,environment:c,familyId:e.foci}),{account:p,idToken:d,accessToken:f,refreshToken:y,appMetadata:E}}static async generateAuthenticationResult(e,t,n,o,r,i,s,c,h){var le,Ve,Qe,Rn,bn;let d=u.EMPTY_STRING,p=[],f=null,y,E,S=u.EMPTY_STRING;if(n.accessToken){if(n.accessToken.tokenType===k.POP&&!r.popKid){const jr=new Ue(e),{secret:Jr,keyId:On}=n.accessToken;if(!On)throw g(jt);d=await jr.signPopToken(Jr,On,r)}else d=n.accessToken.secret;p=P.fromString(n.accessToken.target).asArray(),f=new Date(Number(n.accessToken.expiresOn)*1e3),y=new Date(Number(n.accessToken.extendedExpiresOn)*1e3),n.accessToken.refreshOn&&(E=new Date(Number(n.accessToken.refreshOn)*1e3))}n.appMetadata&&(S=n.appMetadata.familyId===xe?xe:"");const M=(i==null?void 0:i.oid)||(i==null?void 0:i.sub)||"",x=(i==null?void 0:i.tid)||"";c!=null&&c.spa_accountid&&n.account&&(n.account.nativeAccountId=c==null?void 0:c.spa_accountid);const V=n.account?an(n.account.getAccountInfo(),void 0,i,(le=n.idToken)==null?void 0:le.secret):null;return{authority:t.canonicalAuthority,uniqueId:M,tenantId:x,scopes:p,account:V,idToken:((Ve=n==null?void 0:n.idToken)==null?void 0:Ve.secret)||"",idTokenClaims:i||{},accessToken:d,fromCache:o,expiresOn:f,extExpiresOn:y,refreshOn:E,correlationId:r.correlationId,requestId:h||u.EMPTY_STRING,familyId:S,tokenType:((Qe=n.accessToken)==null?void 0:Qe.tokenType)||u.EMPTY_STRING,state:s?s.userRequestState:u.EMPTY_STRING,cloudGraphHostName:((Rn=n.account)==null?void 0:Rn.cloudGraphHostName)||u.EMPTY_STRING,msGraphHost:((bn=n.account)==null?void 0:bn.msGraphHost)||u.EMPTY_STRING,code:c==null?void 0:c.spa_code,fromNativeBroker:!1}}}function dn(a,e,t,n,o,r,i,s,c,h,d){d==null||d.verbose("setCachedAccount called");const f=a.getAccountKeys().find(x=>x.startsWith(t));let y=null;f&&(y=a.getAccount(f,d));const E=y||L.createAccount({homeAccountId:t,idTokenClaims:o,clientInfo:r,environment:i,cloudGraphHostName:c==null?void 0:c.cloud_graph_host_name,msGraphHost:c==null?void 0:c.msgraph_host,nativeAccountId:h},e,n),S=E.tenantProfiles||[],M=s||E.realm;if(M&&!S.find(x=>x.tenantId===M)){const x=rn(t,E.localAccountId,M,o);S.push(x)}return E.tenantProfiles=S,E}/*! @azure/msal-common v14.15.0 2024-09-20 */async function Zo(a,e,t){return typeof a=="string"?a:a({clientId:e,tokenEndpoint:t})}/*! @azure/msal-common v14.15.0 2024-09-20 */class er extends hn{constructor(e,t){var n;super(e,t),this.includeRedirectUri=!0,this.oidcDefaultScopes=(n=this.config.authOptions.authority.options.OIDCOptions)==null?void 0:n.defaultScopes}async getAuthCodeUrl(e){var n;(n=this.performanceClient)==null||n.addQueueMeasurement(l.GetAuthCodeUrl,e.correlationId);const t=await m(this.createAuthCodeUrlQueryString.bind(this),l.AuthClientCreateQueryString,this.logger,this.performanceClient,e.correlationId)(e);return w.appendQueryString(this.authority.authorizationEndpoint,t)}async acquireToken(e,t){var s,c;if((s=this.performanceClient)==null||s.addQueueMeasurement(l.AuthClientAcquireToken,e.correlationId),!e.code)throw g(yo);const n=oe(),o=await m(this.executeTokenRequest.bind(this),l.AuthClientExecuteTokenRequest,this.logger,this.performanceClient,e.correlationId)(this.authority,e),r=(c=o.headers)==null?void 0:c[ee.X_MS_REQUEST_ID],i=new Ce(this.config.authOptions.clientId,this.cacheManager,this.cryptoUtils,this.logger,this.config.serializableCache,this.config.persistencePlugin,this.performanceClient);return i.validateTokenResponse(o.body),m(i.handleServerTokenResponse.bind(i),l.HandleServerTokenResponse,this.logger,this.performanceClient,e.correlationId)(o.body,this.authority,n,e,t,void 0,void 0,void 0,r)}handleFragmentResponse(e,t){if(new Ce(this.config.authOptions.clientId,this.cacheManager,this.cryptoUtils,this.logger,null,null).validateServerAuthorizationCodeResponse(e,t),!e.code)throw g(vo);return e}getLogoutUri(e){if(!e)throw R(Ho);const t=this.createLogoutUrlQueryString(e);return w.appendQueryString(this.authority.endSessionEndpoint,t)}async executeTokenRequest(e,t){var h,d;(h=this.performanceClient)==null||h.addQueueMeasurement(l.AuthClientExecuteTokenRequest,t.correlationId);const n=this.createTokenQueryParameters(t),o=w.appendQueryString(e.tokenEndpoint,n),r=await m(this.createTokenRequestBody.bind(this),l.AuthClientCreateTokenRequestBody,this.logger,this.performanceClient,t.correlationId)(t);let i;if(t.clientInfo)try{const p=it(t.clientInfo,this.cryptoUtils.base64Decode);i={credential:`${p.uid}${F.CLIENT_INFO_SEPARATOR}${p.utid}`,type:$.HOME_ACCOUNT_ID}}catch(p){this.logger.verbose("Could not parse client info for CCS Header: "+p)}const s=this.createTokenRequestHeaders(i||t.ccsCredential),c={clientId:((d=t.tokenBodyParameters)==null?void 0:d.clientId)||this.config.authOptions.clientId,authority:e.canonicalAuthority,scopes:t.scopes,claims:t.claims,authenticationScheme:t.authenticationScheme,resourceRequestMethod:t.resourceRequestMethod,resourceRequestUri:t.resourceRequestUri,shrClaims:t.shrClaims,sshKid:t.sshKid};return m(this.executePostToTokenEndpoint.bind(this),l.AuthorizationCodeClientExecutePostToTokenEndpoint,this.logger,this.performanceClient,t.correlationId)(o,r,s,c,t.correlationId,l.AuthorizationCodeClientExecutePostToTokenEndpoint)}async createTokenRequestBody(e){var r,i;(r=this.performanceClient)==null||r.addQueueMeasurement(l.AuthClientCreateTokenRequestBody,e.correlationId);const t=new Fe;if(t.addClientId(((i=e.tokenBodyParameters)==null?void 0:i[Me])||this.config.authOptions.clientId),this.includeRedirectUri?t.addRedirectUri(e.redirectUri):Se.validateRedirectUri(e.redirectUri),t.addScopes(e.scopes,!0,this.oidcDefaultScopes),t.addAuthorizationCode(e.code),t.addLibraryInfo(this.config.libraryInfo),t.addApplicationTelemetry(this.config.telemetry.application),t.addThrottling(),this.serverTelemetryManager&&!Ut(this.config)&&t.addServerTelemetry(this.serverTelemetryManager),e.codeVerifier&&t.addCodeVerifier(e.codeVerifier),this.config.clientCredentials.clientSecret&&t.addClientSecret(this.config.clientCredentials.clientSecret),this.config.clientCredentials.clientAssertion){const s=this.config.clientCredentials.clientAssertion;t.addClientAssertion(await Zo(s.assertion,this.config.authOptions.clientId,e.resourceRequestUri)),t.addClientAssertionType(s.assertionType)}if(t.addGrantType(so.AUTHORIZATION_CODE_GRANT),t.addClientInfo(),e.authenticationScheme===k.POP){const s=new Ue(this.cryptoUtils,this.performanceClient);let c;e.popKid?c=this.cryptoUtils.encodeKid(e.popKid):c=(await m(s.generateCnf.bind(s),l.PopTokenGenerateCnf,this.logger,this.performanceClient,e.correlationId)(e,this.logger)).reqCnfString,t.addPopToken(c)}else if(e.authenticationScheme===k.SSH)if(e.sshJwk)t.addSshJwk(e.sshJwk);else throw R(mt);const n=e.correlationId||this.config.cryptoInterface.createNewGuid();t.addCorrelationId(n),(!Y.isEmptyObj(e.claims)||this.config.authOptions.clientCapabilities&&this.config.authOptions.clientCapabilities.length>0)&&t.addClaims(e.claims,this.config.authOptions.clientCapabilities);let o;if(e.clientInfo)try{const s=it(e.clientInfo,this.cryptoUtils.base64Decode);o={credential:`${s.uid}${F.CLIENT_INFO_SEPARATOR}${s.utid}`,type:$.HOME_ACCOUNT_ID}}catch(s){this.logger.verbose("Could not parse client info for CCS Header: "+s)}else o=e.ccsCredential;if(this.config.systemOptions.preventCorsPreflight&&o)switch(o.type){case $.HOME_ACCOUNT_ID:try{const s=ke(o.credential);t.addCcsOid(s)}catch(s){this.logger.verbose("Could not parse home account ID for CCS Header: "+s)}break;case $.UPN:t.addCcsUpn(o.credential);break}return e.tokenBodyParameters&&t.addExtraQueryParameters(e.tokenBodyParameters),e.enableSpaAuthorizationCode&&(!e.tokenBodyParameters||!e.tokenBodyParameters[Qn])&&t.addExtraQueryParameters({[Qn]:"1"}),t.createQueryString()}async createAuthCodeUrlQueryString(e){var r,i;(r=this.performanceClient)==null||r.addQueueMeasurement(l.AuthClientCreateQueryString,e.correlationId);const t=new Fe;t.addClientId(((i=e.extraQueryParameters)==null?void 0:i[Me])||this.config.authOptions.clientId);const n=[...e.scopes||[],...e.extraScopesToConsent||[]];t.addScopes(n,!0,this.oidcDefaultScopes),t.addRedirectUri(e.redirectUri);const o=e.correlationId||this.config.cryptoInterface.createNewGuid();if(t.addCorrelationId(o),t.addResponseMode(e.responseMode),t.addResponseTypeCode(),t.addLibraryInfo(this.config.libraryInfo),Ut(this.config)||t.addApplicationTelemetry(this.config.telemetry.application),t.addClientInfo(),e.codeChallenge&&e.codeChallengeMethod&&t.addCodeChallengeParams(e.codeChallenge,e.codeChallengeMethod),e.prompt&&t.addPrompt(e.prompt),e.domainHint&&t.addDomainHint(e.domainHint),e.prompt!==D.SELECT_ACCOUNT)if(e.sid&&e.prompt===D.NONE)this.logger.verbose("createAuthCodeUrlQueryString: Prompt is none, adding sid from request"),t.addSid(e.sid);else if(e.account){const s=this.extractAccountSid(e.account);let c=this.extractLoginHint(e.account);if(c&&e.domainHint&&(this.logger.warning('AuthorizationCodeClient.createAuthCodeUrlQueryString: "domainHint" param is set, skipping opaque "login_hint" claim. Please consider not passing domainHint'),c=null),c){this.logger.verbose("createAuthCodeUrlQueryString: login_hint claim present on account"),t.addLoginHint(c);try{const h=ke(e.account.homeAccountId);t.addCcsOid(h)}catch{this.logger.verbose("createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header")}}else if(s&&e.prompt===D.NONE){this.logger.verbose("createAuthCodeUrlQueryString: Prompt is none, adding sid from account"),t.addSid(s);try{const h=ke(e.account.homeAccountId);t.addCcsOid(h)}catch{this.logger.verbose("createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header")}}else if(e.loginHint)this.logger.verbose("createAuthCodeUrlQueryString: Adding login_hint from request"),t.addLoginHint(e.loginHint),t.addCcsUpn(e.loginHint);else if(e.account.username){this.logger.verbose("createAuthCodeUrlQueryString: Adding login_hint from account"),t.addLoginHint(e.account.username);try{const h=ke(e.account.homeAccountId);t.addCcsOid(h)}catch{this.logger.verbose("createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header")}}}else e.loginHint&&(this.logger.verbose("createAuthCodeUrlQueryString: No account, adding login_hint from request"),t.addLoginHint(e.loginHint),t.addCcsUpn(e.loginHint));else this.logger.verbose("createAuthCodeUrlQueryString: Prompt is select_account, ignoring account hints");if(e.nonce&&t.addNonce(e.nonce),e.state&&t.addState(e.state),(e.claims||this.config.authOptions.clientCapabilities&&this.config.authOptions.clientCapabilities.length>0)&&t.addClaims(e.claims,this.config.authOptions.clientCapabilities),this.addExtraQueryParams(e,t),e.nativeBroker&&(t.addNativeBroker(),e.authenticationScheme===k.POP)){const s=new Ue(this.cryptoUtils);let c;e.popKid?c=this.cryptoUtils.encodeKid(e.popKid):c=(await m(s.generateCnf.bind(s),l.PopTokenGenerateCnf,this.logger,this.performanceClient,e.correlationId)(e,this.logger)).reqCnfString,t.addPopToken(c)}return t.createQueryString()}createLogoutUrlQueryString(e){const t=new Fe;return e.postLogoutRedirectUri&&t.addPostLogoutRedirectUri(e.postLogoutRedirectUri),e.correlationId&&t.addCorrelationId(e.correlationId),e.idTokenHint&&t.addIdTokenHint(e.idTokenHint),e.state&&t.addState(e.state),e.logoutHint&&t.addLogoutHint(e.logoutHint),this.addExtraQueryParams(e,t),t.createQueryString()}addExtraQueryParams(e,t){!(e.extraQueryParameters&&e.extraQueryParameters.hasOwnProperty("instance_aware"))&&this.config.authOptions.instanceAware&&(e.extraQueryParameters=e.extraQueryParameters||{},e.extraQueryParameters.instance_aware="true"),e.extraQueryParameters&&t.addExtraQueryParameters(e.extraQueryParameters)}extractAccountSid(e){var t;return((t=e.idTokenClaims)==null?void 0:t.sid)||null}extractLoginHint(e){var t;return((t=e.idTokenClaims)==null?void 0:t.login_hint)||null}}/*! @azure/msal-common v14.15.0 2024-09-20 */const Fa=300;class Ht extends hn{constructor(e,t){super(e,t)}async acquireToken(e){var i,s;(i=this.performanceClient)==null||i.addQueueMeasurement(l.RefreshTokenClientAcquireToken,e.correlationId);const t=oe(),n=await m(this.executeTokenRequest.bind(this),l.RefreshTokenClientExecuteTokenRequest,this.logger,this.performanceClient,e.correlationId)(e,this.authority),o=(s=n.headers)==null?void 0:s[ee.X_MS_REQUEST_ID],r=new Ce(this.config.authOptions.clientId,this.cacheManager,this.cryptoUtils,this.logger,this.config.serializableCache,this.config.persistencePlugin);return r.validateTokenResponse(n.body),m(r.handleServerTokenResponse.bind(r),l.HandleServerTokenResponse,this.logger,this.performanceClient,e.correlationId)(n.body,this.authority,t,e,void 0,void 0,!0,e.forceCache,o)}async acquireTokenByRefreshToken(e){var n;if(!e)throw R(Lo);if((n=this.performanceClient)==null||n.addQueueMeasurement(l.RefreshTokenClientAcquireTokenByRefreshToken,e.correlationId),!e.account)throw g(Yt);if(this.cacheManager.isAppMetadataFOCI(e.account.environment))try{return await m(this.acquireTokenWithCachedRefreshToken.bind(this),l.RefreshTokenClientAcquireTokenWithCachedRefreshToken,this.logger,this.performanceClient,e.correlationId)(e,!0)}catch(o){const r=o instanceof j&&o.errorCode===ht,i=o instanceof me&&o.errorCode===Mn.INVALID_GRANT_ERROR&&o.subError===Mn.CLIENT_MISMATCH_ERROR;if(r||i)return m(this.acquireTokenWithCachedRefreshToken.bind(this),l.RefreshTokenClientAcquireTokenWithCachedRefreshToken,this.logger,this.performanceClient,e.correlationId)(e,!1);throw o}return m(this.acquireTokenWithCachedRefreshToken.bind(this),l.RefreshTokenClientAcquireTokenWithCachedRefreshToken,this.logger,this.performanceClient,e.correlationId)(e,!1)}async acquireTokenWithCachedRefreshToken(e,t){var r;(r=this.performanceClient)==null||r.addQueueMeasurement(l.RefreshTokenClientAcquireTokenWithCachedRefreshToken,e.correlationId);const n=Ie(this.cacheManager.getRefreshToken.bind(this.cacheManager),l.CacheManagerGetRefreshToken,this.logger,this.performanceClient,e.correlationId)(e.account,t,void 0,this.performanceClient,e.correlationId);if(!n)throw Lt(ht);if(n.expiresOn&&Mt(n.expiresOn,e.refreshTokenExpirationOffsetSeconds||Fa))throw Lt(ln);const o={...e,refreshToken:n.secret,authenticationScheme:e.authenticationScheme||k.BEARER,ccsCredential:{credential:e.account.homeAccountId,type:$.HOME_ACCOUNT_ID}};try{return await m(this.acquireToken.bind(this),l.RefreshTokenClientAcquireToken,this.logger,this.performanceClient,e.correlationId)(o)}catch(i){if(i instanceof j&&i.subError===Ct){this.logger.verbose("acquireTokenWithRefreshToken: bad refresh token, removing from cache");const s=_e(n);this.cacheManager.removeRefreshToken(s)}throw i}}async executeTokenRequest(e,t){var c,h;(c=this.performanceClient)==null||c.addQueueMeasurement(l.RefreshTokenClientExecuteTokenRequest,e.correlationId);const n=this.createTokenQueryParameters(e),o=w.appendQueryString(t.tokenEndpoint,n),r=await m(this.createTokenRequestBody.bind(this),l.RefreshTokenClientCreateTokenRequestBody,this.logger,this.performanceClient,e.correlationId)(e),i=this.createTokenRequestHeaders(e.ccsCredential),s={clientId:((h=e.tokenBodyParameters)==null?void 0:h.clientId)||this.config.authOptions.clientId,authority:t.canonicalAuthority,scopes:e.scopes,claims:e.claims,authenticationScheme:e.authenticationScheme,resourceRequestMethod:e.resourceRequestMethod,resourceRequestUri:e.resourceRequestUri,shrClaims:e.shrClaims,sshKid:e.sshKid};return m(this.executePostToTokenEndpoint.bind(this),l.RefreshTokenClientExecutePostToTokenEndpoint,this.logger,this.performanceClient,e.correlationId)(o,r,i,s,e.correlationId,l.RefreshTokenClientExecutePostToTokenEndpoint)}async createTokenRequestBody(e){var o,r,i;(o=this.performanceClient)==null||o.addQueueMeasurement(l.RefreshTokenClientCreateTokenRequestBody,e.correlationId);const t=e.correlationId,n=new Fe;if(n.addClientId(((r=e.tokenBodyParameters)==null?void 0:r[Me])||this.config.authOptions.clientId),e.redirectUri&&n.addRedirectUri(e.redirectUri),n.addScopes(e.scopes,!0,(i=this.config.authOptions.authority.options.OIDCOptions)==null?void 0:i.defaultScopes),n.addGrantType(so.REFRESH_TOKEN_GRANT),n.addClientInfo(),n.addLibraryInfo(this.config.libraryInfo),n.addApplicationTelemetry(this.config.telemetry.application),n.addThrottling(),this.serverTelemetryManager&&!Ut(this.config)&&n.addServerTelemetry(this.serverTelemetryManager),n.addCorrelationId(t),n.addRefreshToken(e.refreshToken),this.config.clientCredentials.clientSecret&&n.addClientSecret(this.config.clientCredentials.clientSecret),this.config.clientCredentials.clientAssertion){const s=this.config.clientCredentials.clientAssertion;n.addClientAssertion(await Zo(s.assertion,this.config.authOptions.clientId,e.resourceRequestUri)),n.addClientAssertionType(s.assertionType)}if(e.authenticationScheme===k.POP){const s=new Ue(this.cryptoUtils,this.performanceClient);let c;e.popKid?c=this.cryptoUtils.encodeKid(e.popKid):c=(await m(s.generateCnf.bind(s),l.PopTokenGenerateCnf,this.logger,this.performanceClient,e.correlationId)(e,this.logger)).reqCnfString,n.addPopToken(c)}else if(e.authenticationScheme===k.SSH)if(e.sshJwk)n.addSshJwk(e.sshJwk);else throw R(mt);if((!Y.isEmptyObj(e.claims)||this.config.authOptions.clientCapabilities&&this.config.authOptions.clientCapabilities.length>0)&&n.addClaims(e.claims,this.config.authOptions.clientCapabilities),this.config.systemOptions.preventCorsPreflight&&e.ccsCredential)switch(e.ccsCredential.type){case $.HOME_ACCOUNT_ID:try{const s=ke(e.ccsCredential.credential);n.addCcsOid(s)}catch(s){this.logger.verbose("Could not parse home account ID for CCS Header: "+s)}break;case $.UPN:n.addCcsUpn(e.ccsCredential.credential);break}return e.tokenBodyParameters&&n.addExtraQueryParameters(e.tokenBodyParameters),n.createQueryString()}}/*! @azure/msal-common v14.15.0 2024-09-20 */class Ga extends hn{constructor(e,t){super(e,t)}async acquireToken(e){var t;try{const[n,o]=await this.acquireCachedToken({...e,scopes:(t=e.scopes)!=null&&t.length?e.scopes:[...He]});return o===ue.PROACTIVELY_REFRESHED&&(this.logger.info("SilentFlowClient:acquireCachedToken - Cached access token's refreshOn property has been exceeded'. It's not expired, but must be refreshed."),new Ht(this.config,this.performanceClient).acquireTokenByRefreshToken(e).catch(()=>{})),n}catch(n){if(n instanceof ut&&n.errorCode===ae)return new Ht(this.config,this.performanceClient).acquireTokenByRefreshToken(e);throw n}}async acquireCachedToken(e){var c;(c=this.performanceClient)==null||c.addQueueMeasurement(l.SilentFlowClientAcquireCachedToken,e.correlationId);let t=ue.NOT_APPLICABLE;if(e.forceRefresh||!this.config.cacheOptions.claimsBasedCachingEnabled&&!Y.isEmptyObj(e.claims))throw this.setCacheOutcome(ue.FORCE_REFRESH_OR_CLAIMS,e.correlationId),g(ae);if(!e.account)throw g(Yt);const n=e.account.tenantId||Na(e.authority),o=this.cacheManager.getTokenKeys(),r=this.cacheManager.getAccessToken(e.account,e,o,n,this.performanceClient,e.correlationId);if(r){if(fi(r.cachedAt)||Mt(r.expiresOn,this.config.systemOptions.tokenRenewalOffsetSeconds))throw this.setCacheOutcome(ue.CACHED_ACCESS_TOKEN_EXPIRED,e.correlationId),g(ae);r.refreshOn&&Mt(r.refreshOn,0)&&(t=ue.PROACTIVELY_REFRESHED)}else throw this.setCacheOutcome(ue.NO_CACHED_ACCESS_TOKEN,e.correlationId),g(ae);const i=e.authority||this.authority.getPreferredCache(),s={account:this.cacheManager.readAccountFromCache(e.account),accessToken:r,idToken:this.cacheManager.getIdToken(e.account,o,n,this.performanceClient,e.correlationId),refreshToken:null,appMetadata:this.cacheManager.readAppMetadataFromCache(i)};return this.setCacheOutcome(t,e.correlationId),this.config.serverTelemetryManager&&this.config.serverTelemetryManager.incrementCacheHits(),[await m(this.generateResultFromCacheRecord.bind(this),l.SilentFlowClientGenerateResultFromCacheRecord,this.logger,this.performanceClient,e.correlationId)(s,e),t]}setCacheOutcome(e,t){var n,o;(n=this.serverTelemetryManager)==null||n.setCacheOutcome(e),(o=this.performanceClient)==null||o.addFields({cacheOutcome:e},t),e!==ue.NOT_APPLICABLE&&this.logger.info(`Token refresh is required due to cache outcome: ${e}`)}async generateResultFromCacheRecord(e,t){var o;(o=this.performanceClient)==null||o.addQueueMeasurement(l.SilentFlowClientGenerateResultFromCacheRecord,t.correlationId);let n;if(e.idToken&&(n=Ae(e.idToken.secret,this.config.cryptoInterface.base64Decode)),t.maxAge||t.maxAge===0){const r=n==null?void 0:n.auth_time;if(!r)throw g(Qt);Ro(r,t.maxAge)}return Ce.generateAuthenticationResult(this.cryptoUtils,this.authority,e,!0,t,n)}}/*! @azure/msal-common v14.15.0 2024-09-20 */const qa={sendGetRequestAsync:()=>Promise.reject(g(v)),sendPostRequestAsync:()=>Promise.reject(g(v))};/*! @azure/msal-common v14.15.0 2024-09-20 */const jn=",",tr="|";function za(a){const{skus:e,libraryName:t,libraryVersion:n,extensionName:o,extensionVersion:r}=a,i=new Map([[0,[t,n]],[2,[o,r]]]);let s=[];if(e!=null&&e.length){if(s=e.split(jn),s.length<4)return e}else s=Array.from({length:4},()=>tr);return i.forEach((c,h)=>{var d,p;c.length===2&&((d=c[0])!=null&&d.length)&&((p=c[1])!=null&&p.length)&&$a({skuArr:s,index:h,skuName:c[0],skuVersion:c[1]})}),s.join(jn)}function $a(a){const{skuArr:e,index:t,skuName:n,skuVersion:o}=a;t>=e.length||(e[t]=[n,o].join(tr))}class Ge{constructor(e,t){this.cacheOutcome=ue.NOT_APPLICABLE,this.cacheManager=t,this.apiId=e.apiId,this.correlationId=e.correlationId,this.wrapperSKU=e.wrapperSKU||u.EMPTY_STRING,this.wrapperVer=e.wrapperVer||u.EMPTY_STRING,this.telemetryCacheKey=K.CACHE_KEY+F.CACHE_KEY_SEPARATOR+e.clientId}generateCurrentRequestHeaderValue(){const e=`${this.apiId}${K.VALUE_SEPARATOR}${this.cacheOutcome}`,t=[this.wrapperSKU,this.wrapperVer],n=this.getNativeBrokerErrorCode();n!=null&&n.length&&t.push(`broker_error=${n}`);const o=t.join(K.VALUE_SEPARATOR),r=this.getRegionDiscoveryFields(),i=[e,r].join(K.VALUE_SEPARATOR);return[K.SCHEMA_VERSION,i,o].join(K.CATEGORY_SEPARATOR)}generateLastRequestHeaderValue(){const e=this.getLastRequests(),t=Ge.maxErrorsToSend(e),n=e.failedRequests.slice(0,2*t).join(K.VALUE_SEPARATOR),o=e.errors.slice(0,t).join(K.VALUE_SEPARATOR),r=e.errors.length,i=t<r?K.OVERFLOW_TRUE:K.OVERFLOW_FALSE,s=[r,i].join(K.VALUE_SEPARATOR);return[K.SCHEMA_VERSION,e.cacheHits,n,o,s].join(K.CATEGORY_SEPARATOR)}cacheFailedRequest(e){const t=this.getLastRequests();t.errors.length>=K.MAX_CACHED_ERRORS&&(t.failedRequests.shift(),t.failedRequests.shift(),t.errors.shift()),t.failedRequests.push(this.apiId,this.correlationId),e instanceof Error&&e&&e.toString()?e instanceof N?e.subError?t.errors.push(e.subError):e.errorCode?t.errors.push(e.errorCode):t.errors.push(e.toString()):t.errors.push(e.toString()):t.errors.push(K.UNKNOWN_ERROR),this.cacheManager.setServerTelemetry(this.telemetryCacheKey,t)}incrementCacheHits(){const e=this.getLastRequests();return e.cacheHits+=1,this.cacheManager.setServerTelemetry(this.telemetryCacheKey,e),e.cacheHits}getLastRequests(){const e={failedRequests:[],errors:[],cacheHits:0};return this.cacheManager.getServerTelemetry(this.telemetryCacheKey)||e}clearTelemetryCache(){const e=this.getLastRequests(),t=Ge.maxErrorsToSend(e),n=e.errors.length;if(t===n)this.cacheManager.removeItem(this.telemetryCacheKey);else{const o={failedRequests:e.failedRequests.slice(t*2),errors:e.errors.slice(t),cacheHits:0};this.cacheManager.setServerTelemetry(this.telemetryCacheKey,o)}}static maxErrorsToSend(e){let t,n=0,o=0;const r=e.errors.length;for(t=0;t<r;t++){const i=e.failedRequests[2*t]||u.EMPTY_STRING,s=e.failedRequests[2*t+1]||u.EMPTY_STRING,c=e.errors[t]||u.EMPTY_STRING;if(o+=i.toString().length+s.toString().length+c.length+3,o<K.MAX_LAST_HEADER_BYTES)n+=1;else break}return n}getRegionDiscoveryFields(){const e=[];return e.push(this.regionUsed||u.EMPTY_STRING),e.push(this.regionSource||u.EMPTY_STRING),e.push(this.regionOutcome||u.EMPTY_STRING),e.join(",")}updateRegionDiscoveryMetadata(e){this.regionUsed=e.region_used,this.regionSource=e.region_source,this.regionOutcome=e.region_outcome}setCacheOutcome(e){this.cacheOutcome=e}setNativeBrokerErrorCode(e){const t=this.getLastRequests();t.nativeBrokerErrorCode=e,this.cacheManager.setServerTelemetry(this.telemetryCacheKey,t)}getNativeBrokerErrorCode(){return this.getLastRequests().nativeBrokerErrorCode}clearNativeBrokerErrorCode(){const e=this.getLastRequests();delete e.nativeBrokerErrorCode,this.cacheManager.setServerTelemetry(this.telemetryCacheKey,e)}static makeExtraSkuString(e){return za(e)}}/*! @azure/msal-common v14.15.0 2024-09-20 */const nr="missing_kid_error",or="missing_alg_error";/*! @azure/msal-common v14.15.0 2024-09-20 */const Va={[nr]:"The JOSE Header for the requested JWT, JWS or JWK object requires a keyId to be configured as the 'kid' header claim. No 'kid' value was provided.",[or]:"The JOSE Header for the requested JWT, JWS or JWK object requires an algorithm to be specified as the 'alg' header claim. No 'alg' value was provided."};class un extends N{constructor(e,t){super(e,t),this.name="JoseHeaderError",Object.setPrototypeOf(this,un.prototype)}}function Jn(a){return new un(a,Va[a])}/*! @azure/msal-common v14.15.0 2024-09-20 */class gn{constructor(e){this.typ=e.typ,this.alg=e.alg,this.kid=e.kid}static getShrHeaderString(e){if(!e.kid)throw Jn(nr);if(!e.alg)throw Jn(or);const t=new gn({typ:e.typ||ei.Pop,kid:e.kid,alg:e.alg});return JSON.stringify(t)}}/*! @azure/msal-common v14.15.0 2024-09-20 */class Xn{startMeasurement(){}endMeasurement(){}flushMeasurement(){return null}}class Qa{generateId(){return"callback-id"}startMeasurement(e,t){return{end:()=>null,discard:()=>{},add:()=>{},increment:()=>{},event:{eventId:this.generateId(),status:Oa.InProgress,authority:"",libraryName:"",libraryVersion:"",clientId:"",name:e,startTimeMs:Date.now(),correlationId:t||""},measurement:new Xn}}startPerformanceMeasurement(){return new Xn}calculateQueuedTime(){return 0}addQueueMeasurement(){}setPreQueueTime(){}endMeasurement(){return null}discardMeasurements(){}removePerformanceCallback(){return!0}addPerformanceCallback(){return""}emitEvents(){}addFields(){}incrementFields(){}cacheEventByCorrelationId(){}}/*! @azure/msal-browser v3.26.1 2024-10-08 */const pn="pkce_not_created",rr="crypto_nonexistent",Tt="empty_navigate_uri",ir="hash_empty_error",mn="no_state_in_hash",ar="hash_does_not_contain_known_properties",sr="unable_to_parse_state",cr="state_interaction_type_mismatch",hr="interaction_in_progress",lr="popup_window_error",dr="empty_window_error",Te="user_cancelled",Ya="monitor_popup_timeout",ur="monitor_window_timeout",gr="redirect_in_iframe",pr="block_iframe_reload",mr="block_nested_popups",Wa="iframe_closed_prematurely",yt="silent_logout_unsupported",fr="no_account_error",ja="silent_prompt_value_error",Cr="no_token_request_cache_error",Tr="unable_to_parse_token_request_cache_error",fn="no_cached_authority_error",Ja="auth_request_not_set_error",Xa="invalid_cache_type",Cn="non_browser_environment",ve="database_not_open",lt="no_network_connectivity",yr="post_request_failed",Ar="get_request_failed",Dt="failed_to_parse_response",Ir="unable_to_load_token",Tn="crypto_key_not_found",Er="auth_code_required",Sr="auth_code_or_nativeAccountId_required",vr="spa_code_and_nativeAccountId_present",yn="database_unavailable",wr="unable_to_acquire_token_from_native_platform",_r="native_handshake_timeout",kr="native_extension_not_installed",ze="native_connection_not_established",Rr="uninitialized_public_client_application",br="native_prompt_not_supported",Or="invalid_base64_string",Nr="invalid_pop_token_request";/*! @azure/msal-browser v3.26.1 2024-10-08 */const re="For more visit: aka.ms/msaljs/browser-errors",Za={[pn]:"The PKCE code challenge and verifier could not be generated.",[rr]:"The crypto object or function is not available.",[Tt]:"Navigation URI is empty. Please check stack trace for more info.",[ir]:`Hash value cannot be processed because it is empty. Please verify that your redirectUri is not clearing the hash. ${re}`,[mn]:"Hash does not contain state. Please verify that the request originated from msal.",[ar]:`Hash does not contain known properites. Please verify that your redirectUri is not changing the hash.  ${re}`,[sr]:"Unable to parse state. Please verify that the request originated from msal.",[cr]:"Hash contains state but the interaction type does not match the caller.",[hr]:`Interaction is currently in progress. Please ensure that this interaction has been completed before calling an interactive API.   ${re}`,[lr]:"Error opening popup window. This can happen if you are using IE or if popups are blocked in the browser.",[dr]:"window.open returned null or undefined window object.",[Te]:"User cancelled the flow.",[Ya]:`Token acquisition in popup failed due to timeout.  ${re}`,[ur]:`Token acquisition in iframe failed due to timeout.  ${re}`,[gr]:"Redirects are not supported for iframed or brokered applications. Please ensure you are using MSAL.js in a top frame of the window if using the redirect APIs, or use the popup APIs.",[pr]:`Request was blocked inside an iframe because MSAL detected an authentication response.  ${re}`,[mr]:"Request was blocked inside a popup because MSAL detected it was running in a popup.",[Wa]:"The iframe being monitored was closed prematurely.",[yt]:"Silent logout not supported. Please call logoutRedirect or logoutPopup instead.",[fr]:"No account object provided to acquireTokenSilent and no active account has been set. Please call setActiveAccount or provide an account on the request.",[ja]:"The value given for the prompt value is not valid for silent requests - must be set to 'none' or 'no_session'.",[Cr]:"No token request found in cache.",[Tr]:"The cached token request could not be parsed.",[fn]:"No cached authority found.",[Ja]:"Auth Request not set. Please ensure initiateAuthRequest was called from the InteractionHandler",[Xa]:"Invalid cache type",[Cn]:"Login and token requests are not supported in non-browser environments.",[ve]:"Database is not open!",[lt]:"No network connectivity. Check your internet connection.",[yr]:"Network request failed: If the browser threw a CORS error, check that the redirectUri is registered in the Azure App Portal as type 'SPA'",[Ar]:"Network request failed. Please check the network trace to determine root cause.",[Dt]:"Failed to parse network response. Check network trace.",[Ir]:"Error loading token to cache.",[Tn]:"Cryptographic Key or Keypair not found in browser storage.",[Er]:"An authorization code must be provided (as the `code` property on the request) to this flow.",[Sr]:"An authorization code or nativeAccountId must be provided to this flow.",[vr]:"Request cannot contain both spa code and native account id.",[yn]:"IndexedDB, which is required for persistent cryptographic key storage, is unavailable. This may be caused by browser privacy features which block persistent storage in third-party contexts.",[wr]:`Unable to acquire token from native platform.  ${re}`,[_r]:"Timed out while attempting to establish connection to browser extension",[kr]:"Native extension is not installed. If you think this is a mistake call the initialize function.",[ze]:`Connection to native platform has not been established. Please install a compatible browser extension and run initialize().  ${re}`,[Rr]:`You must call and await the initialize function before attempting to call any other MSAL API.  ${re}`,[br]:"The provided prompt is not supported by the native platform. This request should be routed to the web based flow.",[Or]:"Invalid base64 encoded string.",[Nr]:"Invalid PoP token request. The request should not have both a popKid value and signPopToken set to true."};class $e extends N{constructor(e){super(e,Za[e]),Object.setPrototypeOf(this,$e.prototype),this.name="BrowserAuthError"}}function C(a){return new $e(a)}/*! @azure/msal-browser v3.26.1 2024-10-08 */const z={INTERACTION_IN_PROGRESS_VALUE:"interaction_in_progress",INVALID_GRANT_ERROR:"invalid_grant",POPUP_WIDTH:483,POPUP_HEIGHT:600,POPUP_NAME_PREFIX:"msal",DEFAULT_POLL_INTERVAL_MS:30,MSAL_SKU:"msal.js.browser"},Re={CHANNEL_ID:"53ee284d-920a-4b59-9d30-a60315b26836",PREFERRED_EXTENSION_ID:"ppnbnpeolgkicgegkbkbjmhlideopiji",MATS_TELEMETRY:"MATS"},fe={HandshakeRequest:"Handshake",HandshakeResponse:"HandshakeResponse",GetToken:"GetToken",Response:"Response"},U={LocalStorage:"localStorage",SessionStorage:"sessionStorage",MemoryStorage:"memoryStorage"},Zn={GET:"GET",POST:"POST"},_={AUTHORITY:"authority",ACQUIRE_TOKEN_ACCOUNT:"acquireToken.account",SESSION_STATE:"session.state",REQUEST_STATE:"request.state",NONCE_IDTOKEN:"nonce.id_token",ORIGIN_URI:"request.origin",RENEW_STATUS:"token.renew.status",URL_HASH:"urlHash",REQUEST_PARAMS:"request.params",SCOPES:"scopes",INTERACTION_STATUS_KEY:"interaction.status",CCS_CREDENTIAL:"ccs.credential",CORRELATION_ID:"request.correlationId",NATIVE_REQUEST:"request.native",REDIRECT_CONTEXT:"request.redirect.context"},de={ACCOUNT_KEYS:"msal.account.keys",TOKEN_KEYS:"msal.token.keys"},Ze={WRAPPER_SKU:"wrapper.sku",WRAPPER_VER:"wrapper.version"},b={acquireTokenRedirect:861,acquireTokenPopup:862,ssoSilent:863,acquireTokenSilent_authCode:864,handleRedirectPromise:865,acquireTokenByCode:866,acquireTokenSilent_silentFlow:61,logout:961,logoutPopup:962};var T;(function(a){a.Redirect="redirect",a.Popup="popup",a.Silent="silent",a.None="none"})(T||(T={}));const eo={scopes:He},Pr="jwk",Kt="msal.db",es=1,ts=`${Kt}.keys`,q={Default:0,AccessToken:1,AccessTokenAndRefreshToken:2,RefreshToken:3,RefreshTokenAndNetwork:4,Skip:5},ns=[q.Default,q.Skip,q.RefreshTokenAndNetwork],os="msal.browser.log.level",rs="msal.browser.log.pii";/*! @azure/msal-browser v3.26.1 2024-10-08 */function et(a){return encodeURIComponent(An(a).replace(/=/g,"").replace(/\+/g,"-").replace(/\//g,"_"))}function At(a){return Mr(a).replace(/=/g,"").replace(/\+/g,"-").replace(/\//g,"_")}function An(a){return Mr(new TextEncoder().encode(a))}function Mr(a){const e=Array.from(a,t=>String.fromCodePoint(t)).join("");return btoa(e)}/*! @azure/msal-browser v3.26.1 2024-10-08 */const is="RSASSA-PKCS1-v1_5",Ur="SHA-256",as=2048,ss=new Uint8Array([1,0,1]),to="0123456789abcdef",no=new Uint32Array(1),In={name:is,hash:Ur,modulusLength:as,publicExponent:ss};function cs(a){if("crypto"in window)a.verbose("BrowserCrypto: modern crypto interface available");else throw a.error("BrowserCrypto: crypto interface is unavailable"),C(rr)}async function Lr(a,e,t){e==null||e.addQueueMeasurement(l.Sha256Digest,t);const o=new TextEncoder().encode(a);return window.crypto.subtle.digest(Ur,o)}function hs(a){return window.crypto.getRandomValues(a)}function _t(){return window.crypto.getRandomValues(no),no[0]}function he(){const a=Date.now(),e=_t()*1024+(_t()&1023),t=new Uint8Array(16),n=Math.trunc(e/2**30),o=e&2**30-1,r=_t();t[0]=a/2**40,t[1]=a/2**32,t[2]=a/2**24,t[3]=a/2**16,t[4]=a/2**8,t[5]=a,t[6]=112|n>>>8,t[7]=n,t[8]=128|o>>>24,t[9]=o>>>16,t[10]=o>>>8,t[11]=o,t[12]=r>>>24,t[13]=r>>>16,t[14]=r>>>8,t[15]=r;let i="";for(let s=0;s<t.length;s++)i+=to.charAt(t[s]>>>4),i+=to.charAt(t[s]&15),(s===3||s===5||s===7||s===9)&&(i+="-");return i}async function ls(a,e){return window.crypto.subtle.generateKey(In,a,e)}async function kt(a){return window.crypto.subtle.exportKey(Pr,a)}async function ds(a,e,t){return window.crypto.subtle.importKey(Pr,a,In,e,t)}async function us(a,e){return window.crypto.subtle.sign(In,a,e)}async function Hr(a){const e=await Lr(a),t=new Uint8Array(e);return At(t)}/*! @azure/msal-browser v3.26.1 2024-10-08 */const Dr="storage_not_supported",gs="stubbed_public_client_application_called",Kr="in_mem_redirect_unavailable";/*! @azure/msal-browser v3.26.1 2024-10-08 */const ps={[Dr]:"Given storage configuration option was not supported.",[gs]:"Stub instance of Public Client Application was called. If using msal-react, please ensure context is not used without a provider. For more visit: aka.ms/msaljs/browser-errors",[Kr]:"Redirect cannot be supported. In-memory storage was selected and storeAuthStateInCookie=false, which would cause the library to be unable to handle the incoming hash. If you would like to use the redirect API, please use session/localStorage or set storeAuthStateInCookie=true."};class En extends N{constructor(e,t){super(e,t),this.name="BrowserConfigurationAuthError",Object.setPrototypeOf(this,En.prototype)}}function xr(a){return new En(a,ps[a])}/*! @azure/msal-browser v3.26.1 2024-10-08 */function ms(a){a.location.hash="",typeof a.history.replaceState=="function"&&a.history.replaceState(null,"",`${a.location.origin}${a.location.pathname}${a.location.search}`)}function fs(a){const e=a.split("#");e.shift(),window.location.hash=e.length>0?e.join("#"):""}function Sn(){return window.parent!==window}function Cs(){return typeof window<"u"&&!!window.opener&&window.opener!==window&&typeof window.name=="string"&&window.name.indexOf(`${z.POPUP_NAME_PREFIX}.`)===0}function se(){return window.location.href.split("?")[0].split("#")[0]}function Ts(){const e=new w(window.location.href).getUrlComponents();return`${e.Protocol}//${e.HostNameAndPort}/`}function ys(){if(w.hashContainsKnownProperties(window.location.hash)&&Sn())throw C(pr)}function As(a){if(Sn()&&!a)throw C(gr)}function Is(){if(Cs())throw C(mr)}function Br(){if(typeof window>"u")throw C(Cn)}function Fr(a){if(!a)throw C(Rr)}function vn(a){Br(),ys(),Is(),Fr(a)}function oo(a,e){if(vn(a),As(e.system.allowRedirectInIframe),e.cache.cacheLocation===U.MemoryStorage&&!e.cache.storeAuthStateInCookie)throw xr(Kr)}function Gr(a){const e=document.createElement("link");e.rel="preconnect",e.href=new URL(a).origin,e.crossOrigin="anonymous",document.head.appendChild(e),window.setTimeout(()=>{try{document.head.removeChild(e)}catch{}},1e4)}function Es(){return he()}/*! @azure/msal-browser v3.26.1 2024-10-08 */class dt{navigateInternal(e,t){return dt.defaultNavigateWindow(e,t)}navigateExternal(e,t){return dt.defaultNavigateWindow(e,t)}static defaultNavigateWindow(e,t){return t.noHistory?window.location.replace(e):window.location.assign(e),new Promise(n=>{setTimeout(()=>{n(!0)},t.timeout)})}}/*! @azure/msal-browser v3.26.1 2024-10-08 */class Ss{async sendGetRequestAsync(e,t){let n;try{n=await fetch(e,{method:Zn.GET,headers:this.getFetchHeaders(t)})}catch{throw window.navigator.onLine?C(Ar):C(lt)}try{return{headers:this.getHeaderDict(n.headers),body:await n.json(),status:n.status}}catch{throw C(Dt)}}async sendPostRequestAsync(e,t){const n=t&&t.body||u.EMPTY_STRING;let o;try{o=await fetch(e,{method:Zn.POST,headers:this.getFetchHeaders(t),body:n})}catch{throw window.navigator.onLine?C(yr):C(lt)}try{return{headers:this.getHeaderDict(o.headers),body:await o.json(),status:o.status}}catch{throw C(Dt)}}getFetchHeaders(e){const t=new Headers;if(!(e&&e.headers))return t;const n=e.headers;return Object.keys(n).forEach(o=>{t.append(o,n[o])}),t}getHeaderDict(e){const t={};return e.forEach((n,o)=>{t[o]=n}),t}}/*! @azure/msal-browser v3.26.1 2024-10-08 */const vs=6e4,xt=1e4,ws=3e4,_s=2e3;function ks({auth:a,cache:e,system:t,telemetry:n},o){const r={clientId:u.EMPTY_STRING,authority:`${u.DEFAULT_AUTHORITY}`,knownAuthorities:[],cloudDiscoveryMetadata:u.EMPTY_STRING,authorityMetadata:u.EMPTY_STRING,redirectUri:u.EMPTY_STRING,postLogoutRedirectUri:u.EMPTY_STRING,navigateToLoginRequestUrl:!0,clientCapabilities:[],protocolMode:ce.AAD,OIDCOptions:{serverResponseType:qe.FRAGMENT,defaultScopes:[u.OPENID_SCOPE,u.PROFILE_SCOPE,u.OFFLINE_ACCESS_SCOPE]},azureCloudOptions:{azureCloudInstance:Xt.None,tenant:u.EMPTY_STRING},skipAuthorityMetadataCache:!1,supportsNestedAppAuth:!1,instanceAware:!1},i={cacheLocation:U.SessionStorage,temporaryCacheLocation:U.SessionStorage,storeAuthStateInCookie:!1,secureCookies:!1,cacheMigrationEnabled:!!(e&&e.cacheLocation===U.LocalStorage),claimsBasedCachingEnabled:!1},s={loggerCallback:()=>{},logLevel:O.Info,piiLoggingEnabled:!1},h={...{...Wo,loggerOptions:s,networkClient:o?new Ss:qa,navigationClient:new dt,loadFrameTimeout:0,windowHashTimeout:(t==null?void 0:t.loadFrameTimeout)||vs,iframeHashTimeout:(t==null?void 0:t.loadFrameTimeout)||xt,navigateFrameWait:0,redirectNavigationTimeout:ws,asyncPopups:!1,allowRedirectInIframe:!1,allowNativeBroker:!1,nativeBrokerHandshakeTimeout:(t==null?void 0:t.nativeBrokerHandshakeTimeout)||_s,pollIntervalMilliseconds:z.DEFAULT_POLL_INTERVAL_MS},...t,loggerOptions:(t==null?void 0:t.loggerOptions)||s},d={application:{appName:u.EMPTY_STRING,appVersion:u.EMPTY_STRING},client:new Qa};if((a==null?void 0:a.protocolMode)!==ce.OIDC&&(a!=null&&a.OIDCOptions)&&new pe(h.loggerOptions).warning(JSON.stringify(R(Fo))),a!=null&&a.protocolMode&&a.protocolMode!==ce.AAD&&(h!=null&&h.allowNativeBroker))throw R(Go);return{auth:{...r,...a,OIDCOptions:{...r.OIDCOptions,...a==null?void 0:a.OIDCOptions}},cache:{...i,...e},system:h,telemetry:{...d,...n}}}/*! @azure/msal-browser v3.26.1 2024-10-08 */const Rs="@azure/msal-browser",It="3.26.1";/*! @azure/msal-browser v3.26.1 2024-10-08 */class wn{static loggerCallback(e,t){switch(e){case O.Error:console.error(t);return;case O.Info:console.info(t);return;case O.Verbose:console.debug(t);return;case O.Warning:console.warn(t);return;default:console.log(t);return}}constructor(e){var c;this.browserEnvironment=typeof window<"u",this.config=ks(e,this.browserEnvironment);let t;try{t=window[U.SessionStorage]}catch{}const n=t==null?void 0:t.getItem(os),o=(c=t==null?void 0:t.getItem(rs))==null?void 0:c.toLowerCase(),r=o==="true"?!0:o==="false"?!1:void 0,i={...this.config.system.loggerOptions},s=n&&Object.keys(O).includes(n)?O[n]:void 0;s&&(i.loggerCallback=wn.loggerCallback,i.logLevel=s),r!==void 0&&(i.piiLoggingEnabled=r),this.logger=new pe(i,Rs,It),this.available=!1}getConfig(){return this.config}getLogger(){return this.logger}isAvailable(){return this.available}isBrowserEnvironment(){return this.browserEnvironment}}/*! @azure/msal-browser v3.26.1 2024-10-08 */class ye extends wn{getModuleName(){return ye.MODULE_NAME}getId(){return ye.ID}async initialize(){return this.available=typeof window<"u",this.available}}ye.MODULE_NAME="";ye.ID="StandardOperatingContext";/*! @azure/msal-browser v3.26.1 2024-10-08 */function ne(a){return new TextDecoder().decode(bs(a))}function bs(a){let e=a.replace(/-/g,"+").replace(/_/g,"/");switch(e.length%4){case 0:break;case 2:e+="==";break;case 3:e+="=";break;default:throw C(Or)}const t=atob(e);return Uint8Array.from(t,n=>n.codePointAt(0)||0)}/*! @azure/msal-browser v3.26.1 2024-10-08 */class Os{constructor(){this.dbName=Kt,this.version=es,this.tableName=ts,this.dbOpen=!1}async open(){return new Promise((e,t)=>{const n=window.indexedDB.open(this.dbName,this.version);n.addEventListener("upgradeneeded",o=>{o.target.result.createObjectStore(this.tableName)}),n.addEventListener("success",o=>{const r=o;this.db=r.target.result,this.dbOpen=!0,e()}),n.addEventListener("error",()=>t(C(yn)))})}closeConnection(){const e=this.db;e&&this.dbOpen&&(e.close(),this.dbOpen=!1)}async validateDbIsOpen(){if(!this.dbOpen)return this.open()}async getItem(e){return await this.validateDbIsOpen(),new Promise((t,n)=>{if(!this.db)return n(C(ve));const i=this.db.transaction([this.tableName],"readonly").objectStore(this.tableName).get(e);i.addEventListener("success",s=>{const c=s;this.closeConnection(),t(c.target.result)}),i.addEventListener("error",s=>{this.closeConnection(),n(s)})})}async setItem(e,t){return await this.validateDbIsOpen(),new Promise((n,o)=>{if(!this.db)return o(C(ve));const s=this.db.transaction([this.tableName],"readwrite").objectStore(this.tableName).put(t,e);s.addEventListener("success",()=>{this.closeConnection(),n()}),s.addEventListener("error",c=>{this.closeConnection(),o(c)})})}async removeItem(e){return await this.validateDbIsOpen(),new Promise((t,n)=>{if(!this.db)return n(C(ve));const i=this.db.transaction([this.tableName],"readwrite").objectStore(this.tableName).delete(e);i.addEventListener("success",()=>{this.closeConnection(),t()}),i.addEventListener("error",s=>{this.closeConnection(),n(s)})})}async getKeys(){return await this.validateDbIsOpen(),new Promise((e,t)=>{if(!this.db)return t(C(ve));const r=this.db.transaction([this.tableName],"readonly").objectStore(this.tableName).getAllKeys();r.addEventListener("success",i=>{const s=i;this.closeConnection(),e(s.target.result)}),r.addEventListener("error",i=>{this.closeConnection(),t(i)})})}async containsKey(e){return await this.validateDbIsOpen(),new Promise((t,n)=>{if(!this.db)return n(C(ve));const i=this.db.transaction([this.tableName],"readonly").objectStore(this.tableName).count(e);i.addEventListener("success",s=>{const c=s;this.closeConnection(),t(c.target.result===1)}),i.addEventListener("error",s=>{this.closeConnection(),n(s)})})}async deleteDatabase(){return this.db&&this.dbOpen&&this.closeConnection(),new Promise((e,t)=>{const n=window.indexedDB.deleteDatabase(Kt),o=setTimeout(()=>t(!1),200);n.addEventListener("success",()=>(clearTimeout(o),e(!0))),n.addEventListener("blocked",()=>(clearTimeout(o),e(!0))),n.addEventListener("error",()=>(clearTimeout(o),t(!1)))})}}/*! @azure/msal-browser v3.26.1 2024-10-08 */class Bt{constructor(){this.cache=new Map}getItem(e){return this.cache.get(e)||null}setItem(e,t){this.cache.set(e,t)}removeItem(e){this.cache.delete(e)}getKeys(){const e=[];return this.cache.forEach((t,n)=>{e.push(n)}),e}containsKey(e){return this.cache.has(e)}clear(){this.cache.clear()}}/*! @azure/msal-browser v3.26.1 2024-10-08 */class Ns{constructor(e){this.inMemoryCache=new Bt,this.indexedDBCache=new Os,this.logger=e}handleDatabaseAccessError(e){if(e instanceof $e&&e.errorCode===yn)this.logger.error("Could not access persistent storage. This may be caused by browser privacy features which block persistent storage in third-party contexts.");else throw e}async getItem(e){const t=this.inMemoryCache.getItem(e);if(!t)try{return this.logger.verbose("Queried item not found in in-memory cache, now querying persistent storage."),await this.indexedDBCache.getItem(e)}catch(n){this.handleDatabaseAccessError(n)}return t}async setItem(e,t){this.inMemoryCache.setItem(e,t);try{await this.indexedDBCache.setItem(e,t)}catch(n){this.handleDatabaseAccessError(n)}}async removeItem(e){this.inMemoryCache.removeItem(e);try{await this.indexedDBCache.removeItem(e)}catch(t){this.handleDatabaseAccessError(t)}}async getKeys(){const e=this.inMemoryCache.getKeys();if(e.length===0)try{return this.logger.verbose("In-memory cache is empty, now querying persistent storage."),await this.indexedDBCache.getKeys()}catch(t){this.handleDatabaseAccessError(t)}return e}async containsKey(e){const t=this.inMemoryCache.containsKey(e);if(!t)try{return this.logger.verbose("Key not found in in-memory cache, now querying persistent storage."),await this.indexedDBCache.containsKey(e)}catch(n){this.handleDatabaseAccessError(n)}return t}clearInMemory(){this.logger.verbose("Deleting in-memory keystore"),this.inMemoryCache.clear(),this.logger.verbose("In-memory keystore deleted")}async clearPersistent(){try{this.logger.verbose("Deleting persistent keystore");const e=await this.indexedDBCache.deleteDatabase();return e&&this.logger.verbose("Persistent keystore deleted"),e}catch(e){return this.handleDatabaseAccessError(e),!1}}}/*! @azure/msal-browser v3.26.1 2024-10-08 */class Le{constructor(e,t){this.logger=e,cs(e),this.cache=new Ns(this.logger),this.performanceClient=t}createNewGuid(){return he()}base64Encode(e){return An(e)}base64Decode(e){return ne(e)}base64UrlEncode(e){return et(e)}encodeKid(e){return this.base64UrlEncode(JSON.stringify({kid:e}))}async getPublicKeyThumbprint(e){var d;const t=(d=this.performanceClient)==null?void 0:d.startMeasurement(l.CryptoOptsGetPublicKeyThumbprint,e.correlationId),n=await ls(Le.EXTRACTABLE,Le.POP_KEY_USAGES),o=await kt(n.publicKey),r={e:o.e,kty:o.kty,n:o.n},i=ro(r),s=await this.hashString(i),c=await kt(n.privateKey),h=await ds(c,!1,["sign"]);return await this.cache.setItem(s,{privateKey:h,publicKey:n.publicKey,requestMethod:e.resourceRequestMethod,requestUri:e.resourceRequestUri}),t&&t.end({success:!0}),s}async removeTokenBindingKey(e){return await this.cache.removeItem(e),!await this.cache.containsKey(e)}async clearKeystore(){this.cache.clearInMemory();try{return await this.cache.clearPersistent(),!0}catch(e){return e instanceof Error?this.logger.error(`Clearing keystore failed with error: ${e.message}`):this.logger.error("Clearing keystore failed with unknown error"),!1}}async signJwt(e,t,n,o){var le;const r=(le=this.performanceClient)==null?void 0:le.startMeasurement(l.CryptoOptsSignJwt,o),i=await this.cache.getItem(t);if(!i)throw C(Tn);const s=await kt(i.publicKey),c=ro(s),h=et(JSON.stringify({kid:t})),d=gn.getShrHeaderString({...n==null?void 0:n.header,alg:s.alg,kid:h}),p=et(d);e.cnf={jwk:JSON.parse(c)};const f=et(JSON.stringify(e)),y=`${p}.${f}`,S=new TextEncoder().encode(y),M=await us(i.privateKey,S),x=At(new Uint8Array(M)),V=`${y}.${x}`;return r&&r.end({success:!0}),V}async hashString(e){return Hr(e)}}Le.POP_KEY_USAGES=["sign","verify"];Le.EXTRACTABLE=!0;function ro(a){return JSON.stringify(a,Object.keys(a).sort())}/*! @azure/msal-browser v3.26.1 2024-10-08 */class io{constructor(e){this.validateWindowStorage(e),this.windowStorage=window[e]}validateWindowStorage(e){if(e!==U.LocalStorage&&e!==U.SessionStorage||!window[e])throw xr(Dr)}getItem(e){return this.windowStorage.getItem(e)}setItem(e,t){this.windowStorage.setItem(e,t)}removeItem(e){this.windowStorage.removeItem(e)}getKeys(){return Object.keys(this.windowStorage)}containsKey(e){return this.windowStorage.hasOwnProperty(e)}}/*! @azure/msal-browser v3.26.1 2024-10-08 */function qr(a,e){if(!e)return null;try{return W.parseRequestState(a,e).libraryState.meta}catch{throw g(Ne)}}/*! @azure/msal-browser v3.26.1 2024-10-08 */class Ft extends Pe{constructor(e,t,n,o,r,i){super(e,n,o,r),this.COOKIE_LIFE_MULTIPLIER=24*60*60*1e3,this.cacheConfig=t,this.logger=o,this.internalStorage=new Bt,this.browserStorage=this.setupBrowserStorage(this.cacheConfig.cacheLocation),this.temporaryCacheStorage=this.setupTemporaryCacheStorage(this.cacheConfig.temporaryCacheLocation,this.cacheConfig.cacheLocation),t.cacheMigrationEnabled&&(this.migrateCacheEntries(),this.createKeyMaps()),this.performanceClient=i}setupBrowserStorage(e){switch(e){case U.LocalStorage:case U.SessionStorage:try{return new io(e)}catch(t){this.logger.verbose(t);break}}return this.cacheConfig.cacheLocation=U.MemoryStorage,new Bt}setupTemporaryCacheStorage(e,t){switch(t){case U.LocalStorage:case U.SessionStorage:try{return new io(e||U.SessionStorage)}catch(n){return this.logger.verbose(n),this.internalStorage}case U.MemoryStorage:default:return this.internalStorage}}migrateCacheEntries(){const e=`${u.CACHE_PREFIX}.${H.ID_TOKEN}`,t=`${u.CACHE_PREFIX}.${H.CLIENT_INFO}`,n=`${u.CACHE_PREFIX}.${H.ERROR}`,o=`${u.CACHE_PREFIX}.${H.ERROR_DESC}`,r=this.browserStorage.getItem(e),i=this.browserStorage.getItem(t),s=this.browserStorage.getItem(n),c=this.browserStorage.getItem(o),h=[r,i,s,c];[H.ID_TOKEN,H.CLIENT_INFO,H.ERROR,H.ERROR_DESC].forEach((p,f)=>{const y=h[f];y&&this.setTemporaryCache(p,y,!0)})}createKeyMaps(){this.logger.trace("BrowserCacheManager - createKeyMaps called.");const e=this.getItem(de.ACCOUNT_KEYS),t=this.getItem(`${de.TOKEN_KEYS}.${this.clientId}`);if(e&&t){this.logger.verbose("BrowserCacheManager:createKeyMaps - account and token key maps already exist, skipping migration.");return}this.browserStorage.getKeys().forEach(o=>{if(this.isCredentialKey(o)){const r=this.getItem(o);if(r){const i=this.validateAndParseJson(r);if(i&&i.hasOwnProperty("credentialType"))switch(i.credentialType){case I.ID_TOKEN:if(Kn(i)){this.logger.trace("BrowserCacheManager:createKeyMaps - idToken found, saving key to token key map"),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - idToken with key: ${o} found, saving key to token key map`);const s=i,c=this.updateCredentialCacheKey(o,s);this.addTokenKey(c,I.ID_TOKEN);return}else this.logger.trace("BrowserCacheManager:createKeyMaps - key found matching idToken schema with value containing idToken credentialType field but value failed IdTokenEntity validation, skipping."),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - failed idToken validation on key: ${o}`);break;case I.ACCESS_TOKEN:case I.ACCESS_TOKEN_WITH_AUTH_SCHEME:if(Dn(i)){this.logger.trace("BrowserCacheManager:createKeyMaps - accessToken found, saving key to token key map"),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - accessToken with key: ${o} found, saving key to token key map`);const s=i,c=this.updateCredentialCacheKey(o,s);this.addTokenKey(c,I.ACCESS_TOKEN);return}else this.logger.trace("BrowserCacheManager:createKeyMaps - key found matching accessToken schema with value containing accessToken credentialType field but value failed AccessTokenEntity validation, skipping."),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - failed accessToken validation on key: ${o}`);break;case I.REFRESH_TOKEN:if(xn(i)){this.logger.trace("BrowserCacheManager:createKeyMaps - refreshToken found, saving key to token key map"),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - refreshToken with key: ${o} found, saving key to token key map`);const s=i,c=this.updateCredentialCacheKey(o,s);this.addTokenKey(c,I.REFRESH_TOKEN);return}else this.logger.trace("BrowserCacheManager:createKeyMaps - key found matching refreshToken schema with value containing refreshToken credentialType field but value failed RefreshTokenEntity validation, skipping."),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - failed refreshToken validation on key: ${o}`);break}}}if(this.isAccountKey(o)){const r=this.getItem(o);if(r){const i=this.validateAndParseJson(r);i&&L.isAccountEntity(i)&&(this.logger.trace("BrowserCacheManager:createKeyMaps - account found, saving key to account key map"),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - account with key: ${o} found, saving key to account key map`),this.addAccountKeyToMap(o))}}})}validateAndParseJson(e){try{const t=JSON.parse(e);return t&&typeof t=="object"?t:null}catch{return null}}getItem(e){return this.browserStorage.getItem(e)}setItem(e,t){this.browserStorage.setItem(e,t)}getAccount(e,t){this.logger.trace("BrowserCacheManager.getAccount called");const n=this.getCachedAccountEntity(e);return this.updateOutdatedCachedAccount(e,n,t)}getCachedAccountEntity(e){const t=this.getItem(e);if(!t)return this.removeAccountKeyFromMap(e),null;const n=this.validateAndParseJson(t);return!n||!L.isAccountEntity(n)?(this.removeAccountKeyFromMap(e),null):Pe.toObject(new L,n)}setAccount(e){this.logger.trace("BrowserCacheManager.setAccount called");const t=e.generateAccountKey();this.setItem(t,JSON.stringify(e)),this.addAccountKeyToMap(t)}getAccountKeys(){this.logger.trace("BrowserCacheManager.getAccountKeys called");const e=this.getItem(de.ACCOUNT_KEYS);return e?JSON.parse(e):(this.logger.verbose("BrowserCacheManager.getAccountKeys - No account keys found"),[])}addAccountKeyToMap(e){this.logger.trace("BrowserCacheManager.addAccountKeyToMap called"),this.logger.tracePii(`BrowserCacheManager.addAccountKeyToMap called with key: ${e}`);const t=this.getAccountKeys();t.indexOf(e)===-1?(t.push(e),this.setItem(de.ACCOUNT_KEYS,JSON.stringify(t)),this.logger.verbose("BrowserCacheManager.addAccountKeyToMap account key added")):this.logger.verbose("BrowserCacheManager.addAccountKeyToMap account key already exists in map")}removeAccountKeyFromMap(e){this.logger.trace("BrowserCacheManager.removeAccountKeyFromMap called"),this.logger.tracePii(`BrowserCacheManager.removeAccountKeyFromMap called with key: ${e}`);const t=this.getAccountKeys(),n=t.indexOf(e);n>-1?(t.splice(n,1),this.setItem(de.ACCOUNT_KEYS,JSON.stringify(t)),this.logger.trace("BrowserCacheManager.removeAccountKeyFromMap account key removed")):this.logger.trace("BrowserCacheManager.removeAccountKeyFromMap key not found in existing map")}async removeAccount(e){super.removeAccount(e),this.removeAccountKeyFromMap(e)}removeOutdatedAccount(e){this.removeItem(e),this.removeAccountKeyFromMap(e)}removeIdToken(e){super.removeIdToken(e),this.removeTokenKey(e,I.ID_TOKEN)}async removeAccessToken(e){super.removeAccessToken(e),this.removeTokenKey(e,I.ACCESS_TOKEN)}removeRefreshToken(e){super.removeRefreshToken(e),this.removeTokenKey(e,I.REFRESH_TOKEN)}getTokenKeys(){this.logger.trace("BrowserCacheManager.getTokenKeys called");const e=this.getItem(`${de.TOKEN_KEYS}.${this.clientId}`);if(e){const t=this.validateAndParseJson(e);if(t&&t.hasOwnProperty("idToken")&&t.hasOwnProperty("accessToken")&&t.hasOwnProperty("refreshToken"))return t;this.logger.error("BrowserCacheManager.getTokenKeys - Token keys found but in an unknown format. Returning empty key map.")}else this.logger.verbose("BrowserCacheManager.getTokenKeys - No token keys found");return{idToken:[],accessToken:[],refreshToken:[]}}addTokenKey(e,t){this.logger.trace("BrowserCacheManager addTokenKey called");const n=this.getTokenKeys();switch(t){case I.ID_TOKEN:n.idToken.indexOf(e)===-1&&(this.logger.info("BrowserCacheManager: addTokenKey - idToken added to map"),n.idToken.push(e));break;case I.ACCESS_TOKEN:n.accessToken.indexOf(e)===-1&&(this.logger.info("BrowserCacheManager: addTokenKey - accessToken added to map"),n.accessToken.push(e));break;case I.REFRESH_TOKEN:n.refreshToken.indexOf(e)===-1&&(this.logger.info("BrowserCacheManager: addTokenKey - refreshToken added to map"),n.refreshToken.push(e));break;default:throw this.logger.error(`BrowserCacheManager:addTokenKey - CredentialType provided invalid. CredentialType: ${t}`),g(Pt)}this.setItem(`${de.TOKEN_KEYS}.${this.clientId}`,JSON.stringify(n))}removeTokenKey(e,t){this.logger.trace("BrowserCacheManager removeTokenKey called");const n=this.getTokenKeys();switch(t){case I.ID_TOKEN:this.logger.infoPii(`BrowserCacheManager: removeTokenKey - attempting to remove idToken with key: ${e} from map`);const o=n.idToken.indexOf(e);o>-1?(this.logger.info("BrowserCacheManager: removeTokenKey - idToken removed from map"),n.idToken.splice(o,1)):this.logger.info("BrowserCacheManager: removeTokenKey - idToken does not exist in map. Either it was previously removed or it was never added.");break;case I.ACCESS_TOKEN:this.logger.infoPii(`BrowserCacheManager: removeTokenKey - attempting to remove accessToken with key: ${e} from map`);const r=n.accessToken.indexOf(e);r>-1?(this.logger.info("BrowserCacheManager: removeTokenKey - accessToken removed from map"),n.accessToken.splice(r,1)):this.logger.info("BrowserCacheManager: removeTokenKey - accessToken does not exist in map. Either it was previously removed or it was never added.");break;case I.REFRESH_TOKEN:this.logger.infoPii(`BrowserCacheManager: removeTokenKey - attempting to remove refreshToken with key: ${e} from map`);const i=n.refreshToken.indexOf(e);i>-1?(this.logger.info("BrowserCacheManager: removeTokenKey - refreshToken removed from map"),n.refreshToken.splice(i,1)):this.logger.info("BrowserCacheManager: removeTokenKey - refreshToken does not exist in map. Either it was previously removed or it was never added.");break;default:throw this.logger.error(`BrowserCacheManager:removeTokenKey - CredentialType provided invalid. CredentialType: ${t}`),g(Pt)}this.setItem(`${de.TOKEN_KEYS}.${this.clientId}`,JSON.stringify(n))}getIdTokenCredential(e){const t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getIdTokenCredential: called, no cache hit"),this.removeTokenKey(e,I.ID_TOKEN),null;const n=this.validateAndParseJson(t);return!n||!Kn(n)?(this.logger.trace("BrowserCacheManager.getIdTokenCredential: called, no cache hit"),this.removeTokenKey(e,I.ID_TOKEN),null):(this.logger.trace("BrowserCacheManager.getIdTokenCredential: cache hit"),n)}setIdTokenCredential(e){this.logger.trace("BrowserCacheManager.setIdTokenCredential called");const t=_e(e);this.setItem(t,JSON.stringify(e)),this.addTokenKey(t,I.ID_TOKEN)}getAccessTokenCredential(e){const t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getAccessTokenCredential: called, no cache hit"),this.removeTokenKey(e,I.ACCESS_TOKEN),null;const n=this.validateAndParseJson(t);return!n||!Dn(n)?(this.logger.trace("BrowserCacheManager.getAccessTokenCredential: called, no cache hit"),this.removeTokenKey(e,I.ACCESS_TOKEN),null):(this.logger.trace("BrowserCacheManager.getAccessTokenCredential: cache hit"),n)}setAccessTokenCredential(e){this.logger.trace("BrowserCacheManager.setAccessTokenCredential called");const t=_e(e);this.setItem(t,JSON.stringify(e)),this.addTokenKey(t,I.ACCESS_TOKEN)}getRefreshTokenCredential(e){const t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getRefreshTokenCredential: called, no cache hit"),this.removeTokenKey(e,I.REFRESH_TOKEN),null;const n=this.validateAndParseJson(t);return!n||!xn(n)?(this.logger.trace("BrowserCacheManager.getRefreshTokenCredential: called, no cache hit"),this.removeTokenKey(e,I.REFRESH_TOKEN),null):(this.logger.trace("BrowserCacheManager.getRefreshTokenCredential: cache hit"),n)}setRefreshTokenCredential(e){this.logger.trace("BrowserCacheManager.setRefreshTokenCredential called");const t=_e(e);this.setItem(t,JSON.stringify(e)),this.addTokenKey(t,I.REFRESH_TOKEN)}getAppMetadata(e){const t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getAppMetadata: called, no cache hit"),null;const n=this.validateAndParseJson(t);return!n||!wi(e,n)?(this.logger.trace("BrowserCacheManager.getAppMetadata: called, no cache hit"),null):(this.logger.trace("BrowserCacheManager.getAppMetadata: cache hit"),n)}setAppMetadata(e){this.logger.trace("BrowserCacheManager.setAppMetadata called");const t=vi(e);this.setItem(t,JSON.stringify(e))}getServerTelemetry(e){const t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getServerTelemetry: called, no cache hit"),null;const n=this.validateAndParseJson(t);return!n||!Ei(e,n)?(this.logger.trace("BrowserCacheManager.getServerTelemetry: called, no cache hit"),null):(this.logger.trace("BrowserCacheManager.getServerTelemetry: cache hit"),n)}setServerTelemetry(e,t){this.logger.trace("BrowserCacheManager.setServerTelemetry called"),this.setItem(e,JSON.stringify(t))}getAuthorityMetadata(e){const t=this.internalStorage.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getAuthorityMetadata: called, no cache hit"),null;const n=this.validateAndParseJson(t);return n&&_i(e,n)?(this.logger.trace("BrowserCacheManager.getAuthorityMetadata: cache hit"),n):null}getAuthorityMetadataKeys(){return this.internalStorage.getKeys().filter(t=>this.isAuthorityMetadata(t))}setWrapperMetadata(e,t){this.internalStorage.setItem(Ze.WRAPPER_SKU,e),this.internalStorage.setItem(Ze.WRAPPER_VER,t)}getWrapperMetadata(){const e=this.internalStorage.getItem(Ze.WRAPPER_SKU)||u.EMPTY_STRING,t=this.internalStorage.getItem(Ze.WRAPPER_VER)||u.EMPTY_STRING;return[e,t]}setAuthorityMetadata(e,t){this.logger.trace("BrowserCacheManager.setAuthorityMetadata called"),this.internalStorage.setItem(e,JSON.stringify(t))}getActiveAccount(){const e=this.generateCacheKey(H.ACTIVE_ACCOUNT_FILTERS),t=this.getItem(e);if(!t){this.logger.trace("BrowserCacheManager.getActiveAccount: No active account filters cache schema found, looking for legacy schema");const o=this.generateCacheKey(H.ACTIVE_ACCOUNT),r=this.getItem(o);if(!r)return this.logger.trace("BrowserCacheManager.getActiveAccount: No active account found"),null;const i=this.getAccountInfoFilteredBy({localAccountId:r});return i?(this.logger.trace("BrowserCacheManager.getActiveAccount: Legacy active account cache schema found"),this.logger.trace("BrowserCacheManager.getActiveAccount: Adding active account filters cache schema"),this.setActiveAccount(i),i):null}const n=this.validateAndParseJson(t);return n?(this.logger.trace("BrowserCacheManager.getActiveAccount: Active account filters schema found"),this.getAccountInfoFilteredBy({homeAccountId:n.homeAccountId,localAccountId:n.localAccountId,tenantId:n.tenantId})):(this.logger.trace("BrowserCacheManager.getActiveAccount: No active account found"),null)}setActiveAccount(e){const t=this.generateCacheKey(H.ACTIVE_ACCOUNT_FILTERS),n=this.generateCacheKey(H.ACTIVE_ACCOUNT);if(e){this.logger.verbose("setActiveAccount: Active account set");const o={homeAccountId:e.homeAccountId,localAccountId:e.localAccountId,tenantId:e.tenantId};this.browserStorage.setItem(t,JSON.stringify(o)),this.browserStorage.setItem(n,e.localAccountId)}else this.logger.verbose("setActiveAccount: No account passed, active account not set"),this.browserStorage.removeItem(t),this.browserStorage.removeItem(n)}getThrottlingCache(e){const t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getThrottlingCache: called, no cache hit"),null;const n=this.validateAndParseJson(t);return!n||!Si(e,n)?(this.logger.trace("BrowserCacheManager.getThrottlingCache: called, no cache hit"),null):(this.logger.trace("BrowserCacheManager.getThrottlingCache: cache hit"),n)}setThrottlingCache(e,t){this.logger.trace("BrowserCacheManager.setThrottlingCache called"),this.setItem(e,JSON.stringify(t))}getTemporaryCache(e,t){const n=t?this.generateCacheKey(e):e;if(this.cacheConfig.storeAuthStateInCookie){const r=this.getItemCookie(n);if(r)return this.logger.trace("BrowserCacheManager.getTemporaryCache: storeAuthStateInCookies set to true, retrieving from cookies"),r}const o=this.temporaryCacheStorage.getItem(n);if(!o){if(this.cacheConfig.cacheLocation===U.LocalStorage){const r=this.browserStorage.getItem(n);if(r)return this.logger.trace("BrowserCacheManager.getTemporaryCache: Temporary cache item found in local storage"),r}return this.logger.trace("BrowserCacheManager.getTemporaryCache: No cache item found in local storage"),null}return this.logger.trace("BrowserCacheManager.getTemporaryCache: Temporary cache item returned"),o}setTemporaryCache(e,t,n){const o=n?this.generateCacheKey(e):e;this.temporaryCacheStorage.setItem(o,t),this.cacheConfig.storeAuthStateInCookie&&(this.logger.trace("BrowserCacheManager.setTemporaryCache: storeAuthStateInCookie set to true, setting item cookie"),this.setItemCookie(o,t))}removeItem(e){this.browserStorage.removeItem(e)}removeTemporaryItem(e){this.temporaryCacheStorage.removeItem(e),this.cacheConfig.storeAuthStateInCookie&&(this.logger.trace("BrowserCacheManager.removeItem: storeAuthStateInCookie is true, clearing item cookie"),this.clearItemCookie(e))}getKeys(){return this.browserStorage.getKeys()}async clear(){await this.removeAllAccounts(),this.removeAppMetadata(),this.temporaryCacheStorage.getKeys().forEach(e=>{(e.indexOf(u.CACHE_PREFIX)!==-1||e.indexOf(this.clientId)!==-1)&&this.removeTemporaryItem(e)}),this.browserStorage.getKeys().forEach(e=>{(e.indexOf(u.CACHE_PREFIX)!==-1||e.indexOf(this.clientId)!==-1)&&this.browserStorage.removeItem(e)}),this.internalStorage.clear()}async clearTokensAndKeysWithClaims(e,t){e.addQueueMeasurement(l.ClearTokensAndKeysWithClaims,t);const n=this.getTokenKeys(),o=[];n.accessToken.forEach(r=>{const i=this.getAccessTokenCredential(r);i!=null&&i.requestedClaimsHash&&r.includes(i.requestedClaimsHash.toLowerCase())&&o.push(this.removeAccessToken(r))}),await Promise.all(o),o.length>0&&this.logger.warning(`${o.length} access tokens with claims in the cache keys have been removed from the cache.`)}setItemCookie(e,t,n){let o=`${encodeURIComponent(e)}=${encodeURIComponent(t)};path=/;SameSite=Lax;`;if(n){const r=this.getCookieExpirationTime(n);o+=`expires=${r};`}this.cacheConfig.secureCookies&&(o+="Secure;"),document.cookie=o}getItemCookie(e){const t=`${encodeURIComponent(e)}=`,n=document.cookie.split(";");for(let o=0;o<n.length;o++){let r=n[o];for(;r.charAt(0)===" ";)r=r.substring(1);if(r.indexOf(t)===0)return decodeURIComponent(r.substring(t.length,r.length))}return u.EMPTY_STRING}clearMsalCookies(){const e=`${u.CACHE_PREFIX}.${this.clientId}`;document.cookie.split(";").forEach(n=>{for(;n.charAt(0)===" ";)n=n.substring(1);if(n.indexOf(e)===0){const o=n.split("=")[0];this.clearItemCookie(o)}})}clearItemCookie(e){this.setItemCookie(e,u.EMPTY_STRING,-1)}getCookieExpirationTime(e){const t=new Date;return new Date(t.getTime()+e*this.COOKIE_LIFE_MULTIPLIER).toUTCString()}generateCacheKey(e){return this.validateAndParseJson(e)?JSON.stringify(e):Y.startsWith(e,u.CACHE_PREFIX)||Y.startsWith(e,H.ADAL_ID_TOKEN)?e:`${u.CACHE_PREFIX}.${this.clientId}.${e}`}generateAuthorityKey(e){const{libraryState:{id:t}}=W.parseRequestState(this.cryptoImpl,e);return this.generateCacheKey(`${_.AUTHORITY}.${t}`)}generateNonceKey(e){const{libraryState:{id:t}}=W.parseRequestState(this.cryptoImpl,e);return this.generateCacheKey(`${_.NONCE_IDTOKEN}.${t}`)}generateStateKey(e){const{libraryState:{id:t}}=W.parseRequestState(this.cryptoImpl,e);return this.generateCacheKey(`${_.REQUEST_STATE}.${t}`)}getCachedAuthority(e){const t=this.generateStateKey(e),n=this.getTemporaryCache(t);if(!n)return null;const o=this.generateAuthorityKey(n);return this.getTemporaryCache(o)}updateCacheEntries(e,t,n,o,r){this.logger.trace("BrowserCacheManager.updateCacheEntries called");const i=this.generateStateKey(e);this.setTemporaryCache(i,e,!1);const s=this.generateNonceKey(e);this.setTemporaryCache(s,t,!1);const c=this.generateAuthorityKey(e);if(this.setTemporaryCache(c,n,!1),r){const h={credential:r.homeAccountId,type:$.HOME_ACCOUNT_ID};this.setTemporaryCache(_.CCS_CREDENTIAL,JSON.stringify(h),!0)}else if(o){const h={credential:o,type:$.UPN};this.setTemporaryCache(_.CCS_CREDENTIAL,JSON.stringify(h),!0)}}resetRequestCache(e){this.logger.trace("BrowserCacheManager.resetRequestCache called"),e&&(this.temporaryCacheStorage.getKeys().forEach(t=>{t.indexOf(e)!==-1&&this.removeTemporaryItem(t)}),this.removeTemporaryItem(this.generateStateKey(e)),this.removeTemporaryItem(this.generateNonceKey(e)),this.removeTemporaryItem(this.generateAuthorityKey(e))),this.removeTemporaryItem(this.generateCacheKey(_.REQUEST_PARAMS)),this.removeTemporaryItem(this.generateCacheKey(_.ORIGIN_URI)),this.removeTemporaryItem(this.generateCacheKey(_.URL_HASH)),this.removeTemporaryItem(this.generateCacheKey(_.CORRELATION_ID)),this.removeTemporaryItem(this.generateCacheKey(_.CCS_CREDENTIAL)),this.removeTemporaryItem(this.generateCacheKey(_.NATIVE_REQUEST)),this.setInteractionInProgress(!1)}cleanRequestByState(e){if(this.logger.trace("BrowserCacheManager.cleanRequestByState called"),e){const t=this.generateStateKey(e),n=this.temporaryCacheStorage.getItem(t);this.logger.infoPii(`BrowserCacheManager.cleanRequestByState: Removing temporary cache items for state: ${n}`),this.resetRequestCache(n||u.EMPTY_STRING)}this.clearMsalCookies()}cleanRequestByInteractionType(e){this.logger.trace("BrowserCacheManager.cleanRequestByInteractionType called"),this.temporaryCacheStorage.getKeys().forEach(t=>{if(t.indexOf(_.REQUEST_STATE)===-1)return;const n=this.temporaryCacheStorage.getItem(t);if(!n)return;const o=qr(this.cryptoImpl,n);o&&o.interactionType===e&&(this.logger.infoPii(`BrowserCacheManager.cleanRequestByInteractionType: Removing temporary cache items for state: ${n}`),this.resetRequestCache(n))}),this.clearMsalCookies(),this.setInteractionInProgress(!1)}cacheCodeRequest(e){this.logger.trace("BrowserCacheManager.cacheCodeRequest called");const t=An(JSON.stringify(e));this.setTemporaryCache(_.REQUEST_PARAMS,t,!0)}getCachedRequest(e){this.logger.trace("BrowserCacheManager.getCachedRequest called");const t=this.getTemporaryCache(_.REQUEST_PARAMS,!0);if(!t)throw C(Cr);let n;try{n=JSON.parse(ne(t))}catch(o){throw this.logger.errorPii(`Attempted to parse: ${t}`),this.logger.error(`Parsing cached token request threw with error: ${o}`),C(Tr)}if(this.removeTemporaryItem(this.generateCacheKey(_.REQUEST_PARAMS)),!n.authority){const o=this.generateAuthorityKey(e),r=this.getTemporaryCache(o);if(!r)throw C(fn);n.authority=r}return n}getCachedNativeRequest(){this.logger.trace("BrowserCacheManager.getCachedNativeRequest called");const e=this.getTemporaryCache(_.NATIVE_REQUEST,!0);if(!e)return this.logger.trace("BrowserCacheManager.getCachedNativeRequest: No cached native request found"),null;const t=this.validateAndParseJson(e);return t||(this.logger.error("BrowserCacheManager.getCachedNativeRequest: Unable to parse native request"),null)}isInteractionInProgress(e){const t=this.getInteractionInProgress();return e?t===this.clientId:!!t}getInteractionInProgress(){const e=`${u.CACHE_PREFIX}.${_.INTERACTION_STATUS_KEY}`;return this.getTemporaryCache(e,!1)}setInteractionInProgress(e){const t=`${u.CACHE_PREFIX}.${_.INTERACTION_STATUS_KEY}`;if(e){if(this.getInteractionInProgress())throw C(hr);this.setTemporaryCache(t,this.clientId,!1)}else!e&&this.getInteractionInProgress()===this.clientId&&this.removeTemporaryItem(t)}getLegacyLoginHint(){const e=this.getTemporaryCache(H.ADAL_ID_TOKEN);e&&(this.browserStorage.removeItem(H.ADAL_ID_TOKEN),this.logger.verbose("Cached ADAL id token retrieved."));const t=this.getTemporaryCache(H.ID_TOKEN,!0);t&&(this.browserStorage.removeItem(this.generateCacheKey(H.ID_TOKEN)),this.logger.verbose("Cached MSAL.js v1 id token retrieved"));const n=t||e;if(n){const o=Ae(n,ne);if(o.preferred_username)return this.logger.verbose("No SSO params used and ADAL/MSAL v1 token retrieved, setting ADAL/MSAL v1 preferred_username as loginHint"),o.preferred_username;if(o.upn)return this.logger.verbose("No SSO params used and ADAL/MSAL v1 token retrieved, setting ADAL/MSAL v1 upn as loginHint"),o.upn;this.logger.verbose("No SSO params used and ADAL/MSAL v1 token retrieved, however, no account hint claim found. Enable preferred_username or upn id token claim to get SSO.")}return null}updateCredentialCacheKey(e,t){const n=_e(t);if(e!==n){const o=this.getItem(e);if(o)return this.browserStorage.removeItem(e),this.setItem(n,o),this.logger.verbose(`Updated an outdated ${t.credentialType} cache key`),n;this.logger.error(`Attempted to update an outdated ${t.credentialType} cache key but no item matching the outdated key was found in storage`)}return e}async hydrateCache(e,t){var s,c,h;const n=gt((s=e.account)==null?void 0:s.homeAccountId,(c=e.account)==null?void 0:c.environment,e.idToken,this.clientId,e.tenantId);let o;t.claims&&(o=await this.cryptoImpl.hashString(t.claims));const r=pt((h=e.account)==null?void 0:h.homeAccountId,e.account.environment,e.accessToken,this.clientId,e.tenantId,e.scopes.join(" "),e.expiresOn?e.expiresOn.getTime()/1e3:0,e.extExpiresOn?e.extExpiresOn.getTime()/1e3:0,ne,void 0,e.tokenType,void 0,t.sshKid,t.claims,o),i={idToken:n,accessToken:r};return this.saveCacheRecord(i)}async saveCacheRecord(e,t,n){try{await super.saveCacheRecord(e,t,n)}catch(o){if(o instanceof be&&this.performanceClient&&n)try{const r=this.getTokenKeys();this.performanceClient.addFields({cacheRtCount:r.refreshToken.length,cacheIdCount:r.idToken.length,cacheAtCount:r.accessToken.length},n)}catch{}throw o}}}const Ps=(a,e)=>{const t={cacheLocation:U.MemoryStorage,temporaryCacheLocation:U.MemoryStorage,storeAuthStateInCookie:!1,secureCookies:!1,cacheMigrationEnabled:!1,claimsBasedCachingEnabled:!1};return new Ft(a,t,rt,e)};/*! @azure/msal-browser v3.26.1 2024-10-08 */function Ms(a,e,t,n){return a.verbose("getAllAccounts called"),t?e.getAllAccounts(n):[]}function Us(a,e,t){if(e.trace("getAccount called"),Object.keys(a).length===0)return e.warning("getAccount: No accountFilter provided"),null;const n=t.getAccountInfoFilteredBy(a);return n?(e.verbose("getAccount: Account matching provided filter found, returning"),n):(e.verbose("getAccount: No matching account found, returning null"),null)}function Ls(a,e,t){if(e.trace("getAccountByUsername called"),!a)return e.warning("getAccountByUsername: No username provided"),null;const n=t.getAccountInfoFilteredBy({username:a});return n?(e.verbose("getAccountByUsername: Account matching username found, returning"),e.verbosePii(`getAccountByUsername: Returning signed-in accounts matching username: ${a}`),n):(e.verbose("getAccountByUsername: No matching account found, returning null"),null)}function Hs(a,e,t){if(e.trace("getAccountByHomeId called"),!a)return e.warning("getAccountByHomeId: No homeAccountId provided"),null;const n=t.getAccountInfoFilteredBy({homeAccountId:a});return n?(e.verbose("getAccountByHomeId: Account matching homeAccountId found, returning"),e.verbosePii(`getAccountByHomeId: Returning signed-in accounts matching homeAccountId: ${a}`),n):(e.verbose("getAccountByHomeId: No matching account found, returning null"),null)}function Ds(a,e,t){if(e.trace("getAccountByLocalId called"),!a)return e.warning("getAccountByLocalId: No localAccountId provided"),null;const n=t.getAccountInfoFilteredBy({localAccountId:a});return n?(e.verbose("getAccountByLocalId: Account matching localAccountId found, returning"),e.verbosePii(`getAccountByLocalId: Returning signed-in accounts matching localAccountId: ${a}`),n):(e.verbose("getAccountByLocalId: No matching account found, returning null"),null)}function Ks(a,e){e.setActiveAccount(a)}function xs(a){return a.getActiveAccount()}/*! @azure/msal-browser v3.26.1 2024-10-08 */const A={INITIALIZE_START:"msal:initializeStart",INITIALIZE_END:"msal:initializeEnd",ACCOUNT_ADDED:"msal:accountAdded",ACCOUNT_REMOVED:"msal:accountRemoved",ACTIVE_ACCOUNT_CHANGED:"msal:activeAccountChanged",LOGIN_START:"msal:loginStart",LOGIN_SUCCESS:"msal:loginSuccess",LOGIN_FAILURE:"msal:loginFailure",ACQUIRE_TOKEN_START:"msal:acquireTokenStart",ACQUIRE_TOKEN_SUCCESS:"msal:acquireTokenSuccess",ACQUIRE_TOKEN_FAILURE:"msal:acquireTokenFailure",ACQUIRE_TOKEN_NETWORK_START:"msal:acquireTokenFromNetworkStart",SSO_SILENT_START:"msal:ssoSilentStart",SSO_SILENT_SUCCESS:"msal:ssoSilentSuccess",SSO_SILENT_FAILURE:"msal:ssoSilentFailure",ACQUIRE_TOKEN_BY_CODE_START:"msal:acquireTokenByCodeStart",ACQUIRE_TOKEN_BY_CODE_SUCCESS:"msal:acquireTokenByCodeSuccess",ACQUIRE_TOKEN_BY_CODE_FAILURE:"msal:acquireTokenByCodeFailure",HANDLE_REDIRECT_START:"msal:handleRedirectStart",HANDLE_REDIRECT_END:"msal:handleRedirectEnd",POPUP_OPENED:"msal:popupOpened",LOGOUT_START:"msal:logoutStart",LOGOUT_SUCCESS:"msal:logoutSuccess",LOGOUT_FAILURE:"msal:logoutFailure",LOGOUT_END:"msal:logoutEnd",RESTORE_FROM_BFCACHE:"msal:restoreFromBFCache"};/*! @azure/msal-browser v3.26.1 2024-10-08 */class Bs{constructor(e){this.eventCallbacks=new Map,this.logger=e||new pe({})}addEventCallback(e,t,n){if(typeof window<"u"){const o=n||Es();return this.eventCallbacks.has(o)?(this.logger.error(`Event callback with id: ${o} is already registered. Please provide a unique id or remove the existing callback and try again.`),null):(this.eventCallbacks.set(o,[e,t||[]]),this.logger.verbose(`Event callback registered with id: ${o}`),o)}return null}removeEventCallback(e){this.eventCallbacks.delete(e),this.logger.verbose(`Event callback ${e} removed.`)}emitEvent(e,t,n,o){if(typeof window<"u"){const r={eventType:e,interactionType:t||null,payload:n||null,error:o||null,timestamp:Date.now()};this.eventCallbacks.forEach(([i,s],c)=>{(s.length===0||s.includes(e))&&(this.logger.verbose(`Emitting event to callback ${c}: ${e}`),i.apply(null,[r]))})}}}/*! @azure/msal-browser v3.26.1 2024-10-08 */class zr{constructor(e,t,n,o,r,i,s,c,h){this.config=e,this.browserStorage=t,this.browserCrypto=n,this.networkClient=this.config.system.networkClient,this.eventHandler=r,this.navigationClient=i,this.nativeMessageHandler=c,this.correlationId=h||he(),this.logger=o.clone(z.MSAL_SKU,It,this.correlationId),this.performanceClient=s}async clearCacheOnLogout(e){if(e){L.accountInfoIsEqual(e,this.browserStorage.getActiveAccount(),!1)&&(this.logger.verbose("Setting active account to null"),this.browserStorage.setActiveAccount(null));try{await this.browserStorage.removeAccount(L.generateAccountCacheKey(e)),this.logger.verbose("Cleared cache items belonging to the account provided in the logout request.")}catch{this.logger.error("Account provided in logout request was not found. Local cache unchanged.")}}else try{this.logger.verbose("No account provided in logout request, clearing all cache items.",this.correlationId),await this.browserStorage.clear(),await this.browserCrypto.clearKeystore()}catch{this.logger.error("Attempted to clear all MSAL cache items and failed. Local cache unchanged.")}}getRedirectUri(e){this.logger.verbose("getRedirectUri called");const t=e||this.config.auth.redirectUri||se();return w.getAbsoluteUrl(t,se())}initializeServerTelemetryManager(e,t){this.logger.verbose("initializeServerTelemetryManager called");const n={clientId:this.config.auth.clientId,correlationId:this.correlationId,apiId:e,forceRefresh:t||!1,wrapperSKU:this.browserStorage.getWrapperMetadata()[0],wrapperVer:this.browserStorage.getWrapperMetadata()[1]};return new Ge(n,this.browserStorage)}async getDiscoveredAuthority(e){const{account:t}=e,n=e.requestExtraQueryParameters&&e.requestExtraQueryParameters.hasOwnProperty("instance_aware")?e.requestExtraQueryParameters.instance_aware:void 0;this.performanceClient.addQueueMeasurement(l.StandardInteractionClientGetDiscoveredAuthority,this.correlationId);const o={protocolMode:this.config.auth.protocolMode,OIDCOptions:this.config.auth.OIDCOptions,knownAuthorities:this.config.auth.knownAuthorities,cloudDiscoveryMetadata:this.config.auth.cloudDiscoveryMetadata,authorityMetadata:this.config.auth.authorityMetadata,skipAuthorityMetadataCache:this.config.auth.skipAuthorityMetadataCache},r=e.requestAuthority||this.config.auth.authority,i=n!=null&&n.length?n==="true":this.config.auth.instanceAware,s=t&&i?this.config.auth.authority.replace(w.getDomainFromUrl(r),t.environment):r,c=B.generateAuthority(s,e.requestAzureCloudOptions||this.config.auth.azureCloudOptions),h=await m(Jo,l.AuthorityFactoryCreateDiscoveredInstance,this.logger,this.performanceClient,this.correlationId)(c,this.config.system.networkClient,this.browserStorage,o,this.logger,this.correlationId,this.performanceClient);if(t&&!h.isAlias(t.environment))throw R(qo);return h}}/*! @azure/msal-browser v3.26.1 2024-10-08 */const Fs=32;async function Gs(a,e,t){a.addQueueMeasurement(l.GeneratePkceCodes,t);const n=Ie(qs,l.GenerateCodeVerifier,e,a,t)(a,e,t),o=await m(zs,l.GenerateCodeChallengeFromVerifier,e,a,t)(n,a,e,t);return{verifier:n,challenge:o}}function qs(a,e,t){try{const n=new Uint8Array(Fs);return Ie(hs,l.GetRandomValues,e,a,t)(n),At(n)}catch{throw C(pn)}}async function zs(a,e,t,n){e.addQueueMeasurement(l.GenerateCodeChallengeFromVerifier,n);try{const o=await m(Lr,l.Sha256Digest,t,e,n)(a,e,n);return At(new Uint8Array(o))}catch{throw C(pn)}}/*! @azure/msal-browser v3.26.1 2024-10-08 */async function _n(a,e,t,n){t.addQueueMeasurement(l.InitializeBaseRequest,a.correlationId);const o=a.authority||e.auth.authority,r=[...a&&a.scopes||[]],i={...a,correlationId:a.correlationId,authority:o,scopes:r};if(!i.authenticationScheme)i.authenticationScheme=k.BEARER,n.verbose(`Authentication Scheme wasn't explicitly set in request, defaulting to "Bearer" request`);else{if(i.authenticationScheme===k.SSH){if(!a.sshJwk)throw R(mt);if(!a.sshKid)throw R(Bo)}n.verbose(`Authentication Scheme set to "${i.authenticationScheme}" as configured in Auth request`)}return e.cache.claimsBasedCachingEnabled&&a.claims&&!Y.isEmptyObj(a.claims)&&(i.requestedClaimsHash=await Hr(a.claims)),i}async function $s(a,e,t,n,o){n.addQueueMeasurement(l.InitializeSilentRequest,a.correlationId);const r=await m(_n,l.InitializeBaseRequest,o,n,a.correlationId)(a,t,n,o);return{...a,...r,account:e,forceRefresh:a.forceRefresh||!1}}/*! @azure/msal-browser v3.26.1 2024-10-08 */class De extends zr{async initializeAuthorizationCodeRequest(e){this.performanceClient.addQueueMeasurement(l.StandardInteractionClientInitializeAuthorizationCodeRequest,this.correlationId);const t=await m(Gs,l.GeneratePkceCodes,this.logger,this.performanceClient,this.correlationId)(this.performanceClient,this.logger,this.correlationId),n={...e,redirectUri:e.redirectUri,code:u.EMPTY_STRING,codeVerifier:t.verifier};return e.codeChallenge=t.challenge,e.codeChallengeMethod=u.S256_CODE_CHALLENGE_METHOD,n}initializeLogoutRequest(e){this.logger.verbose("initializeLogoutRequest called",e==null?void 0:e.correlationId);const t={correlationId:this.correlationId||he(),...e};if(e)if(e.logoutHint)this.logger.verbose("logoutHint has already been set in logoutRequest");else if(e.account){const n=this.getLogoutHintFromIdTokenClaims(e.account);n&&(this.logger.verbose("Setting logoutHint to login_hint ID Token Claim value for the account provided"),t.logoutHint=n)}else this.logger.verbose("logoutHint was not set and account was not passed into logout request, logoutHint will not be set");else this.logger.verbose("logoutHint will not be set since no logout request was configured");return!e||e.postLogoutRedirectUri!==null?e&&e.postLogoutRedirectUri?(this.logger.verbose("Setting postLogoutRedirectUri to uri set on logout request",t.correlationId),t.postLogoutRedirectUri=w.getAbsoluteUrl(e.postLogoutRedirectUri,se())):this.config.auth.postLogoutRedirectUri===null?this.logger.verbose("postLogoutRedirectUri configured as null and no uri set on request, not passing post logout redirect",t.correlationId):this.config.auth.postLogoutRedirectUri?(this.logger.verbose("Setting postLogoutRedirectUri to configured uri",t.correlationId),t.postLogoutRedirectUri=w.getAbsoluteUrl(this.config.auth.postLogoutRedirectUri,se())):(this.logger.verbose("Setting postLogoutRedirectUri to current page",t.correlationId),t.postLogoutRedirectUri=w.getAbsoluteUrl(se(),se())):this.logger.verbose("postLogoutRedirectUri passed as null, not setting post logout redirect uri",t.correlationId),t}getLogoutHintFromIdTokenClaims(e){const t=e.idTokenClaims;if(t){if(t.login_hint)return t.login_hint;this.logger.verbose("The ID Token Claims tied to the provided account do not contain a login_hint claim, logoutHint will not be added to logout request")}else this.logger.verbose("The provided account does not contain ID Token Claims, logoutHint will not be added to logout request");return null}async createAuthCodeClient(e){this.performanceClient.addQueueMeasurement(l.StandardInteractionClientCreateAuthCodeClient,this.correlationId);const t=await m(this.getClientConfiguration.bind(this),l.StandardInteractionClientGetClientConfiguration,this.logger,this.performanceClient,this.correlationId)(e);return new er(t,this.performanceClient)}async getClientConfiguration(e){const{serverTelemetryManager:t,requestAuthority:n,requestAzureCloudOptions:o,requestExtraQueryParameters:r,account:i}=e;this.performanceClient.addQueueMeasurement(l.StandardInteractionClientGetClientConfiguration,this.correlationId);const s=await m(this.getDiscoveredAuthority.bind(this),l.StandardInteractionClientGetDiscoveredAuthority,this.logger,this.performanceClient,this.correlationId)({requestAuthority:n,requestAzureCloudOptions:o,requestExtraQueryParameters:r,account:i}),c=this.config.system.loggerOptions;return{authOptions:{clientId:this.config.auth.clientId,authority:s,clientCapabilities:this.config.auth.clientCapabilities},systemOptions:{tokenRenewalOffsetSeconds:this.config.system.tokenRenewalOffsetSeconds,preventCorsPreflight:!0},loggerOptions:{loggerCallback:c.loggerCallback,piiLoggingEnabled:c.piiLoggingEnabled,logLevel:c.logLevel,correlationId:this.correlationId},cacheOptions:{claimsBasedCachingEnabled:this.config.cache.claimsBasedCachingEnabled},cryptoInterface:this.browserCrypto,networkInterface:this.networkClient,storageInterface:this.browserStorage,serverTelemetryManager:t,libraryInfo:{sku:z.MSAL_SKU,version:It,cpu:u.EMPTY_STRING,os:u.EMPTY_STRING},telemetry:this.config.telemetry}}async initializeAuthorizationRequest(e,t){this.performanceClient.addQueueMeasurement(l.StandardInteractionClientInitializeAuthorizationRequest,this.correlationId);const n=this.getRedirectUri(e.redirectUri),o={interactionType:t},r=W.setRequestState(this.browserCrypto,e&&e.state||u.EMPTY_STRING,o),s={...await m(_n,l.InitializeBaseRequest,this.logger,this.performanceClient,this.correlationId)({...e,correlationId:this.correlationId},this.config,this.performanceClient,this.logger),redirectUri:n,state:r,nonce:e.nonce||he(),responseMode:this.config.auth.OIDCOptions.serverResponseType},c=e.account||this.browserStorage.getActiveAccount();if(c&&(this.logger.verbose("Setting validated request account",this.correlationId),this.logger.verbosePii(`Setting validated request account: ${c.homeAccountId}`,this.correlationId),s.account=c),!s.loginHint&&!c){const h=this.browserStorage.getLegacyLoginHint();h&&(s.loginHint=h)}return s}}/*! @azure/msal-browser v3.26.1 2024-10-08 */const Vs="ContentError",$r="user_switch";/*! @azure/msal-browser v3.26.1 2024-10-08 */const Qs="USER_INTERACTION_REQUIRED",Ys="USER_CANCEL",Ws="NO_NETWORK",js="PERSISTENT_ERROR",Js="DISABLED",Xs="ACCOUNT_UNAVAILABLE";/*! @azure/msal-browser v3.26.1 2024-10-08 */const Zs=-2147186943,ec={[$r]:"User attempted to switch accounts in the native broker, which is not allowed. All new accounts must sign-in through the standard web flow first, please try again."};class Z extends N{constructor(e,t,n){super(e,t),Object.setPrototypeOf(this,Z.prototype),this.name="NativeAuthError",this.ext=n}}function we(a){if(a.ext&&a.ext.status&&(a.ext.status===js||a.ext.status===Js)||a.ext&&a.ext.error&&a.ext.error===Zs)return!0;switch(a.errorCode){case Vs:return!0;default:return!1}}function Gt(a,e,t){if(t&&t.status)switch(t.status){case Xs:return Lt(Xo);case Qs:return new j(a,e);case Ys:return C(Te);case Ws:return C(lt)}return new Z(a,ec[a]||e,t)}/*! @azure/msal-browser v3.26.1 2024-10-08 */class Vr extends De{async acquireToken(e){this.performanceClient.addQueueMeasurement(l.SilentCacheClientAcquireToken,e.correlationId);const t=this.initializeServerTelemetryManager(b.acquireTokenSilent_silentFlow),n=await m(this.getClientConfiguration.bind(this),l.StandardInteractionClientGetClientConfiguration,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:t,requestAuthority:e.authority,requestAzureCloudOptions:e.azureCloudOptions,account:e.account}),o=new Ga(n,this.performanceClient);this.logger.verbose("Silent auth client created");try{const i=(await m(o.acquireCachedToken.bind(o),l.SilentFlowClientAcquireCachedToken,this.logger,this.performanceClient,e.correlationId)(e))[0];return this.performanceClient.addFields({fromCache:!0},e.correlationId),i}catch(r){throw r instanceof $e&&r.errorCode===Tn&&this.logger.verbose("Signing keypair for bound access token not found. Refreshing bound access token and generating a new crypto keypair."),r}}logout(e){this.logger.verbose("logoutRedirect called");const t=this.initializeLogoutRequest(e);return this.clearCacheOnLogout(t==null?void 0:t.account)}}/*! @azure/msal-browser v3.26.1 2024-10-08 */const Rt={BROKER_CLIENT_ID:"brk_client_id",BROKER_REDIRECT_URI:"brk_redirect_uri"};class Oe extends zr{constructor(e,t,n,o,r,i,s,c,h,d,p,f){var E;super(e,t,n,o,r,i,c,h,f),this.apiId=s,this.accountId=d,this.nativeMessageHandler=h,this.nativeStorageManager=p,this.silentCacheClient=new Vr(e,this.nativeStorageManager,n,o,r,i,c,h,f),this.serverTelemetryManager=this.initializeServerTelemetryManager(this.apiId);const y=this.nativeMessageHandler.getExtensionId()===Re.PREFERRED_EXTENSION_ID?"chrome":(E=this.nativeMessageHandler.getExtensionId())!=null&&E.length?"unknown":void 0;this.skus=Ge.makeExtraSkuString({libraryName:z.MSAL_SKU,libraryVersion:It,extensionName:y,extensionVersion:this.nativeMessageHandler.getExtensionVersion()})}addRequestSKUs(e){e.extraParameters={...e.extraParameters,[_a]:this.skus}}async acquireToken(e){this.performanceClient.addQueueMeasurement(l.NativeInteractionClientAcquireToken,e.correlationId),this.logger.trace("NativeInteractionClient - acquireToken called.");const t=this.performanceClient.startMeasurement(l.NativeInteractionClientAcquireToken,e.correlationId),n=oe();try{const o=await this.initializeNativeRequest(e);try{const h=await this.acquireTokensFromCache(this.accountId,o);return t.end({success:!0,isNativeBroker:!1,fromCache:!0}),h}catch{this.logger.info("MSAL internal Cache does not contain tokens, proceed to make a native call")}const{...r}=o,i={method:fe.GetToken,request:r},s=await this.nativeMessageHandler.sendMessage(i),c=this.validateNativeResponse(s);return await this.handleNativeResponse(c,o,n).then(h=>(t.end({success:!0,isNativeBroker:!0,requestId:h.requestId}),this.serverTelemetryManager.clearNativeBrokerErrorCode(),h)).catch(h=>{throw t.end({success:!1,errorCode:h.errorCode,subErrorCode:h.subError,isNativeBroker:!0}),h})}catch(o){throw o instanceof Z&&this.serverTelemetryManager.setNativeBrokerErrorCode(o.errorCode),o}}createSilentCacheRequest(e,t){return{authority:e.authority,correlationId:this.correlationId,scopes:P.fromString(e.scope).asArray(),account:t,forceRefresh:!1}}async acquireTokensFromCache(e,t){if(!e)throw this.logger.warning("NativeInteractionClient:acquireTokensFromCache - No nativeAccountId provided"),g(Ot);const n=this.browserStorage.getBaseAccountInfo({nativeAccountId:e});if(!n)throw g(Ot);try{const o=this.createSilentCacheRequest(t,n),r=await this.silentCacheClient.acquireToken(o),i={...n,idTokenClaims:r==null?void 0:r.idTokenClaims,idToken:r==null?void 0:r.idToken};return{...r,account:i}}catch(o){throw o}}async acquireTokenRedirect(e,t){this.logger.trace("NativeInteractionClient - acquireTokenRedirect called.");const{...n}=e;delete n.onRedirectNavigate;const o=await this.initializeNativeRequest(n),r={method:fe.GetToken,request:o};try{const c=await this.nativeMessageHandler.sendMessage(r);this.validateNativeResponse(c)}catch(c){if(c instanceof Z&&(this.serverTelemetryManager.setNativeBrokerErrorCode(c.errorCode),we(c)))throw c}this.browserStorage.setTemporaryCache(_.NATIVE_REQUEST,JSON.stringify(o),!0);const i={apiId:b.acquireTokenRedirect,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1},s=this.config.auth.navigateToLoginRequestUrl?window.location.href:this.getRedirectUri(e.redirectUri);t.end({success:!0}),await this.navigationClient.navigateExternal(s,i)}async handleRedirectPromise(e,t){if(this.logger.trace("NativeInteractionClient - handleRedirectPromise called."),!this.browserStorage.isInteractionInProgress(!0))return this.logger.info("handleRedirectPromise called but there is no interaction in progress, returning null."),null;const n=this.browserStorage.getCachedNativeRequest();if(!n)return this.logger.verbose("NativeInteractionClient - handleRedirectPromise called but there is no cached request, returning null."),e&&t&&(e==null||e.addFields({errorCode:"no_cached_request"},t)),null;const{prompt:o,...r}=n;o&&this.logger.verbose("NativeInteractionClient - handleRedirectPromise called and prompt was included in the original request, removing prompt from cached request to prevent second interaction with native broker window."),this.browserStorage.removeItem(this.browserStorage.generateCacheKey(_.NATIVE_REQUEST));const i={method:fe.GetToken,request:r},s=oe();try{this.logger.verbose("NativeInteractionClient - handleRedirectPromise sending message to native broker.");const c=await this.nativeMessageHandler.sendMessage(i);this.validateNativeResponse(c);const h=this.handleNativeResponse(c,r,s);this.browserStorage.setInteractionInProgress(!1);const d=await h;return this.serverTelemetryManager.clearNativeBrokerErrorCode(),d}catch(c){throw this.browserStorage.setInteractionInProgress(!1),c}}logout(){return this.logger.trace("NativeInteractionClient - logout called."),Promise.reject("Logout not implemented yet")}async handleNativeResponse(e,t,n){var d;this.logger.trace("NativeInteractionClient - handleNativeResponse called.");const o=Ae(e.id_token,ne),r=this.createHomeAccountIdentifier(e,o),i=(d=this.browserStorage.getAccountInfoFilteredBy({nativeAccountId:t.accountId}))==null?void 0:d.homeAccountId;if(r!==i&&e.account.id!==t.accountId)throw Gt($r);const s=await this.getDiscoveredAuthority({requestAuthority:t.authority}),c=dn(this.browserStorage,s,r,ne,o,e.client_info,void 0,o.tid,void 0,e.account.id,this.logger),h=await this.generateAuthenticationResult(e,t,o,c,s.canonicalAuthority,n);return this.cacheAccount(c),this.cacheNativeTokens(e,t,r,o,e.access_token,h.tenantId,n),h}createHomeAccountIdentifier(e,t){return L.generateHomeAccountId(e.client_info||u.EMPTY_STRING,Q.Default,this.logger,this.browserCrypto,t)}generateScopes(e,t){return e.scope?P.fromString(e.scope):P.fromString(t.scope)}async generatePopAccessToken(e,t){if(t.tokenType===k.POP&&t.signPopToken){if(e.shr)return this.logger.trace("handleNativeServerResponse: SHR is enabled in native layer"),e.shr;const n=new Ue(this.browserCrypto),o={resourceRequestMethod:t.resourceRequestMethod,resourceRequestUri:t.resourceRequestUri,shrClaims:t.shrClaims,shrNonce:t.shrNonce};if(!t.keyId)throw g(jt);return n.signPopToken(e.access_token,t.keyId,o)}else return e.access_token}async generateAuthenticationResult(e,t,n,o,r,i){const s=this.addTelemetryFromNativeResponse(e),c=e.scope?P.fromString(e.scope):P.fromString(t.scope),h=e.account.properties||{},d=h.UID||n.oid||n.sub||u.EMPTY_STRING,p=h.TenantId||n.tid||u.EMPTY_STRING,f=an(o.getAccountInfo(),void 0,n,e.id_token);f.nativeAccountId!==e.account.id&&(f.nativeAccountId=e.account.id);const y=await this.generatePopAccessToken(e,t),E=t.tokenType===k.POP?k.POP:k.BEARER;return{authority:r,uniqueId:d,tenantId:p,scopes:c.asArray(),account:f,idToken:e.id_token,idTokenClaims:n,accessToken:y,fromCache:s?this.isResponseFromCache(s):!1,expiresOn:new Date(Number(i+e.expires_in)*1e3),tokenType:E,correlationId:this.correlationId,state:e.state,fromNativeBroker:!0}}cacheAccount(e){this.browserStorage.setAccount(e),this.browserStorage.removeAccountContext(e).catch(t=>{this.logger.error(`Error occurred while removing account context from browser storage. ${t}`)})}cacheNativeTokens(e,t,n,o,r,i,s){const c=gt(n,t.authority,e.id_token||"",t.clientId,o.tid||""),h=t.tokenType===k.POP?u.SHR_NONCE_VALIDITY:(typeof e.expires_in=="string"?parseInt(e.expires_in,10):e.expires_in)||0,d=s+h,p=this.generateScopes(e,t),f=pt(n,t.authority,r,t.clientId,o.tid||i,p.printScopes(),d,0,ne,void 0,t.tokenType,void 0,t.keyId),y={idToken:c,accessToken:f};this.nativeStorageManager.saveCacheRecord(y,t.storeInCache)}addTelemetryFromNativeResponse(e){const t=this.getMATSFromResponse(e);return t?(this.performanceClient.addFields({extensionId:this.nativeMessageHandler.getExtensionId(),extensionVersion:this.nativeMessageHandler.getExtensionVersion(),matsBrokerVersion:t.broker_version,matsAccountJoinOnStart:t.account_join_on_start,matsAccountJoinOnEnd:t.account_join_on_end,matsDeviceJoin:t.device_join,matsPromptBehavior:t.prompt_behavior,matsApiErrorCode:t.api_error_code,matsUiVisible:t.ui_visible,matsSilentCode:t.silent_code,matsSilentBiSubCode:t.silent_bi_sub_code,matsSilentMessage:t.silent_message,matsSilentStatus:t.silent_status,matsHttpStatus:t.http_status,matsHttpEventCount:t.http_event_count},this.correlationId),t):null}validateNativeResponse(e){if(e.hasOwnProperty("access_token")&&e.hasOwnProperty("id_token")&&e.hasOwnProperty("client_info")&&e.hasOwnProperty("account")&&e.hasOwnProperty("scope")&&e.hasOwnProperty("expires_in"))return e;throw co(zt,"Response missing expected properties.")}getMATSFromResponse(e){if(e.properties.MATS)try{return JSON.parse(e.properties.MATS)}catch{this.logger.error("NativeInteractionClient - Error parsing MATS telemetry, returning null instead")}return null}isResponseFromCache(e){return typeof e.is_cached>"u"?(this.logger.verbose("NativeInteractionClient - MATS telemetry does not contain field indicating if response was served from cache. Returning false."),!1):!!e.is_cached}async initializeNativeRequest(e){this.logger.trace("NativeInteractionClient - initializeNativeRequest called");const t=e.authority||this.config.auth.authority;e.account&&await this.getDiscoveredAuthority({requestAuthority:t,requestAzureCloudOptions:e.azureCloudOptions,account:e.account});const n=new w(t);n.validateAsUri();const{scopes:o,...r}=e,i=new P(o||[]);i.appendScopes(He);const s=()=>{switch(this.apiId){case b.ssoSilent:case b.acquireTokenSilent_silentFlow:return this.logger.trace("initializeNativeRequest: silent request sets prompt to none"),D.NONE}if(!e.prompt){this.logger.trace("initializeNativeRequest: prompt was not provided");return}switch(e.prompt){case D.NONE:case D.CONSENT:case D.LOGIN:return this.logger.trace("initializeNativeRequest: prompt is compatible with native flow"),e.prompt;default:throw this.logger.trace(`initializeNativeRequest: prompt = ${e.prompt} is not compatible with native flow`),C(br)}},c={...r,accountId:this.accountId,clientId:this.config.auth.clientId,authority:n.urlString,scope:i.printScopes(),redirectUri:this.getRedirectUri(e.redirectUri),prompt:s(),correlationId:this.correlationId,tokenType:e.authenticationScheme,windowTitleSubstring:document.title,extraParameters:{...e.extraQueryParameters,...e.tokenQueryParameters},extendedExpiryToken:!1,keyId:e.popKid};if(c.signPopToken&&e.popKid)throw C(Nr);if(this.handleExtraBrokerParams(c),c.extraParameters=c.extraParameters||{},c.extraParameters.telemetry=Re.MATS_TELEMETRY,e.authenticationScheme===k.POP){const h={resourceRequestUri:e.resourceRequestUri,resourceRequestMethod:e.resourceRequestMethod,shrClaims:e.shrClaims,shrNonce:e.shrNonce},d=new Ue(this.browserCrypto);let p;if(c.keyId)p=this.browserCrypto.base64UrlEncode(JSON.stringify({kid:c.keyId})),c.signPopToken=!1;else{const f=await m(d.generateCnf.bind(d),l.PopTokenGenerateCnf,this.logger,this.performanceClient,e.correlationId)(h,this.logger);p=f.reqCnfString,c.keyId=f.kid,c.signPopToken=!0}c.reqCnf=p}return this.addRequestSKUs(c),c}handleExtraBrokerParams(e){if(e.extraParameters&&e.extraParameters.hasOwnProperty(Rt.BROKER_CLIENT_ID)&&e.extraParameters.hasOwnProperty(Rt.BROKER_REDIRECT_URI)&&e.extraParameters.hasOwnProperty(Me)){const t=e.extraParameters[Me],n=e.redirectUri,o=e.extraParameters[Rt.BROKER_REDIRECT_URI];e.extraParameters={child_client_id:t,child_redirect_uri:n},e.redirectUri=o}}}/*! @azure/msal-browser v3.26.1 2024-10-08 */class te{constructor(e,t,n,o){this.logger=e,this.handshakeTimeoutMs=t,this.extensionId=o,this.resolvers=new Map,this.handshakeResolvers=new Map,this.messageChannel=new MessageChannel,this.windowListener=this.onWindowMessage.bind(this),this.performanceClient=n,this.handshakeEvent=n.startMeasurement(l.NativeMessageHandlerHandshake)}async sendMessage(e){this.logger.trace("NativeMessageHandler - sendMessage called.");const t={channel:Re.CHANNEL_ID,extensionId:this.extensionId,responseId:he(),body:e};return this.logger.trace("NativeMessageHandler - Sending request to browser extension"),this.logger.tracePii(`NativeMessageHandler - Sending request to browser extension: ${JSON.stringify(t)}`),this.messageChannel.port1.postMessage(t),new Promise((n,o)=>{this.resolvers.set(t.responseId,{resolve:n,reject:o})})}static async createProvider(e,t,n){e.trace("NativeMessageHandler - createProvider called.");try{const o=new te(e,t,n,Re.PREFERRED_EXTENSION_ID);return await o.sendHandshakeRequest(),o}catch{const r=new te(e,t,n);return await r.sendHandshakeRequest(),r}}async sendHandshakeRequest(){this.logger.trace("NativeMessageHandler - sendHandshakeRequest called."),window.addEventListener("message",this.windowListener,!1);const e={channel:Re.CHANNEL_ID,extensionId:this.extensionId,responseId:he(),body:{method:fe.HandshakeRequest}};return this.handshakeEvent.add({extensionId:this.extensionId,extensionHandshakeTimeoutMs:this.handshakeTimeoutMs}),this.messageChannel.port1.onmessage=t=>{this.onChannelMessage(t)},window.postMessage(e,window.origin,[this.messageChannel.port2]),new Promise((t,n)=>{this.handshakeResolvers.set(e.responseId,{resolve:t,reject:n}),this.timeoutId=window.setTimeout(()=>{window.removeEventListener("message",this.windowListener,!1),this.messageChannel.port1.close(),this.messageChannel.port2.close(),this.handshakeEvent.end({extensionHandshakeTimedOut:!0,success:!1}),n(C(_r)),this.handshakeResolvers.delete(e.responseId)},this.handshakeTimeoutMs)})}onWindowMessage(e){if(this.logger.trace("NativeMessageHandler - onWindowMessage called"),e.source!==window)return;const t=e.data;if(!(!t.channel||t.channel!==Re.CHANNEL_ID)&&!(t.extensionId&&t.extensionId!==this.extensionId)&&t.body.method===fe.HandshakeRequest){const n=this.handshakeResolvers.get(t.responseId);if(!n){this.logger.trace(`NativeMessageHandler.onWindowMessage - resolver can't be found for request ${t.responseId}`);return}this.logger.verbose(t.extensionId?`Extension with id: ${t.extensionId} not installed`:"No extension installed"),clearTimeout(this.timeoutId),this.messageChannel.port1.close(),this.messageChannel.port2.close(),window.removeEventListener("message",this.windowListener,!1),this.handshakeEvent.end({success:!1,extensionInstalled:!1}),n.reject(C(kr))}}onChannelMessage(e){this.logger.trace("NativeMessageHandler - onChannelMessage called.");const t=e.data,n=this.resolvers.get(t.responseId),o=this.handshakeResolvers.get(t.responseId);try{const r=t.body.method;if(r===fe.Response){if(!n)return;const i=t.body.response;if(this.logger.trace("NativeMessageHandler - Received response from browser extension"),this.logger.tracePii(`NativeMessageHandler - Received response from browser extension: ${JSON.stringify(i)}`),i.status!=="Success")n.reject(Gt(i.code,i.description,i.ext));else if(i.result)i.result.code&&i.result.description?n.reject(Gt(i.result.code,i.result.description,i.result.ext)):n.resolve(i.result);else throw co(zt,"Event does not contain result.");this.resolvers.delete(t.responseId)}else if(r===fe.HandshakeResponse){if(!o){this.logger.trace(`NativeMessageHandler.onChannelMessage - resolver can't be found for request ${t.responseId}`);return}clearTimeout(this.timeoutId),window.removeEventListener("message",this.windowListener,!1),this.extensionId=t.extensionId,this.extensionVersion=t.body.version,this.logger.verbose(`NativeMessageHandler - Received HandshakeResponse from extension: ${this.extensionId}`),this.handshakeEvent.end({extensionInstalled:!0,success:!0}),o.resolve(),this.handshakeResolvers.delete(t.responseId)}}catch(r){this.logger.error("Error parsing response from WAM Extension"),this.logger.errorPii(`Error parsing response from WAM Extension: ${r}`),this.logger.errorPii(`Unable to parse ${e}`),n?n.reject(r):o&&o.reject(r)}}getExtensionId(){return this.extensionId}getExtensionVersion(){return this.extensionVersion}static isNativeAvailable(e,t,n,o){if(t.trace("isNativeAvailable called"),!e.system.allowNativeBroker)return t.trace("isNativeAvailable: allowNativeBroker is not enabled, returning false"),!1;if(!n)return t.trace("isNativeAvailable: WAM extension provider is not initialized, returning false"),!1;if(o)switch(o){case k.BEARER:case k.POP:return t.trace("isNativeAvailable: authenticationScheme is supported, returning true"),!0;default:return t.trace("isNativeAvailable: authenticationScheme is not supported, returning false"),!1}return!0}}/*! @azure/msal-browser v3.26.1 2024-10-08 */class kn{constructor(e,t,n,o,r){this.authModule=e,this.browserStorage=t,this.authCodeRequest=n,this.logger=o,this.performanceClient=r}async handleCodeResponse(e,t){this.performanceClient.addQueueMeasurement(l.HandleCodeResponse,t.correlationId);let n;try{n=this.authModule.handleFragmentResponse(e,t.state)}catch(o){throw o instanceof me&&o.subError===Te?C(Te):o}return m(this.handleCodeResponseFromServer.bind(this),l.HandleCodeResponseFromServer,this.logger,this.performanceClient,t.correlationId)(n,t)}async handleCodeResponseFromServer(e,t,n=!0){if(this.performanceClient.addQueueMeasurement(l.HandleCodeResponseFromServer,t.correlationId),this.logger.trace("InteractionHandler.handleCodeResponseFromServer called"),this.authCodeRequest.code=e.code,e.cloud_instance_host_name&&await m(this.authModule.updateAuthority.bind(this.authModule),l.UpdateTokenEndpointAuthority,this.logger,this.performanceClient,t.correlationId)(e.cloud_instance_host_name,t.correlationId),n&&(e.nonce=t.nonce||void 0),e.state=t.state,e.client_info)this.authCodeRequest.clientInfo=e.client_info;else{const r=this.createCcsCredentials(t);r&&(this.authCodeRequest.ccsCredential=r)}return await m(this.authModule.acquireToken.bind(this.authModule),l.AuthClientAcquireToken,this.logger,this.performanceClient,t.correlationId)(this.authCodeRequest,e)}createCcsCredentials(e){return e.account?{credential:e.account.homeAccountId,type:$.HOME_ACCOUNT_ID}:e.loginHint?{credential:e.loginHint,type:$.UPN}:null}}/*! @azure/msal-browser v3.26.1 2024-10-08 */function Qr(a,e,t){const n=st(a);if(!n)throw $o(a)?(t.error(`A ${e} is present in the iframe but it does not contain known properties. It's likely that the ${e} has been replaced by code running on the redirectUri page.`),t.errorPii(`The ${e} detected is: ${a}`),C(ar)):(t.error(`The request has returned to the redirectUri but a ${e} is not present. It's likely that the ${e} has been removed or the page has been redirected by code running on the redirectUri page.`),C(ir));return n}function tc(a,e,t){if(!a.state)throw C(mn);const n=qr(e,a.state);if(!n)throw C(sr);if(n.interactionType!==t)throw C(cr)}/*! @azure/msal-browser v3.26.1 2024-10-08 */class nc extends De{constructor(e,t,n,o,r,i,s,c,h,d){super(e,t,n,o,r,i,s,h,d),this.unloadWindow=this.unloadWindow.bind(this),this.nativeStorage=c}acquireToken(e){try{const n={popupName:this.generatePopupName(e.scopes||He,e.authority||this.config.auth.authority),popupWindowAttributes:e.popupWindowAttributes||{},popupWindowParent:e.popupWindowParent??window};return this.config.system.asyncPopups?(this.logger.verbose("asyncPopups set to true, acquiring token"),this.acquireTokenPopupAsync(e,n)):(this.logger.verbose("asyncPopup set to false, opening popup before acquiring token"),n.popup=this.openSizedPopup("about:blank",n),this.acquireTokenPopupAsync(e,n))}catch(t){return Promise.reject(t)}}logout(e){try{this.logger.verbose("logoutPopup called");const t=this.initializeLogoutRequest(e),n={popupName:this.generateLogoutPopupName(t),popupWindowAttributes:(e==null?void 0:e.popupWindowAttributes)||{},popupWindowParent:(e==null?void 0:e.popupWindowParent)??window},o=e&&e.authority,r=e&&e.mainWindowRedirectUri;return this.config.system.asyncPopups?(this.logger.verbose("asyncPopups set to true"),this.logoutPopupAsync(t,n,o,r)):(this.logger.verbose("asyncPopup set to false, opening popup"),n.popup=this.openSizedPopup("about:blank",n),this.logoutPopupAsync(t,n,o,r))}catch(t){return Promise.reject(t)}}async acquireTokenPopupAsync(e,t){var r;this.logger.verbose("acquireTokenPopupAsync called");const n=this.initializeServerTelemetryManager(b.acquireTokenPopup),o=await m(this.initializeAuthorizationRequest.bind(this),l.StandardInteractionClientInitializeAuthorizationRequest,this.logger,this.performanceClient,this.correlationId)(e,T.Popup);Gr(o.authority);try{const i=await m(this.initializeAuthorizationCodeRequest.bind(this),l.StandardInteractionClientInitializeAuthorizationCodeRequest,this.logger,this.performanceClient,this.correlationId)(o),s=await m(this.createAuthCodeClient.bind(this),l.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:n,requestAuthority:o.authority,requestAzureCloudOptions:o.azureCloudOptions,requestExtraQueryParameters:o.extraQueryParameters,account:o.account}),c=te.isNativeAvailable(this.config,this.logger,this.nativeMessageHandler,e.authenticationScheme);let h;c&&(h=this.performanceClient.startMeasurement(l.FetchAccountIdWithNativeBroker,e.correlationId));const d=await s.getAuthCodeUrl({...o,nativeBroker:c}),p=new kn(s,this.browserStorage,i,this.logger,this.performanceClient),f=this.initiateAuthRequest(d,t);this.eventHandler.emitEvent(A.POPUP_OPENED,T.Popup,{popupWindow:f},null);const y=await this.monitorPopupForHash(f,t.popupWindowParent),E=Ie(Qr,l.DeserializeResponse,this.logger,this.performanceClient,this.correlationId)(y,this.config.auth.OIDCOptions.serverResponseType,this.logger);if(X.removeThrottle(this.browserStorage,this.config.auth.clientId,i),E.accountId){if(this.logger.verbose("Account id found in hash, calling WAM for token"),h&&h.end({success:!0,isNativeBroker:!0}),!this.nativeMessageHandler)throw C(ze);const M=new Oe(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,b.acquireTokenPopup,this.performanceClient,this.nativeMessageHandler,E.accountId,this.nativeStorage,o.correlationId),{userRequestState:x}=W.parseRequestState(this.browserCrypto,o.state);return await M.acquireToken({...o,state:x,prompt:void 0})}return await p.handleCodeResponse(E,o)}catch(i){throw(r=t.popup)==null||r.close(),i instanceof N&&(i.setCorrelationId(this.correlationId),n.cacheFailedRequest(i)),i}}async logoutPopupAsync(e,t,n,o){var i,s,c,h;this.logger.verbose("logoutPopupAsync called"),this.eventHandler.emitEvent(A.LOGOUT_START,T.Popup,e);const r=this.initializeServerTelemetryManager(b.logoutPopup);try{await this.clearCacheOnLogout(e.account);const d=await m(this.createAuthCodeClient.bind(this),l.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:r,requestAuthority:n,account:e.account||void 0});try{d.authority.endSessionEndpoint}catch{if((i=e.account)!=null&&i.homeAccountId&&e.postLogoutRedirectUri&&d.authority.protocolMode===ce.OIDC){if(this.browserStorage.removeAccount((s=e.account)==null?void 0:s.homeAccountId),this.eventHandler.emitEvent(A.LOGOUT_SUCCESS,T.Popup,e),o){const y={apiId:b.logoutPopup,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1},E=w.getAbsoluteUrl(o,se());await this.navigationClient.navigateInternal(E,y)}(c=t.popup)==null||c.close();return}}const p=d.getLogoutUri(e);this.eventHandler.emitEvent(A.LOGOUT_SUCCESS,T.Popup,e);const f=this.openPopup(p,t);if(this.eventHandler.emitEvent(A.POPUP_OPENED,T.Popup,{popupWindow:f},null),await this.monitorPopupForHash(f,t.popupWindowParent).catch(()=>{}),o){const y={apiId:b.logoutPopup,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1},E=w.getAbsoluteUrl(o,se());this.logger.verbose("Redirecting main window to url specified in the request"),this.logger.verbosePii(`Redirecting main window to: ${E}`),await this.navigationClient.navigateInternal(E,y)}else this.logger.verbose("No main window navigation requested")}catch(d){throw(h=t.popup)==null||h.close(),d instanceof N&&(d.setCorrelationId(this.correlationId),r.cacheFailedRequest(d)),this.browserStorage.setInteractionInProgress(!1),this.eventHandler.emitEvent(A.LOGOUT_FAILURE,T.Popup,null,d),this.eventHandler.emitEvent(A.LOGOUT_END,T.Popup),d}this.eventHandler.emitEvent(A.LOGOUT_END,T.Popup)}initiateAuthRequest(e,t){if(e)return this.logger.infoPii(`Navigate to: ${e}`),this.openPopup(e,t);throw this.logger.error("Navigate url is empty"),C(Tt)}monitorPopupForHash(e,t){return new Promise((n,o)=>{this.logger.verbose("PopupHandler.monitorPopupForHash - polling started");const r=setInterval(()=>{if(e.closed){this.logger.error("PopupHandler.monitorPopupForHash - window closed"),clearInterval(r),o(C(Te));return}let i="";try{i=e.location.href}catch{}if(!i||i==="about:blank")return;clearInterval(r);let s="";const c=this.config.auth.OIDCOptions.serverResponseType;e&&(c===qe.QUERY?s=e.location.search:s=e.location.hash),this.logger.verbose("PopupHandler.monitorPopupForHash - popup window is on same origin as caller"),n(s)},this.config.system.pollIntervalMilliseconds)}).finally(()=>{this.cleanPopup(e,t)})}openPopup(e,t){try{let n;if(t.popup?(n=t.popup,this.logger.verbosePii(`Navigating popup window to: ${e}`),n.location.assign(e)):typeof t.popup>"u"&&(this.logger.verbosePii(`Opening popup window to: ${e}`),n=this.openSizedPopup(e,t)),!n)throw C(dr);return n.focus&&n.focus(),this.currentWindow=n,t.popupWindowParent.addEventListener("beforeunload",this.unloadWindow),n}catch(n){throw this.logger.error("error opening popup "+n.message),this.browserStorage.setInteractionInProgress(!1),C(lr)}}openSizedPopup(e,{popupName:t,popupWindowAttributes:n,popupWindowParent:o}){var y,E,S,M;const r=o.screenLeft?o.screenLeft:o.screenX,i=o.screenTop?o.screenTop:o.screenY,s=o.innerWidth||document.documentElement.clientWidth||document.body.clientWidth,c=o.innerHeight||document.documentElement.clientHeight||document.body.clientHeight;let h=(y=n.popupSize)==null?void 0:y.width,d=(E=n.popupSize)==null?void 0:E.height,p=(S=n.popupPosition)==null?void 0:S.top,f=(M=n.popupPosition)==null?void 0:M.left;return(!h||h<0||h>s)&&(this.logger.verbose("Default popup window width used. Window width not configured or invalid."),h=z.POPUP_WIDTH),(!d||d<0||d>c)&&(this.logger.verbose("Default popup window height used. Window height not configured or invalid."),d=z.POPUP_HEIGHT),(!p||p<0||p>c)&&(this.logger.verbose("Default popup window top position used. Window top not configured or invalid."),p=Math.max(0,c/2-z.POPUP_HEIGHT/2+i)),(!f||f<0||f>s)&&(this.logger.verbose("Default popup window left position used. Window left not configured or invalid."),f=Math.max(0,s/2-z.POPUP_WIDTH/2+r)),o.open(e,t,`width=${h}, height=${d}, top=${p}, left=${f}, scrollbars=yes`)}unloadWindow(e){this.browserStorage.cleanRequestByInteractionType(T.Popup),this.currentWindow&&this.currentWindow.close(),e.preventDefault()}cleanPopup(e,t){e.close(),t.removeEventListener("beforeunload",this.unloadWindow),this.browserStorage.setInteractionInProgress(!1)}generatePopupName(e,t){return`${z.POPUP_NAME_PREFIX}.${this.config.auth.clientId}.${e.join("-")}.${t}.${this.correlationId}`}generateLogoutPopupName(e){const t=e.account&&e.account.homeAccountId;return`${z.POPUP_NAME_PREFIX}.${this.config.auth.clientId}.${t}.${this.correlationId}`}}/*! @azure/msal-browser v3.26.1 2024-10-08 */class ao{constructor(e,t,n,o,r){this.authModule=e,this.browserStorage=t,this.authCodeRequest=n,this.logger=o,this.performanceClient=r}async initiateAuthRequest(e,t){if(this.logger.verbose("RedirectHandler.initiateAuthRequest called"),e){t.redirectStartPage&&(this.logger.verbose("RedirectHandler.initiateAuthRequest: redirectStartPage set, caching start page"),this.browserStorage.setTemporaryCache(_.ORIGIN_URI,t.redirectStartPage,!0)),this.browserStorage.setTemporaryCache(_.CORRELATION_ID,this.authCodeRequest.correlationId,!0),this.browserStorage.cacheCodeRequest(this.authCodeRequest),this.logger.infoPii(`RedirectHandler.initiateAuthRequest: Navigate to: ${e}`);const n={apiId:b.acquireTokenRedirect,timeout:t.redirectTimeout,noHistory:!1};if(typeof t.onRedirectNavigate=="function")if(this.logger.verbose("RedirectHandler.initiateAuthRequest: Invoking onRedirectNavigate callback"),t.onRedirectNavigate(e)!==!1){this.logger.verbose("RedirectHandler.initiateAuthRequest: onRedirectNavigate did not return false, navigating"),await t.navigationClient.navigateExternal(e,n);return}else{this.logger.verbose("RedirectHandler.initiateAuthRequest: onRedirectNavigate returned false, stopping navigation");return}else{this.logger.verbose("RedirectHandler.initiateAuthRequest: Navigating window to navigate url"),await t.navigationClient.navigateExternal(e,n);return}}else throw this.logger.info("RedirectHandler.initiateAuthRequest: Navigate url is empty"),C(Tt)}async handleCodeResponse(e,t){this.logger.verbose("RedirectHandler.handleCodeResponse called"),this.browserStorage.setInteractionInProgress(!1);const n=this.browserStorage.generateStateKey(t),o=this.browserStorage.getTemporaryCache(n);if(!o)throw g(ot,"Cached State");let r;try{r=this.authModule.handleFragmentResponse(e,o)}catch(h){throw h instanceof me&&h.subError===Te?C(Te):h}const i=this.browserStorage.generateNonceKey(o),s=this.browserStorage.getTemporaryCache(i);if(this.authCodeRequest.code=r.code,r.cloud_instance_host_name&&await m(this.authModule.updateAuthority.bind(this.authModule),l.UpdateTokenEndpointAuthority,this.logger,this.performanceClient,this.authCodeRequest.correlationId)(r.cloud_instance_host_name,this.authCodeRequest.correlationId),r.nonce=s||void 0,r.state=o,r.client_info)this.authCodeRequest.clientInfo=r.client_info;else{const h=this.checkCcsCredentials();h&&(this.authCodeRequest.ccsCredential=h)}const c=await this.authModule.acquireToken(this.authCodeRequest,r);return this.browserStorage.cleanRequestByState(t),c}checkCcsCredentials(){const e=this.browserStorage.getTemporaryCache(_.CCS_CREDENTIAL,!0);if(e)try{return JSON.parse(e)}catch{this.authModule.logger.error("Cache credential could not be parsed"),this.authModule.logger.errorPii(`Cache credential could not be parsed: ${e}`)}return null}}/*! @azure/msal-browser v3.26.1 2024-10-08 */function oc(){if(typeof window>"u"||typeof window.performance>"u"||typeof window.performance.getEntriesByType!="function")return;const a=window.performance.getEntriesByType("navigation"),e=a.length?a[0]:void 0;return e==null?void 0:e.type}class rc extends De{constructor(e,t,n,o,r,i,s,c,h,d){super(e,t,n,o,r,i,s,h,d),this.nativeStorage=c}async acquireToken(e){const t=await m(this.initializeAuthorizationRequest.bind(this),l.StandardInteractionClientInitializeAuthorizationRequest,this.logger,this.performanceClient,this.correlationId)(e,T.Redirect);this.browserStorage.updateCacheEntries(t.state,t.nonce,t.authority,t.loginHint||"",t.account||null);const n=this.initializeServerTelemetryManager(b.acquireTokenRedirect),o=r=>{r.persisted&&(this.logger.verbose("Page was restored from back/forward cache. Clearing temporary cache."),this.browserStorage.cleanRequestByState(t.state),this.eventHandler.emitEvent(A.RESTORE_FROM_BFCACHE,T.Redirect))};try{const r=await m(this.initializeAuthorizationCodeRequest.bind(this),l.StandardInteractionClientInitializeAuthorizationCodeRequest,this.logger,this.performanceClient,this.correlationId)(t),i=await m(this.createAuthCodeClient.bind(this),l.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:n,requestAuthority:t.authority,requestAzureCloudOptions:t.azureCloudOptions,requestExtraQueryParameters:t.extraQueryParameters,account:t.account}),s=new ao(i,this.browserStorage,r,this.logger,this.performanceClient),c=await i.getAuthCodeUrl({...t,nativeBroker:te.isNativeAvailable(this.config,this.logger,this.nativeMessageHandler,e.authenticationScheme)}),h=this.getRedirectStartPage(e.redirectStartPage);return this.logger.verbosePii(`Redirect start page: ${h}`),window.addEventListener("pageshow",o),await s.initiateAuthRequest(c,{navigationClient:this.navigationClient,redirectTimeout:this.config.system.redirectNavigationTimeout,redirectStartPage:h,onRedirectNavigate:e.onRedirectNavigate||this.config.auth.onRedirectNavigate})}catch(r){throw r instanceof N&&(r.setCorrelationId(this.correlationId),n.cacheFailedRequest(r)),window.removeEventListener("pageshow",o),this.browserStorage.cleanRequestByState(t.state),r}}async handleRedirectPromise(e="",t){const n=this.initializeServerTelemetryManager(b.handleRedirectPromise);try{if(!this.browserStorage.isInteractionInProgress(!0))return this.logger.info("handleRedirectPromise called but there is no interaction in progress, returning null."),null;const[o,r]=this.getRedirectResponse(e||"");if(!o)return this.logger.info("handleRedirectPromise did not detect a response as a result of a redirect. Cleaning temporary cache."),this.browserStorage.cleanRequestByInteractionType(T.Redirect),oc()!=="back_forward"?t.event.errorCode="no_server_response":this.logger.verbose("Back navigation event detected. Muting no_server_response error"),null;const i=this.browserStorage.getTemporaryCache(_.ORIGIN_URI,!0)||u.EMPTY_STRING,s=w.removeHashFromUrl(i),c=w.removeHashFromUrl(window.location.href);if(s===c&&this.config.auth.navigateToLoginRequestUrl)return this.logger.verbose("Current page is loginRequestUrl, handling response"),i.indexOf("#")>-1&&fs(i),await this.handleResponse(o,n);if(this.config.auth.navigateToLoginRequestUrl){if(!Sn()||this.config.system.allowRedirectInIframe){this.browserStorage.setTemporaryCache(_.URL_HASH,r,!0);const h={apiId:b.handleRedirectPromise,timeout:this.config.system.redirectNavigationTimeout,noHistory:!0};let d=!0;if(!i||i==="null"){const p=Ts();this.browserStorage.setTemporaryCache(_.ORIGIN_URI,p,!0),this.logger.warning("Unable to get valid login request url from cache, redirecting to home page"),d=await this.navigationClient.navigateInternal(p,h)}else this.logger.verbose(`Navigating to loginRequestUrl: ${i}`),d=await this.navigationClient.navigateInternal(i,h);if(!d)return await this.handleResponse(o,n)}}else return this.logger.verbose("NavigateToLoginRequestUrl set to false, handling response"),await this.handleResponse(o,n);return null}catch(o){throw o instanceof N&&(o.setCorrelationId(this.correlationId),n.cacheFailedRequest(o)),this.browserStorage.cleanRequestByInteractionType(T.Redirect),o}}getRedirectResponse(e){this.logger.verbose("getRedirectResponseHash called");let t=e;t||(this.config.auth.OIDCOptions.serverResponseType===qe.QUERY?t=window.location.search:t=window.location.hash);let n=st(t);if(n){try{tc(n,this.browserCrypto,T.Redirect)}catch(r){return r instanceof N&&this.logger.error(`Interaction type validation failed due to ${r.errorCode}: ${r.errorMessage}`),[null,""]}return ms(window),this.logger.verbose("Hash contains known properties, returning response hash"),[n,t]}const o=this.browserStorage.getTemporaryCache(_.URL_HASH,!0);return this.browserStorage.removeItem(this.browserStorage.generateCacheKey(_.URL_HASH)),o&&(n=st(o),n)?(this.logger.verbose("Hash does not contain known properties, returning cached hash"),[n,o]):[null,""]}async handleResponse(e,t){const n=e.state;if(!n)throw C(mn);const o=this.browserStorage.getCachedRequest(n);if(this.logger.verbose("handleResponse called, retrieved cached request"),e.accountId){if(this.logger.verbose("Account id found in hash, calling WAM for token"),!this.nativeMessageHandler)throw C(ze);const c=new Oe(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,b.acquireTokenPopup,this.performanceClient,this.nativeMessageHandler,e.accountId,this.nativeStorage,o.correlationId),{userRequestState:h}=W.parseRequestState(this.browserCrypto,n);return c.acquireToken({...o,state:h,prompt:void 0}).finally(()=>{this.browserStorage.cleanRequestByState(n)})}const r=this.browserStorage.getCachedAuthority(n);if(!r)throw C(fn);const i=await m(this.createAuthCodeClient.bind(this),l.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:t,requestAuthority:r});return X.removeThrottle(this.browserStorage,this.config.auth.clientId,o),new ao(i,this.browserStorage,o,this.logger,this.performanceClient).handleCodeResponse(e,n)}async logout(e){var o,r;this.logger.verbose("logoutRedirect called");const t=this.initializeLogoutRequest(e),n=this.initializeServerTelemetryManager(b.logout);try{this.eventHandler.emitEvent(A.LOGOUT_START,T.Redirect,e),await this.clearCacheOnLogout(t.account);const i={apiId:b.logout,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1},s=await m(this.createAuthCodeClient.bind(this),l.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:n,requestAuthority:e&&e.authority,requestExtraQueryParameters:e==null?void 0:e.extraQueryParameters,account:e&&e.account||void 0});if(s.authority.protocolMode===ce.OIDC)try{s.authority.endSessionEndpoint}catch{if((o=t.account)!=null&&o.homeAccountId){this.browserStorage.removeAccount((r=t.account)==null?void 0:r.homeAccountId),this.eventHandler.emitEvent(A.LOGOUT_SUCCESS,T.Redirect,t);return}}const c=s.getLogoutUri(t);if(this.eventHandler.emitEvent(A.LOGOUT_SUCCESS,T.Redirect,t),e&&typeof e.onRedirectNavigate=="function")if(e.onRedirectNavigate(c)!==!1){this.logger.verbose("Logout onRedirectNavigate did not return false, navigating"),this.browserStorage.getInteractionInProgress()||this.browserStorage.setInteractionInProgress(!0),await this.navigationClient.navigateExternal(c,i);return}else this.browserStorage.setInteractionInProgress(!1),this.logger.verbose("Logout onRedirectNavigate returned false, stopping navigation");else{this.browserStorage.getInteractionInProgress()||this.browserStorage.setInteractionInProgress(!0),await this.navigationClient.navigateExternal(c,i);return}}catch(i){throw i instanceof N&&(i.setCorrelationId(this.correlationId),n.cacheFailedRequest(i)),this.eventHandler.emitEvent(A.LOGOUT_FAILURE,T.Redirect,null,i),this.eventHandler.emitEvent(A.LOGOUT_END,T.Redirect),i}this.eventHandler.emitEvent(A.LOGOUT_END,T.Redirect)}getRedirectStartPage(e){const t=e||window.location.href;return w.getAbsoluteUrl(t,se())}}/*! @azure/msal-browser v3.26.1 2024-10-08 */async function ic(a,e,t,n,o){if(e.addQueueMeasurement(l.SilentHandlerInitiateAuthRequest,n),!a)throw t.info("Navigate url is empty"),C(Tt);return o?m(sc,l.SilentHandlerLoadFrame,t,e,n)(a,o,e,n):Ie(cc,l.SilentHandlerLoadFrameSync,t,e,n)(a)}async function ac(a,e,t,n,o,r,i){return n.addQueueMeasurement(l.SilentHandlerMonitorIframeForHash,r),new Promise((s,c)=>{e<xt&&o.warning(`system.loadFrameTimeout or system.iframeHashTimeout set to lower (${e}ms) than the default (${xt}ms). This may result in timeouts.`);const h=window.setTimeout(()=>{window.clearInterval(d),c(C(ur))},e),d=window.setInterval(()=>{let p="";const f=a.contentWindow;try{p=f?f.location.href:""}catch{}if(!p||p==="about:blank")return;let y="";f&&(i===qe.QUERY?y=f.location.search:y=f.location.hash),window.clearTimeout(h),window.clearInterval(d),s(y)},t)}).finally(()=>{Ie(hc,l.RemoveHiddenIframe,o,n,r)(a)})}function sc(a,e,t,n){return t.addQueueMeasurement(l.SilentHandlerLoadFrame,n),new Promise((o,r)=>{const i=Yr();window.setTimeout(()=>{if(!i){r("Unable to load iframe");return}i.src=a,o(i)},e)})}function cc(a){const e=Yr();return e.src=a,e}function Yr(){const a=document.createElement("iframe");return a.className="msalSilentIframe",a.style.visibility="hidden",a.style.position="absolute",a.style.width=a.style.height="0",a.style.border="0",a.setAttribute("sandbox","allow-scripts allow-same-origin allow-forms"),document.body.appendChild(a),a}function hc(a){document.body===a.parentNode&&document.body.removeChild(a)}/*! @azure/msal-browser v3.26.1 2024-10-08 */class lc extends De{constructor(e,t,n,o,r,i,s,c,h,d,p){super(e,t,n,o,r,i,c,d,p),this.apiId=s,this.nativeStorage=h}async acquireToken(e){this.performanceClient.addQueueMeasurement(l.SilentIframeClientAcquireToken,e.correlationId),!e.loginHint&&!e.sid&&(!e.account||!e.account.username)&&this.logger.warning("No user hint provided. The authorization server may need more information to complete this request.");const t={...e};t.prompt?t.prompt!==D.NONE&&t.prompt!==D.NO_SESSION&&(this.logger.warning(`SilentIframeClient. Replacing invalid prompt ${t.prompt} with ${D.NONE}`),t.prompt=D.NONE):t.prompt=D.NONE;const n=await m(this.initializeAuthorizationRequest.bind(this),l.StandardInteractionClientInitializeAuthorizationRequest,this.logger,this.performanceClient,e.correlationId)(t,T.Silent);Gr(n.authority);const o=this.initializeServerTelemetryManager(this.apiId);let r;try{return r=await m(this.createAuthCodeClient.bind(this),l.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,e.correlationId)({serverTelemetryManager:o,requestAuthority:n.authority,requestAzureCloudOptions:n.azureCloudOptions,requestExtraQueryParameters:n.extraQueryParameters,account:n.account}),await m(this.silentTokenHelper.bind(this),l.SilentIframeClientTokenHelper,this.logger,this.performanceClient,e.correlationId)(r,n)}catch(i){if(i instanceof N&&(i.setCorrelationId(this.correlationId),o.cacheFailedRequest(i)),!r||!(i instanceof N)||i.errorCode!==z.INVALID_GRANT_ERROR)throw i;this.performanceClient.addFields({retryError:i.errorCode},this.correlationId);const s=await m(this.initializeAuthorizationRequest.bind(this),l.StandardInteractionClientInitializeAuthorizationRequest,this.logger,this.performanceClient,e.correlationId)(t,T.Silent);return await m(this.silentTokenHelper.bind(this),l.SilentIframeClientTokenHelper,this.logger,this.performanceClient,this.correlationId)(r,s)}}logout(){return Promise.reject(C(yt))}async silentTokenHelper(e,t){const n=t.correlationId;this.performanceClient.addQueueMeasurement(l.SilentIframeClientTokenHelper,n);const o=await m(this.initializeAuthorizationCodeRequest.bind(this),l.StandardInteractionClientInitializeAuthorizationCodeRequest,this.logger,this.performanceClient,n)(t),r=await m(e.getAuthCodeUrl.bind(e),l.GetAuthCodeUrl,this.logger,this.performanceClient,n)({...t,nativeBroker:te.isNativeAvailable(this.config,this.logger,this.nativeMessageHandler,t.authenticationScheme)}),i=new kn(e,this.browserStorage,o,this.logger,this.performanceClient),s=await m(ic,l.SilentHandlerInitiateAuthRequest,this.logger,this.performanceClient,n)(r,this.performanceClient,this.logger,n,this.config.system.navigateFrameWait),c=this.config.auth.OIDCOptions.serverResponseType,h=await m(ac,l.SilentHandlerMonitorIframeForHash,this.logger,this.performanceClient,n)(s,this.config.system.iframeHashTimeout,this.config.system.pollIntervalMilliseconds,this.performanceClient,this.logger,n,c),d=Ie(Qr,l.DeserializeResponse,this.logger,this.performanceClient,this.correlationId)(h,c,this.logger);if(d.accountId){if(this.logger.verbose("Account id found in hash, calling WAM for token"),!this.nativeMessageHandler)throw C(ze);const p=new Oe(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.apiId,this.performanceClient,this.nativeMessageHandler,d.accountId,this.browserStorage,n),{userRequestState:f}=W.parseRequestState(this.browserCrypto,t.state);return m(p.acquireToken.bind(p),l.NativeInteractionClientAcquireToken,this.logger,this.performanceClient,n)({...t,state:f,prompt:t.prompt||D.NONE})}return m(i.handleCodeResponse.bind(i),l.HandleCodeResponse,this.logger,this.performanceClient,n)(d,t)}}/*! @azure/msal-browser v3.26.1 2024-10-08 */class dc extends De{async acquireToken(e){this.performanceClient.addQueueMeasurement(l.SilentRefreshClientAcquireToken,e.correlationId);const t=await m(_n,l.InitializeBaseRequest,this.logger,this.performanceClient,e.correlationId)(e,this.config,this.performanceClient,this.logger),n={...e,...t};e.redirectUri&&(n.redirectUri=this.getRedirectUri(e.redirectUri));const o=this.initializeServerTelemetryManager(b.acquireTokenSilent_silentFlow),r=await this.createRefreshTokenClient({serverTelemetryManager:o,authorityUrl:n.authority,azureCloudOptions:n.azureCloudOptions,account:n.account});return m(r.acquireTokenByRefreshToken.bind(r),l.RefreshTokenClientAcquireTokenByRefreshToken,this.logger,this.performanceClient,e.correlationId)(n).catch(i=>{throw i.setCorrelationId(this.correlationId),o.cacheFailedRequest(i),i})}logout(){return Promise.reject(C(yt))}async createRefreshTokenClient(e){const t=await m(this.getClientConfiguration.bind(this),l.StandardInteractionClientGetClientConfiguration,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:e.serverTelemetryManager,requestAuthority:e.authorityUrl,requestAzureCloudOptions:e.azureCloudOptions,requestExtraQueryParameters:e.extraQueryParameters,account:e.account});return new Ht(t,this.performanceClient)}}/*! @azure/msal-browser v3.26.1 2024-10-08 */class uc{constructor(e,t,n,o){this.isBrowserEnvironment=typeof window<"u",this.config=e,this.storage=t,this.logger=n,this.cryptoObj=o}loadExternalTokens(e,t,n){if(!this.isBrowserEnvironment)throw C(Cn);const o=t.id_token?Ae(t.id_token,ne):void 0,r={protocolMode:this.config.auth.protocolMode,knownAuthorities:this.config.auth.knownAuthorities,cloudDiscoveryMetadata:this.config.auth.cloudDiscoveryMetadata,authorityMetadata:this.config.auth.authorityMetadata,skipAuthorityMetadataCache:this.config.auth.skipAuthorityMetadataCache},i=e.authority?new B(B.generateAuthority(e.authority,e.azureCloudOptions),this.config.system.networkClient,this.storage,r,this.logger,e.correlationId||he()):void 0,s=this.loadAccount(e,n.clientInfo||t.client_info||"",o,i),c=this.loadIdToken(t,s.homeAccountId,s.environment,s.realm),h=this.loadAccessToken(e,t,s.homeAccountId,s.environment,s.realm,n),d=this.loadRefreshToken(t,s.homeAccountId,s.environment);return this.generateAuthenticationResult(e,{account:s,idToken:c,accessToken:h,refreshToken:d},o,i)}loadAccount(e,t,n,o){if(this.logger.verbose("TokenCache - loading account"),e.account){const c=L.createFromAccountInfo(e.account);return this.storage.setAccount(c),c}else if(!o||!t&&!n)throw this.logger.error("TokenCache - if an account is not provided on the request, authority and either clientInfo or idToken must be provided instead."),C(Ir);const r=L.generateHomeAccountId(t,o.authorityType,this.logger,this.cryptoObj,n),i=n==null?void 0:n.tid,s=dn(this.storage,o,r,ne,n,t,o.hostnameAndPort,i,void 0,void 0,this.logger);return this.storage.setAccount(s),s}loadIdToken(e,t,n,o){if(!e.id_token)return this.logger.verbose("TokenCache - no id token found in response"),null;this.logger.verbose("TokenCache - loading id token");const r=gt(t,n,e.id_token,this.config.auth.clientId,o);return this.storage.setIdTokenCredential(r),r}loadAccessToken(e,t,n,o,r,i){if(t.access_token)if(t.expires_in){if(!t.scope&&(!e.scopes||!e.scopes.length))return this.logger.error("TokenCache - scopes not specified in the request or response. Cannot add token to the cache."),null}else return this.logger.error("TokenCache - no expiration set on the access token. Cannot add it to the cache."),null;else return this.logger.verbose("TokenCache - no access token found in response"),null;this.logger.verbose("TokenCache - loading access token");const s=t.scope?P.fromString(t.scope):new P(e.scopes),c=i.expiresOn||t.expires_in+new Date().getTime()/1e3,h=i.extendedExpiresOn||(t.ext_expires_in||t.expires_in)+new Date().getTime()/1e3,d=pt(n,o,t.access_token,this.config.auth.clientId,r,s.printScopes(),c,h,ne);return this.storage.setAccessTokenCredential(d),d}loadRefreshToken(e,t,n){if(!e.refresh_token)return this.logger.verbose("TokenCache - no refresh token found in response"),null;this.logger.verbose("TokenCache - loading refresh token");const o=bo(t,n,e.refresh_token,this.config.auth.clientId,e.foci,void 0,e.refresh_token_expires_in);return this.storage.setRefreshTokenCredential(o),o}generateAuthenticationResult(e,t,n,o){var d,p,f;let r="",i=[],s=null,c;t!=null&&t.accessToken&&(r=t.accessToken.secret,i=P.fromString(t.accessToken.target).asArray(),s=new Date(Number(t.accessToken.expiresOn)*1e3),c=new Date(Number(t.accessToken.extendedExpiresOn)*1e3));const h=t.account;return{authority:o?o.canonicalAuthority:"",uniqueId:t.account.localAccountId,tenantId:t.account.realm,scopes:i,account:h.getAccountInfo(),idToken:((d=t.idToken)==null?void 0:d.secret)||"",idTokenClaims:n||{},accessToken:r,fromCache:!0,expiresOn:s,correlationId:e.correlationId||"",requestId:"",extExpiresOn:c,familyId:((p=t.refreshToken)==null?void 0:p.familyId)||"",tokenType:((f=t==null?void 0:t.accessToken)==null?void 0:f.tokenType)||"",state:e.state||"",cloudGraphHostName:h.cloudGraphHostName||"",msGraphHost:h.msGraphHost||"",fromNativeBroker:!1}}}/*! @azure/msal-browser v3.26.1 2024-10-08 */class gc extends er{constructor(e){super(e),this.includeRedirectUri=!1}}/*! @azure/msal-browser v3.26.1 2024-10-08 */class pc extends De{constructor(e,t,n,o,r,i,s,c,h,d){super(e,t,n,o,r,i,c,h,d),this.apiId=s}async acquireToken(e){if(!e.code)throw C(Er);const t=await m(this.initializeAuthorizationRequest.bind(this),l.StandardInteractionClientInitializeAuthorizationRequest,this.logger,this.performanceClient,e.correlationId)(e,T.Silent),n=this.initializeServerTelemetryManager(this.apiId);try{const o={...t,code:e.code},r=await m(this.getClientConfiguration.bind(this),l.StandardInteractionClientGetClientConfiguration,this.logger,this.performanceClient,e.correlationId)({serverTelemetryManager:n,requestAuthority:t.authority,requestAzureCloudOptions:t.azureCloudOptions,requestExtraQueryParameters:t.extraQueryParameters,account:t.account}),i=new gc(r);this.logger.verbose("Auth code client created");const s=new kn(i,this.browserStorage,o,this.logger,this.performanceClient);return await m(s.handleCodeResponseFromServer.bind(s),l.HandleCodeResponseFromServer,this.logger,this.performanceClient,e.correlationId)({code:e.code,msgraph_host:e.msGraphHost,cloud_graph_host_name:e.cloudGraphHostName,cloud_instance_host_name:e.cloudInstanceHostName},t,!1)}catch(o){throw o instanceof N&&(o.setCorrelationId(this.correlationId),n.cacheFailedRequest(o)),o}}logout(){return Promise.reject(C(yt))}}/*! @azure/msal-browser v3.26.1 2024-10-08 */function J(a){const e=a==null?void 0:a.idTokenClaims;if(e!=null&&e.tfp||e!=null&&e.acr)return"B2C";if(e!=null&&e.tid){if((e==null?void 0:e.tid)==="9188040d-6c67-4c5b-b112-36a304b66dad")return"MSA"}else return;return"AAD"}function tt(a,e){try{vn(a)}catch(t){throw e.end({success:!1},t),t}}class Et{constructor(e){this.operatingContext=e,this.isBrowserEnvironment=this.operatingContext.isBrowserEnvironment(),this.config=e.getConfig(),this.initialized=!1,this.logger=this.operatingContext.getLogger(),this.networkClient=this.config.system.networkClient,this.navigationClient=this.config.system.navigationClient,this.redirectResponse=new Map,this.hybridAuthCodeResponses=new Map,this.performanceClient=this.config.telemetry.client,this.browserCrypto=this.isBrowserEnvironment?new Le(this.logger,this.performanceClient):rt,this.eventHandler=new Bs(this.logger),this.browserStorage=this.isBrowserEnvironment?new Ft(this.config.auth.clientId,this.config.cache,this.browserCrypto,this.logger,Pa(this.config.auth),this.performanceClient):Ps(this.config.auth.clientId,this.logger);const t={cacheLocation:U.MemoryStorage,temporaryCacheLocation:U.MemoryStorage,storeAuthStateInCookie:!1,secureCookies:!1,cacheMigrationEnabled:!1,claimsBasedCachingEnabled:!1};this.nativeInternalStorage=new Ft(this.config.auth.clientId,t,this.browserCrypto,this.logger,void 0,this.performanceClient),this.tokenCache=new uc(this.config,this.browserStorage,this.logger,this.browserCrypto),this.activeSilentTokenRequests=new Map,this.trackPageVisibility=this.trackPageVisibility.bind(this),this.trackPageVisibilityWithMeasurement=this.trackPageVisibilityWithMeasurement.bind(this),this.listeningToStorageEvents=!1,this.handleAccountCacheChange=this.handleAccountCacheChange.bind(this)}static async createController(e,t){const n=new Et(e);return await n.initialize(t),n}trackPageVisibility(e){e&&(this.logger.info("Perf: Visibility change detected"),this.performanceClient.incrementFields({visibilityChangeCount:1},e))}async initialize(e){if(this.logger.trace("initialize called"),this.initialized){this.logger.info("initialize has already been called, exiting early.");return}if(!this.isBrowserEnvironment){this.logger.info("in non-browser environment, exiting early."),this.initialized=!0,this.eventHandler.emitEvent(A.INITIALIZE_END);return}const t=(e==null?void 0:e.correlationId)||this.getRequestCorrelationId(),n=this.config.system.allowNativeBroker,o=this.performanceClient.startMeasurement(l.InitializeClientApplication,t);if(this.eventHandler.emitEvent(A.INITIALIZE_START),n)try{this.nativeExtensionProvider=await te.createProvider(this.logger,this.config.system.nativeBrokerHandshakeTimeout,this.performanceClient)}catch(r){this.logger.verbose(r)}this.config.cache.claimsBasedCachingEnabled||(this.logger.verbose("Claims-based caching is disabled. Clearing the previous cache with claims"),await m(this.browserStorage.clearTokensAndKeysWithClaims.bind(this.browserStorage),l.ClearTokensAndKeysWithClaims,this.logger,this.performanceClient,t)(this.performanceClient,t)),this.initialized=!0,this.eventHandler.emitEvent(A.INITIALIZE_END),o.end({allowNativeBroker:n,success:!0})}async handleRedirectPromise(e){if(this.logger.verbose("handleRedirectPromise called"),Fr(this.initialized),this.isBrowserEnvironment){const t=e||"";let n=this.redirectResponse.get(t);return typeof n>"u"?(n=this.handleRedirectPromiseInternal(e),this.redirectResponse.set(t,n),this.logger.verbose("handleRedirectPromise has been called for the first time, storing the promise")):this.logger.verbose("handleRedirectPromise has been called previously, returning the result from the first call"),n}return this.logger.verbose("handleRedirectPromise returns null, not browser environment"),null}async handleRedirectPromiseInternal(e){const t=this.getAllAccounts(),n=this.browserStorage.getCachedNativeRequest(),o=n&&te.isNativeAvailable(this.config,this.logger,this.nativeExtensionProvider)&&this.nativeExtensionProvider&&!e,r=o?n==null?void 0:n.correlationId:this.browserStorage.getTemporaryCache(_.CORRELATION_ID,!0)||"",i=this.performanceClient.startMeasurement(l.AcquireTokenRedirect,r);this.eventHandler.emitEvent(A.HANDLE_REDIRECT_START,T.Redirect);let s;if(o&&this.nativeExtensionProvider){this.logger.trace("handleRedirectPromise - acquiring token from native platform");const c=new Oe(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,b.handleRedirectPromise,this.performanceClient,this.nativeExtensionProvider,n.accountId,this.nativeInternalStorage,n.correlationId);s=m(c.handleRedirectPromise.bind(c),l.HandleNativeRedirectPromiseMeasurement,this.logger,this.performanceClient,i.event.correlationId)(this.performanceClient,i.event.correlationId)}else{this.logger.trace("handleRedirectPromise - acquiring token from web flow");const c=this.createRedirectClient(r);s=m(c.handleRedirectPromise.bind(c),l.HandleRedirectPromiseMeasurement,this.logger,this.performanceClient,i.event.correlationId)(e,i)}return s.then(c=>(c?(t.length<this.getAllAccounts().length?(this.eventHandler.emitEvent(A.LOGIN_SUCCESS,T.Redirect,c),this.logger.verbose("handleRedirectResponse returned result, login success")):(this.eventHandler.emitEvent(A.ACQUIRE_TOKEN_SUCCESS,T.Redirect,c),this.logger.verbose("handleRedirectResponse returned result, acquire token success")),i.end({success:!0,accountType:J(c.account)})):i.event.errorCode?i.end({success:!1}):i.discard(),this.eventHandler.emitEvent(A.HANDLE_REDIRECT_END,T.Redirect),c)).catch(c=>{const h=c;throw t.length>0?this.eventHandler.emitEvent(A.ACQUIRE_TOKEN_FAILURE,T.Redirect,null,h):this.eventHandler.emitEvent(A.LOGIN_FAILURE,T.Redirect,null,h),this.eventHandler.emitEvent(A.HANDLE_REDIRECT_END,T.Redirect),i.end({success:!1},h),c})}async acquireTokenRedirect(e){const t=this.getRequestCorrelationId(e);this.logger.verbose("acquireTokenRedirect called",t);const n=this.performanceClient.startMeasurement(l.AcquireTokenPreRedirect,t);n.add({accountType:J(e.account),scenarioId:e.scenarioId});const o=e.onRedirectNavigate;if(o)e.onRedirectNavigate=i=>{const s=typeof o=="function"?o(i):void 0;return s!==!1?n.end({success:!0}):n.discard(),s};else{const i=this.config.auth.onRedirectNavigate;this.config.auth.onRedirectNavigate=s=>{const c=typeof i=="function"?i(s):void 0;return c!==!1?n.end({success:!0}):n.discard(),c}}const r=this.getAllAccounts().length>0;try{oo(this.initialized,this.config),this.browserStorage.setInteractionInProgress(!0),r?this.eventHandler.emitEvent(A.ACQUIRE_TOKEN_START,T.Redirect,e):this.eventHandler.emitEvent(A.LOGIN_START,T.Redirect,e);let i;return this.nativeExtensionProvider&&this.canUseNative(e)?i=new Oe(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,b.acquireTokenRedirect,this.performanceClient,this.nativeExtensionProvider,this.getNativeAccountId(e),this.nativeInternalStorage,t).acquireTokenRedirect(e,n).catch(c=>{if(c instanceof Z&&we(c))return this.nativeExtensionProvider=void 0,this.createRedirectClient(t).acquireToken(e);if(c instanceof j)return this.logger.verbose("acquireTokenRedirect - Resolving interaction required error thrown by native broker by falling back to web flow"),this.createRedirectClient(t).acquireToken(e);throw this.browserStorage.setInteractionInProgress(!1),c}):i=this.createRedirectClient(t).acquireToken(e),await i}catch(i){throw n.end({success:!1},i),r?this.eventHandler.emitEvent(A.ACQUIRE_TOKEN_FAILURE,T.Redirect,null,i):this.eventHandler.emitEvent(A.LOGIN_FAILURE,T.Redirect,null,i),i}}acquireTokenPopup(e){const t=this.getRequestCorrelationId(e),n=this.performanceClient.startMeasurement(l.AcquireTokenPopup,t);n.add({scenarioId:e.scenarioId,accountType:J(e.account)});try{this.logger.verbose("acquireTokenPopup called",t),tt(this.initialized,n),this.browserStorage.setInteractionInProgress(!0)}catch(i){return Promise.reject(i)}const o=this.getAllAccounts();o.length>0?this.eventHandler.emitEvent(A.ACQUIRE_TOKEN_START,T.Popup,e):this.eventHandler.emitEvent(A.LOGIN_START,T.Popup,e);let r;return this.canUseNative(e)?r=this.acquireTokenNative({...e,correlationId:t},b.acquireTokenPopup).then(i=>(this.browserStorage.setInteractionInProgress(!1),n.end({success:!0,isNativeBroker:!0,requestId:i.requestId,accountType:J(i.account)}),i)).catch(i=>{if(i instanceof Z&&we(i))return this.nativeExtensionProvider=void 0,this.createPopupClient(t).acquireToken(e);if(i instanceof j)return this.logger.verbose("acquireTokenPopup - Resolving interaction required error thrown by native broker by falling back to web flow"),this.createPopupClient(t).acquireToken(e);throw this.browserStorage.setInteractionInProgress(!1),i}):r=this.createPopupClient(t).acquireToken(e),r.then(i=>(o.length<this.getAllAccounts().length?this.eventHandler.emitEvent(A.LOGIN_SUCCESS,T.Popup,i):this.eventHandler.emitEvent(A.ACQUIRE_TOKEN_SUCCESS,T.Popup,i),n.end({success:!0,requestId:i.requestId,accessTokenSize:i.accessToken.length,idTokenSize:i.idToken.length,accountType:J(i.account)}),i)).catch(i=>(o.length>0?this.eventHandler.emitEvent(A.ACQUIRE_TOKEN_FAILURE,T.Popup,null,i):this.eventHandler.emitEvent(A.LOGIN_FAILURE,T.Popup,null,i),n.end({success:!1},i),Promise.reject(i)))}trackPageVisibilityWithMeasurement(){const e=this.ssoSilentMeasurement||this.acquireTokenByCodeAsyncMeasurement;e&&(this.logger.info("Perf: Visibility change detected in ",e.event.name),e.increment({visibilityChangeCount:1}))}async ssoSilent(e){var r,i;const t=this.getRequestCorrelationId(e),n={...e,prompt:e.prompt,correlationId:t};this.ssoSilentMeasurement=this.performanceClient.startMeasurement(l.SsoSilent,t),(r=this.ssoSilentMeasurement)==null||r.add({scenarioId:e.scenarioId,accountType:J(e.account)}),tt(this.initialized,this.ssoSilentMeasurement),(i=this.ssoSilentMeasurement)==null||i.increment({visibilityChangeCount:0}),document.addEventListener("visibilitychange",this.trackPageVisibilityWithMeasurement),this.logger.verbose("ssoSilent called",t),this.eventHandler.emitEvent(A.SSO_SILENT_START,T.Silent,n);let o;return this.canUseNative(n)?o=this.acquireTokenNative(n,b.ssoSilent).catch(s=>{if(s instanceof Z&&we(s))return this.nativeExtensionProvider=void 0,this.createSilentIframeClient(n.correlationId).acquireToken(n);throw s}):o=this.createSilentIframeClient(n.correlationId).acquireToken(n),o.then(s=>{var c;return this.eventHandler.emitEvent(A.SSO_SILENT_SUCCESS,T.Silent,s),(c=this.ssoSilentMeasurement)==null||c.end({success:!0,isNativeBroker:s.fromNativeBroker,requestId:s.requestId,accessTokenSize:s.accessToken.length,idTokenSize:s.idToken.length,accountType:J(s.account)}),s}).catch(s=>{var c;throw this.eventHandler.emitEvent(A.SSO_SILENT_FAILURE,T.Silent,null,s),(c=this.ssoSilentMeasurement)==null||c.end({success:!1},s),s}).finally(()=>{document.removeEventListener("visibilitychange",this.trackPageVisibilityWithMeasurement)})}async acquireTokenByCode(e){const t=this.getRequestCorrelationId(e);this.logger.trace("acquireTokenByCode called",t);const n=this.performanceClient.startMeasurement(l.AcquireTokenByCode,t);tt(this.initialized,n),this.eventHandler.emitEvent(A.ACQUIRE_TOKEN_BY_CODE_START,T.Silent,e),n.add({scenarioId:e.scenarioId});try{if(e.code&&e.nativeAccountId)throw C(vr);if(e.code){const o=e.code;let r=this.hybridAuthCodeResponses.get(o);return r?(this.logger.verbose("Existing acquireTokenByCode request found",t),n.discard()):(this.logger.verbose("Initiating new acquireTokenByCode request",t),r=this.acquireTokenByCodeAsync({...e,correlationId:t}).then(i=>(this.eventHandler.emitEvent(A.ACQUIRE_TOKEN_BY_CODE_SUCCESS,T.Silent,i),this.hybridAuthCodeResponses.delete(o),n.end({success:!0,isNativeBroker:i.fromNativeBroker,requestId:i.requestId,accessTokenSize:i.accessToken.length,idTokenSize:i.idToken.length,accountType:J(i.account)}),i)).catch(i=>{throw this.hybridAuthCodeResponses.delete(o),this.eventHandler.emitEvent(A.ACQUIRE_TOKEN_BY_CODE_FAILURE,T.Silent,null,i),n.end({success:!1},i),i}),this.hybridAuthCodeResponses.set(o,r)),await r}else if(e.nativeAccountId)if(this.canUseNative(e,e.nativeAccountId)){const o=await this.acquireTokenNative({...e,correlationId:t},b.acquireTokenByCode,e.nativeAccountId).catch(r=>{throw r instanceof Z&&we(r)&&(this.nativeExtensionProvider=void 0),r});return n.end({accountType:J(o.account),success:!0}),o}else throw C(wr);else throw C(Sr)}catch(o){throw this.eventHandler.emitEvent(A.ACQUIRE_TOKEN_BY_CODE_FAILURE,T.Silent,null,o),n.end({success:!1},o),o}}async acquireTokenByCodeAsync(e){var o;return this.logger.trace("acquireTokenByCodeAsync called",e.correlationId),this.acquireTokenByCodeAsyncMeasurement=this.performanceClient.startMeasurement(l.AcquireTokenByCodeAsync,e.correlationId),(o=this.acquireTokenByCodeAsyncMeasurement)==null||o.increment({visibilityChangeCount:0}),document.addEventListener("visibilitychange",this.trackPageVisibilityWithMeasurement),await this.createSilentAuthCodeClient(e.correlationId).acquireToken(e).then(r=>{var i;return(i=this.acquireTokenByCodeAsyncMeasurement)==null||i.end({success:!0,fromCache:r.fromCache,isNativeBroker:r.fromNativeBroker,requestId:r.requestId}),r}).catch(r=>{var i;throw(i=this.acquireTokenByCodeAsyncMeasurement)==null||i.end({success:!1},r),r}).finally(()=>{document.removeEventListener("visibilitychange",this.trackPageVisibilityWithMeasurement)})}async acquireTokenFromCache(e,t){switch(this.performanceClient.addQueueMeasurement(l.AcquireTokenFromCache,e.correlationId),t){case q.Default:case q.AccessToken:case q.AccessTokenAndRefreshToken:const n=this.createSilentCacheClient(e.correlationId);return m(n.acquireToken.bind(n),l.SilentCacheClientAcquireToken,this.logger,this.performanceClient,e.correlationId)(e);default:throw g(ae)}}async acquireTokenByRefreshToken(e,t){switch(this.performanceClient.addQueueMeasurement(l.AcquireTokenByRefreshToken,e.correlationId),t){case q.Default:case q.AccessTokenAndRefreshToken:case q.RefreshToken:case q.RefreshTokenAndNetwork:const n=this.createSilentRefreshClient(e.correlationId);return m(n.acquireToken.bind(n),l.SilentRefreshClientAcquireToken,this.logger,this.performanceClient,e.correlationId)(e);default:throw g(ae)}}async acquireTokenBySilentIframe(e){this.performanceClient.addQueueMeasurement(l.AcquireTokenBySilentIframe,e.correlationId);const t=this.createSilentIframeClient(e.correlationId);return m(t.acquireToken.bind(t),l.SilentIframeClientAcquireToken,this.logger,this.performanceClient,e.correlationId)(e)}async logout(e){const t=this.getRequestCorrelationId(e);return this.logger.warning("logout API is deprecated and will be removed in msal-browser v3.0.0. Use logoutRedirect instead.",t),this.logoutRedirect({correlationId:t,...e})}async logoutRedirect(e){const t=this.getRequestCorrelationId(e);return oo(this.initialized,this.config),this.browserStorage.setInteractionInProgress(!0),this.createRedirectClient(t).logout(e)}logoutPopup(e){try{const t=this.getRequestCorrelationId(e);return vn(this.initialized),this.browserStorage.setInteractionInProgress(!0),this.createPopupClient(t).logout(e)}catch(t){return Promise.reject(t)}}async clearCache(e){if(!this.isBrowserEnvironment){this.logger.info("in non-browser environment, returning early.");return}const t=this.getRequestCorrelationId(e);return this.createSilentCacheClient(t).logout(e)}getAllAccounts(e){return Ms(this.logger,this.browserStorage,this.isBrowserEnvironment,e)}getAccount(e){return Us(e,this.logger,this.browserStorage)}getAccountByUsername(e){return Ls(e,this.logger,this.browserStorage)}getAccountByHomeId(e){return Hs(e,this.logger,this.browserStorage)}getAccountByLocalId(e){return Ds(e,this.logger,this.browserStorage)}setActiveAccount(e){Ks(e,this.browserStorage)}getActiveAccount(){return xs(this.browserStorage)}async hydrateCache(e,t){this.logger.verbose("hydrateCache called");const n=L.createFromAccountInfo(e.account,e.cloudGraphHostName,e.msGraphHost);return this.browserStorage.setAccount(n),e.fromNativeBroker?(this.logger.verbose("Response was from native broker, storing in-memory"),this.nativeInternalStorage.hydrateCache(e,t)):this.browserStorage.hydrateCache(e,t)}async acquireTokenNative(e,t,n){if(this.logger.trace("acquireTokenNative called"),!this.nativeExtensionProvider)throw C(ze);return new Oe(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,t,this.performanceClient,this.nativeExtensionProvider,n||this.getNativeAccountId(e),this.nativeInternalStorage,e.correlationId).acquireToken(e)}canUseNative(e,t){if(this.logger.trace("canUseNative called"),!te.isNativeAvailable(this.config,this.logger,this.nativeExtensionProvider,e.authenticationScheme))return this.logger.trace("canUseNative: isNativeAvailable returned false, returning false"),!1;if(e.prompt)switch(e.prompt){case D.NONE:case D.CONSENT:case D.LOGIN:this.logger.trace("canUseNative: prompt is compatible with native flow");break;default:return this.logger.trace(`canUseNative: prompt = ${e.prompt} is not compatible with native flow, returning false`),!1}return!t&&!this.getNativeAccountId(e)?(this.logger.trace("canUseNative: nativeAccountId is not available, returning false"),!1):!0}getNativeAccountId(e){const t=e.account||this.getAccount({loginHint:e.loginHint,sid:e.sid})||this.getActiveAccount();return t&&t.nativeAccountId||""}createPopupClient(e){return new nc(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.performanceClient,this.nativeInternalStorage,this.nativeExtensionProvider,e)}createRedirectClient(e){return new rc(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.performanceClient,this.nativeInternalStorage,this.nativeExtensionProvider,e)}createSilentIframeClient(e){return new lc(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,b.ssoSilent,this.performanceClient,this.nativeInternalStorage,this.nativeExtensionProvider,e)}createSilentCacheClient(e){return new Vr(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.performanceClient,this.nativeExtensionProvider,e)}createSilentRefreshClient(e){return new dc(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.performanceClient,this.nativeExtensionProvider,e)}createSilentAuthCodeClient(e){return new pc(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,b.acquireTokenByCode,this.performanceClient,this.nativeExtensionProvider,e)}addEventCallback(e,t){return this.eventHandler.addEventCallback(e,t)}removeEventCallback(e){this.eventHandler.removeEventCallback(e)}addPerformanceCallback(e){return Br(),this.performanceClient.addPerformanceCallback(e)}removePerformanceCallback(e){return this.performanceClient.removePerformanceCallback(e)}enableAccountStorageEvents(){typeof window>"u"||(this.listeningToStorageEvents?this.logger.verbose("Account storage listener already registered."):(this.logger.verbose("Adding account storage listener."),this.listeningToStorageEvents=!0,window.addEventListener("storage",this.handleAccountCacheChange)))}disableAccountStorageEvents(){typeof window>"u"||(this.listeningToStorageEvents?(this.logger.verbose("Removing account storage listener."),window.removeEventListener("storage",this.handleAccountCacheChange),this.listeningToStorageEvents=!1):this.logger.verbose("No account storage listener registered."))}handleAccountCacheChange(e){var t;try{(t=e.key)!=null&&t.includes(H.ACTIVE_ACCOUNT_FILTERS)&&this.eventHandler.emitEvent(A.ACTIVE_ACCOUNT_CHANGED);const n=e.newValue||e.oldValue;if(!n)return;const o=JSON.parse(n);if(typeof o!="object"||!L.isAccountEntity(o))return;const i=Pe.toObject(new L,o).getAccountInfo();!e.oldValue&&e.newValue?(this.logger.info("Account was added to cache in a different window"),this.eventHandler.emitEvent(A.ACCOUNT_ADDED,void 0,i)):!e.newValue&&e.oldValue&&(this.logger.info("Account was removed from cache in a different window"),this.eventHandler.emitEvent(A.ACCOUNT_REMOVED,void 0,i))}catch{return}}getTokenCache(){return this.tokenCache}getLogger(){return this.logger}setLogger(e){this.logger=e}initializeWrapperLibrary(e,t){this.browserStorage.setWrapperMetadata(e,t)}setNavigationClient(e){this.navigationClient=e}getConfiguration(){return this.config}getPerformanceClient(){return this.performanceClient}isBrowserEnv(){return this.isBrowserEnvironment}getRequestCorrelationId(e){return e!=null&&e.correlationId?e.correlationId:this.isBrowserEnvironment?he():u.EMPTY_STRING}async loginRedirect(e){const t=this.getRequestCorrelationId(e);return this.logger.verbose("loginRedirect called",t),this.acquireTokenRedirect({correlationId:t,...e||eo})}loginPopup(e){const t=this.getRequestCorrelationId(e);return this.logger.verbose("loginPopup called",t),this.acquireTokenPopup({correlationId:t,...e||eo})}async acquireTokenSilent(e){const t=this.getRequestCorrelationId(e),n=this.performanceClient.startMeasurement(l.AcquireTokenSilent,t);n.add({cacheLookupPolicy:e.cacheLookupPolicy,scenarioId:e.scenarioId}),tt(this.initialized,n),this.logger.verbose("acquireTokenSilent called",t);const o=e.account||this.getActiveAccount();if(!o)throw C(fr);n.add({accountType:J(o)});const r={clientId:this.config.auth.clientId,authority:e.authority||u.EMPTY_STRING,scopes:e.scopes,homeAccountIdentifier:o.homeAccountId,claims:e.claims,authenticationScheme:e.authenticationScheme,resourceRequestMethod:e.resourceRequestMethod,resourceRequestUri:e.resourceRequestUri,shrClaims:e.shrClaims,sshKid:e.sshKid,shrOptions:e.shrOptions},i=JSON.stringify(r),s=this.activeSilentTokenRequests.get(i);if(typeof s>"u"){this.logger.verbose("acquireTokenSilent called for the first time, storing active request",t);const c=m(this.acquireTokenSilentAsync.bind(this),l.AcquireTokenSilentAsync,this.logger,this.performanceClient,t)({...e,correlationId:t},o).then(h=>(this.activeSilentTokenRequests.delete(i),n.end({success:!0,fromCache:h.fromCache,isNativeBroker:h.fromNativeBroker,cacheLookupPolicy:e.cacheLookupPolicy,requestId:h.requestId,accessTokenSize:h.accessToken.length,idTokenSize:h.idToken.length}),h)).catch(h=>{throw this.activeSilentTokenRequests.delete(i),n.end({success:!1},h),h});return this.activeSilentTokenRequests.set(i,c),{...await c,state:e.state}}else return this.logger.verbose("acquireTokenSilent has been called previously, returning the result from the first call",t),n.discard(),{...await s,state:e.state}}async acquireTokenSilentAsync(e,t){const n=()=>this.trackPageVisibility(e.correlationId);this.performanceClient.addQueueMeasurement(l.AcquireTokenSilentAsync,e.correlationId),this.eventHandler.emitEvent(A.ACQUIRE_TOKEN_START,T.Silent,e),e.correlationId&&this.performanceClient.incrementFields({visibilityChangeCount:0},e.correlationId),document.addEventListener("visibilitychange",n);const o=await m($s,l.InitializeSilentRequest,this.logger,this.performanceClient,e.correlationId)(e,t,this.config,this.performanceClient,this.logger),r=e.cacheLookupPolicy||q.Default;return this.acquireTokenSilentNoIframe(o,r).catch(async s=>{if(mc(s,r))if(this.activeIframeRequest)if(r!==q.Skip){const[h,d]=this.activeIframeRequest;this.logger.verbose(`Iframe request is already in progress, awaiting resolution for request with correlationId: ${d}`,o.correlationId);const p=this.performanceClient.startMeasurement(l.AwaitConcurrentIframe,o.correlationId);p.add({awaitIframeCorrelationId:d});const f=await h;if(p.end({success:f}),f)return this.logger.verbose(`Parallel iframe request with correlationId: ${d} succeeded. Retrying cache and/or RT redemption`,o.correlationId),this.acquireTokenSilentNoIframe(o,r);throw this.logger.info(`Iframe request with correlationId: ${d} failed. Interaction is required.`),s}else return this.logger.warning("Another iframe request is currently in progress and CacheLookupPolicy is set to Skip. This may result in degraded performance and/or reliability for both calls. Please consider changing the CacheLookupPolicy to take advantage of request queuing and token cache.",o.correlationId),m(this.acquireTokenBySilentIframe.bind(this),l.AcquireTokenBySilentIframe,this.logger,this.performanceClient,o.correlationId)(o);else{let h;return this.activeIframeRequest=[new Promise(d=>{h=d}),o.correlationId],this.logger.verbose("Refresh token expired/invalid or CacheLookupPolicy is set to Skip, attempting acquire token by iframe.",o.correlationId),m(this.acquireTokenBySilentIframe.bind(this),l.AcquireTokenBySilentIframe,this.logger,this.performanceClient,o.correlationId)(o).then(d=>(h(!0),d)).catch(d=>{throw h(!1),d}).finally(()=>{this.activeIframeRequest=void 0})}else throw s}).then(s=>(this.eventHandler.emitEvent(A.ACQUIRE_TOKEN_SUCCESS,T.Silent,s),e.correlationId&&this.performanceClient.addFields({fromCache:s.fromCache,isNativeBroker:s.fromNativeBroker,requestId:s.requestId},e.correlationId),s)).catch(s=>{throw this.eventHandler.emitEvent(A.ACQUIRE_TOKEN_FAILURE,T.Silent,null,s),s}).finally(()=>{document.removeEventListener("visibilitychange",n)})}async acquireTokenSilentNoIframe(e,t){return te.isNativeAvailable(this.config,this.logger,this.nativeExtensionProvider,e.authenticationScheme)&&e.account.nativeAccountId?(this.logger.verbose("acquireTokenSilent - attempting to acquire token from native platform"),this.acquireTokenNative(e,b.acquireTokenSilent_silentFlow).catch(async n=>{throw n instanceof Z&&we(n)?(this.logger.verbose("acquireTokenSilent - native platform unavailable, falling back to web flow"),this.nativeExtensionProvider=void 0,g(ae)):n})):(this.logger.verbose("acquireTokenSilent - attempting to acquire token from web flow"),m(this.acquireTokenFromCache.bind(this),l.AcquireTokenFromCache,this.logger,this.performanceClient,e.correlationId)(e,t).catch(n=>{if(t===q.AccessToken)throw n;return this.eventHandler.emitEvent(A.ACQUIRE_TOKEN_NETWORK_START,T.Silent,e),m(this.acquireTokenByRefreshToken.bind(this),l.AcquireTokenByRefreshToken,this.logger,this.performanceClient,e.correlationId)(e,t)}))}}function mc(a,e){const t=!(a instanceof j&&a.subError!==Ct),n=a.errorCode===z.INVALID_GRANT_ERROR||a.errorCode===ae,o=t&&n||a.errorCode===ht||a.errorCode===ln,r=ns.includes(e);return o&&r}/*! @azure/msal-browser v3.26.1 2024-10-08 */async function fc(a,e){const t=new ye(a);return await t.initialize(),Et.createController(t,e)}/*! @azure/msal-browser v3.26.1 2024-10-08 */class Wr{static async createPublicClientApplication(e){const t=await fc(e);return new Wr(e,t)}constructor(e,t){this.controller=t||new Et(new ye(e))}async initialize(e){return this.controller.initialize(e)}async acquireTokenPopup(e){return this.controller.acquireTokenPopup(e)}acquireTokenRedirect(e){return this.controller.acquireTokenRedirect(e)}acquireTokenSilent(e){return this.controller.acquireTokenSilent(e)}acquireTokenByCode(e){return this.controller.acquireTokenByCode(e)}addEventCallback(e,t){return this.controller.addEventCallback(e,t)}removeEventCallback(e){return this.controller.removeEventCallback(e)}addPerformanceCallback(e){return this.controller.addPerformanceCallback(e)}removePerformanceCallback(e){return this.controller.removePerformanceCallback(e)}enableAccountStorageEvents(){this.controller.enableAccountStorageEvents()}disableAccountStorageEvents(){this.controller.disableAccountStorageEvents()}getAccount(e){return this.controller.getAccount(e)}getAccountByHomeId(e){return this.controller.getAccountByHomeId(e)}getAccountByLocalId(e){return this.controller.getAccountByLocalId(e)}getAccountByUsername(e){return this.controller.getAccountByUsername(e)}getAllAccounts(e){return this.controller.getAllAccounts(e)}handleRedirectPromise(e){return this.controller.handleRedirectPromise(e)}loginPopup(e){return this.controller.loginPopup(e)}loginRedirect(e){return this.controller.loginRedirect(e)}logout(e){return this.controller.logout(e)}logoutRedirect(e){return this.controller.logoutRedirect(e)}logoutPopup(e){return this.controller.logoutPopup(e)}ssoSilent(e){return this.controller.ssoSilent(e)}getTokenCache(){return this.controller.getTokenCache()}getLogger(){return this.controller.getLogger()}setLogger(e){this.controller.setLogger(e)}setActiveAccount(e){this.controller.setActiveAccount(e)}getActiveAccount(){return this.controller.getActiveAccount()}initializeWrapperLibrary(e,t){return this.controller.initializeWrapperLibrary(e,t)}setNavigationClient(e){this.controller.setNavigationClient(e)}getConfiguration(){return this.controller.getConfiguration()}async hydrateCache(e,t){return this.controller.hydrateCache(e,t)}clearCache(e){return this.controller.clearCache(e)}}export{j as I,Wr as P};
